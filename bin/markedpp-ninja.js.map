{"version":3,"sources":["webpack://markedpp-ninja/webpack/universalModuleDefinition","webpack://markedpp-ninja/webpack/bootstrap","webpack://markedpp-ninja/./src/defaults.js","webpack://markedpp-ninja/./src/InlineLexer.js","webpack://markedpp-ninja/./src/rules.js","webpack://markedpp-ninja/./src/Renderer.js","webpack://markedpp-ninja/./src/Numbering.js","webpack://markedpp-ninja/./src/anchorSlugger.js","webpack://markedpp-ninja/./src/browser.js","webpack://markedpp-ninja/./src/ppInclude-browser.js","webpack://markedpp-ninja/./src/markedppninja.js","webpack://markedpp-ninja/./src/Lexer.js","webpack://markedpp-ninja/./src/utils.js","webpack://markedpp-ninja/./src/Parser.js","webpack://markedpp-ninja/./src/Anchor.js","webpack://markedpp-ninja/./node_modules/emoji-regex/index.js","webpack://markedpp-ninja/./node_modules/html-entities/lib/index.js","webpack://markedpp-ninja/./node_modules/html-entities/lib/named-references.js","webpack://markedpp-ninja/./node_modules/html-entities/lib/numeric-unicode-map.js","webpack://markedpp-ninja/./node_modules/html-entities/lib/surrogate-pairs.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gfm","include","toc","numberedheadings","ref","breaks","tags","level","minlevel","smartlists","autonumber","autoid","marked","markdownit","unified","pandoc","github","gitlab","bitbucket","ghost","inline","require","defaults","InlineLexer","options","this","tokens","rules","assign","opts","lex","src","cap","escape","exec","substring","length","push","type","text","inLink","url","tag","link","raw","href","title","reflink","nolink","strong","char","em","code","br","del","Error","charCodeAt","noop","replace","regex","opt","source","self","val","RegExp","block","newline","fences","hr","heading","lheading","headingid","blockquote","list","html","def","table","paragraph","ppinclude","ppnumberedheadings","pptoc","ppref","item","bullet","_tag","preproc","_ppopts_","_ppinclude_","_ppincludeCompat_","_ppnumberedheadings_","_pptoc_","_pptocCompat1_","_pptocCompat2_","_pptocCompat3_","_ppref_","_pprefCompat1_","_pprefCompat2_","autolink","_inside","_href","Numbering","Renderer","number","anchor","atx","body","listitem","indent","lang","fence","reference","codeblock","label","image","refimage","noimage","chars","sortByTitle","a","b","_a","toLowerCase","_b","references","refs","out","map","sort","forEach","join","tableOfContents","omitlevel","joinOpts","numbered","omit","numbering","renderLink","sanitizeHeadings","filter","depth","numberedHeadings","count","undefined","some","tt","space","maxLevel","minLevel","skip","start","obj","tmp","Array","isArray","init","_","last","reset","emojiRegex","entities","MODE","BITBUCKET","GHOST","GITHUB","GITLAB","MARKDOWNIT","MARKED","PANDOC","UNIFIED","RE_CJK","RE_ENTITIES","RE_SPECIALS_DOT","RE_SPECIALS","basicGithubId","getGithubId","getBitbucketId","_m","normalize","getGhostId","decode","getGitlabId","getPandocId","trim","test","getMarkedId","_text","charAt","String","fromCharCode","parseInt","slugger","header","result","encodeURIComponent","getMarkDownItAnchorId","input","asciiOnlyToLowerCase","encodeURI","ppInclude","markedppninja","path","normalizeArray","parts","allowAboveRoot","up","splice","unshift","resolve","resolvedPath","resolvedAbsolute","arguments","split","splitPathRe","splitPath","filename","slice","dirname","dir","substr","async","_eachLimit","limit","arr","iterator","callback","completed","started","running","replenish","err","eachLimit","fn","Lexer","location","pathname","lexed","_options","token","done","path_","req","XMLHttpRequest","method","params","data","queryString","open","setRequestHeader","headers","onreadystatechange","readyState","status","responseText","send","e","console","log","xhr","protocol","host","message","lexer","sep","ntokens","_tokens","Parser","parse","int","repeat","KEY","KEYVALUE","KEYVALUES","top","bull","next","loose","splitOpts","ordered","match","indexOf","pedantic","bq","range","pre","str","x","isNaN","min","max","undef","num","times","ret","Anchor","REMOVENUMBER","renderer","anchorMode","k","_anchors","updateAutoIdentifier","tok","peek","uniq","headingAutoId","inlineText","includes","getInlineAnchorText","inc","headings","prep","id","omitMatch","skipFlag","inlinetok","toString","JSON","stringify","_counters","_mode","_startCnt","_fn","args","_inc","isInc","cnt","__assign","apply","named_references_1","numeric_unicode_map_1","surrogate_pairs_1","allNamedReferences","namedReferences","all","html5","encodeRegExps","specialChars","nonAscii","nonAsciiPrintable","extensive","defaultEncodeOptions","numeric","encode","_c","_d","_e","encodeRegExp","characters","isHex","lastIndex","index","result_1","code_1","getCodePoint","defaultDecodeOptions","scope","strict","attribute","baseDecodeRegExps","xml","bodyRegExps","html4","decodeRegExps","outOfBoundsChar","defaultDecodeEntityOptions","decodeEntity","entity","decodeResultByReference_1","decodeSecondChar_1","decodeCode_1","fromCodePoint","numericUnicodeMap","decodeRegExp","isAttribute","isStrict","replaceResult_1","replaceMatch_1","replaceLastIndex_1","replaceInput_1","decodeResult_1","decodeEntityLastChar_2","decodeResultByReference_2","decodeSecondChar_2","decodeCode_2","$","fj","0","128","130","131","132","133","134","135","136","137","138","139","140","142","145","146","147","148","149","150","151","152","153","154","155","156","158","159","astralCodePoint","Math","floor","codePointAt","position","highSurrogateFrom","highSurrogateTo"],"mappings":"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AI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,aAAa,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,SAAS,IAAI,UAAU,IAAI,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,KAAK2L,WAAW,CAAC,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,QAAQ,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,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S,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,SAAS,IAAI,UAAU,IAAI,WAAW,IAAI,aAAa,IAAI,aAAa,IAAI,QAAQ,IAAI,WAAW,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,KAAK,QAAQ,KAAK,YAAY,IAAI,SAAS,KAAK,SAAS,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,IAAI,aAAa,IAAI,WAAW,IAAI,UAAU,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,aAAa,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,KAAK,SAAS,IAAI,UAAU,IAAI,UAAU,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,YAAY,IAAI,SAAS,IAAI,YAAY,IAAI,SAAS,KAAK,QAAQ,IAAI,SAAS,IAAI,cAAc,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,UAA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","file":"markedpp-ninja.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"markedpp-ninja\"] = factory();\n\telse\n\t\troot[\"markedpp-ninja\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/*\n* default values\n*/\nconst defaults = {\n  gfm: true, // consider gfm fences\n  include: true, // enable !includes\n  toc: true, // enable !toc\n  numberedheadings: true, // enable !numberedheadings\n  ref: true, // enable !ref\n\n  breaks: true, // render <br> tags for Table of Contents with numbered style\n  tags: true, // render pre-proc tags <!-- !command -->\n  level: 3, // default level for !toc and !numberheadings\n  minlevel: 1, // default minlevel for !toc and !numberheadings\n  smartlists: false, // add newline on joined bullet lists using different bullet chars\n\n  autonumber: true, // renumber lists\n  autoid: false, // update identifiers on headings automatically (adds <a name=> anchors)\n  // anchor mode for heading auto identifiers\n  marked: true,\n  markdownit: false,\n  unified: false, // same as github\n  pandoc: false,\n  github: false,\n  gitlab: false,\n  bitbucket: false,\n  ghost: false\n}\n\nmodule.exports = defaults\n","const { inline } = require('./rules')\nconst defaults = require('./defaults')\n\n/**\n* Inline Lexer\n* @constructor\n*/\nfunction InlineLexer (options) {\n  this.tokens = []\n  this.options = options || defaults\n  this.rules = inline\n  if (this.options.gfm) {\n    Object.assign(this.rules, inline.opts.gfm)\n  }\n  if (this.options.breaks) {\n    Object.assign(this.rules, inline.opts.gfm, inline.opts.breaks)\n  }\n}\n\n/**\n* Expose Inline Rules\n*/\nInlineLexer.rules = inline\n\n/**\n* Static Lexing\n*/\nInlineLexer.lex = function (src, options) {\n  const inline = new InlineLexer(options)\n  return inline.lex(src)\n}\n\n/**\n* Lexing\n*/\nInlineLexer.prototype.lex = function (src) {\n  let cap\n\n  while (src) {\n    // escape\n    if ((cap = this.rules.escape.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'escape',\n        text: cap[1]\n      })\n      continue\n    }\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'url',\n        text: cap[1]\n      })\n      continue\n    }\n    // tag\n    if ((cap = this.rules.tag.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'tag',\n        text: cap[0]\n      })\n      continue\n    }\n    // link\n    if ((cap = this.rules.link.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: (cap[1] ? 'image' : 'link'),\n        raw: cap[0],\n        text: cap[2],\n        href: cap[3],\n        title: cap[4]\n      })\n      continue\n    }\n    // reflink\n    if ((cap = this.rules.reflink.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: (cap[1] ? 'refimage' : 'reflink'),\n        raw: cap[0],\n        text: cap[2],\n        ref: cap[3]\n      })\n      continue\n    }\n    // nolink\n    if ((cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: (cap[1] ? 'noimage' : 'nolink'),\n        raw: cap[0],\n        text: cap[2]\n      })\n      continue\n    }\n    // strong\n    if ((cap = this.rules.strong.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'strong',\n        text: cap[2] || cap[1],\n        char: /^(..)/.exec(cap[0])[0]\n      })\n      continue\n    }\n    // em\n    if ((cap = this.rules.em.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'em',\n        text: cap[2] || cap[1],\n        char: /^(.)/.exec(cap[0])[0]\n      })\n      continue\n    }\n    // code\n    if ((cap = this.rules.code.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'code',\n        text: cap[0]\n      })\n      continue\n    }\n    // br\n    if ((cap = this.rules.br.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'br',\n        text: cap[0]\n      })\n      continue\n    }\n    // del (gfm)\n    if ((cap = this.rules.del.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'del',\n        text: cap[1]\n      })\n      continue\n    }\n    // text\n    if ((cap = this.rules.text.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      })\n      continue\n    }\n    // no match\n    if (src) {\n      throw new\n      Error('Infinite loop on byte: ' + src.charCodeAt(0))\n    }\n  }\n\n  return this.tokens\n}\n\nmodule.exports = InlineLexer\n","/* eslint-disable func-call-spacing, no-unexpected-multiline */\n\nfunction noop () {}\nnoop.exec = noop\n\nfunction replace (regex, opt) {\n  regex = regex.source\n  opt = opt || ''\n  return function self (name, val) {\n    if (!name) return new RegExp(regex, opt)\n    val = val.source || val\n    val = val.replace(/(^|[^[])\\^/g, '$1')\n    regex = regex.replace(name, val)\n    return self\n  }\n}\n\n/*\n * block lexer rules\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^headingid *(#{1,6}) *([^\\n]+?) *#* *(?:\\n|$)/,\n  lheading: /^headingid([^\\n]+)\\n *(=|-){2,} *(?:\\n|$)/,\n  headingid: /(?: *<a name=\"([^\"]+)\" *(?:\\/>|> *<\\/a>|>) *\\n{1,2})?/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*)+(?:\\n|$)/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n?|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n|$)/,\n  table: noop,\n  // ~ paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|list|tag|def))+)\\n*/, // TODO - ok according to commonmark\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/,\n  // ----\n  ppinclude: noop,\n  ppnumberedheadings: noop,\n  pptoc: noop,\n  ppref: noop\n}\n\n// join the rules\nblock.bullet = /(?:[*+-]|\\d+\\.)/\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/\nblock.item = replace(block.item, 'gm')\n(/bull/g, block.bullet)\n()\n\nblock.list = replace(block.list)\n(/bull/g, block.bullet)\n('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n('def', '\\\\n+(?=' + block.def.source + ')')\n()\n\nblock.blockquote = replace(block.blockquote)\n('def', block.def)\n()\n\nblock.heading = replace(block.heading)\n('headingid', block.headingid)\n()\nblock.lheading = replace(block.lheading)\n('headingid', block.headingid)\n()\n\n// list of allowed tags - TODO\n// ~ block._tag = '(?!(?:' +\n// ~ 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' +\n// ~ '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' +\n// ~ '|span|br|wbr|ins|del|img|x-[a-z]+)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\n// allow all tags\nblock._tag = '(?!(?:[A-Za-z][A-Za-z-]*)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b'\n\nblock.html = replace(block.html)\n('comment', /<!--[\\s\\S]*?-->/)\n('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n(/tag/g, block._tag)\n()\n\nblock.paragraph = replace(block.paragraph)\n('hr', block.hr)\n('heading', block.heading)\n('lheading', block.lheading)\n('blockquote', block.blockquote)\n// ~ ('list', block.list) // TODO - ok according to commonmark\n('tag', '<' + block._tag)\n('def', block.def)\n()\n\nblock.opts = {}\n\nblock.opts.gfm = {\n  fences: /^( *)(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\2 *(?:\\n|$)/\n}\n\n/*\n * preprocessor rules\n */\nconst preproc = {\n  _ppopts_: / ?(?:\\(([^)]+)\\))?/,\n\n  ppinclude: /^( *)(?:!(?:include)_ppopts_|_ppinclude_|_ppincludeCompat_) *(?:\\n|$)/,\n  _ppinclude_: /<!-- *include_ppopts_ *-->(?:(?!<!-- *\\/include * -->)[^])*<!-- *\\/include * -->/,\n  _ppincludeCompat_: /!INCLUDE \"([^\"]+)\"/,\n\n  ppnumberedheadings: /^ *(?:!(?:numberedheadings)_ppopts_|_ppnumberedheadings_) *(?:\\n+|$)/,\n  _ppnumberedheadings_: /<!-- !*numberedheadings_ppopts_ *-->/,\n\n  pptoc: /^(?:!(?:toc)_ppopts_|_pptoc_|_pptocCompat1_|_pptocCompat2_|_pptocCompat3_) *(?:\\n+|$)/,\n  _pptoc_: /<!-- *!toc_ppopts_ *-->(?:(?!<!-- *toc! * -->)[^])*<!-- *toc! * -->/,\n  _pptocCompat1_: /!TOC/,\n  _pptocCompat2_: /<!-- *toc *-->(?:(?!<!-- *(?:\\/toc|toc stop) * -->)[^])*<!-- *(?:\\/toc|toc stop) * -->/, // marked-toc, markdown-pp syntax\n  _pptocCompat3_: /<!-- *toc *-->/,\n\n  ppref: /^(?:!(?:ref)|_ppref_|_pprefCompat1_|_pprefCompat2_) *(?:\\n|$)/,\n  _ppref_: /<!-- *!ref *-->(?:(?!<!-- *ref! * -->)[^])*<!-- *ref! * -->/,\n  _pprefCompat1_: /!REF/,\n  _pprefCompat2_: /<!-- *ref *-->(?:(?!<!-- *\\/ref * -->)[^])*<!-- \\/ref * -->/\n}\n\npreproc.ppinclude = replace(preproc.ppinclude)\n('_ppinclude_', preproc._ppinclude_)\n('_ppincludeCompat_', preproc._ppincludeCompat_)\n('_ppopts_', preproc._ppopts_)\n('_ppopts_', preproc._ppopts_)\n()\npreproc.ppnumberedheadings = replace(preproc.ppnumberedheadings)\n('_ppnumberedheadings_', preproc._ppnumberedheadings_)\n('_ppopts_', preproc._ppopts_)\n('_ppopts_', preproc._ppopts_)\n()\npreproc.pptoc = replace(preproc.pptoc)\n('_pptoc_', preproc._pptoc_)\n('_ppopts_', preproc._ppopts_)\n('_ppopts_', preproc._ppopts_)\n('_pptocCompat1_', preproc._pptocCompat1_)\n('_pptocCompat2_', preproc._pptocCompat2_)\n('_pptocCompat3_', preproc._pptocCompat3_)\n()\npreproc.ppref = replace(preproc.ppref)\n('_ppref_', preproc._ppref_)\n('_pprefCompat1_', preproc._pprefCompat1_)\n('_pprefCompat2_', preproc._pprefCompat2_)\n()\n\nblock.opts.include = {\n  ppinclude: preproc.ppinclude\n}\nblock.opts.numberedheadings = {\n  ppnumberedheadings: preproc.ppnumberedheadings\n}\nblock.opts.toc = {\n  pptoc: preproc.pptoc\n}\nblock.opts.ref = {\n  ppref: preproc.ppref\n}\n\n/*\n * inline lexer rules\n */\nconst inline = {\n  escape: /^\\\\([\\\\`*{}[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^(!)?\\[(inside)\\]\\(href\\)/,\n  reflink: /^(!)?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^(!)?\\[((?:\\[[^\\]]*\\]|[^[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<![_*`]| {2,}\\n|$)/,\n  _inside: /(?:\\[[^\\]]*\\]|[^[\\]]|\\](?=[^[]*\\]))*/,\n  _href: /\\s*<?([\\s\\S]*?)>?(?:\\s+(['\"][\\s\\S]*?['\"]))?\\s*/\n}\n\ninline.link = replace(inline.link)\n('inside', inline._inside)\n('href', inline._href)\n()\n\ninline.reflink = replace(inline.reflink)\n('inside', inline._inside)\n()\n\ninline.opts = {}\n\ninline.opts.gfm = {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n  (']|', '~]|')\n  ('|', '|https?://|')\n  ()\n}\n\ninline.opts.breaks = {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.opts.gfm.text)('{2,}', '*')()\n}\n\nmodule.exports = {\n  block,\n  inline\n}\n\n// if (typeof require !== \"undefined\" && require.main === module) console.log(block); // TODO - debugging\n","const Numbering = require('./Numbering')\nconst defaults = require('./defaults')\n\n/**\n * Renderer\n * @constructor\n * @param {Object} options\n */\nfunction Renderer (options) {\n  this.options = options || {}\n}\n\n/// / ---- block level\n\n/**\n * Render heading as markdown\n * @param {String} text - Heading text\n * @param {Number} level - Heading level\n * @param {String} raw - Raw heading text (without numbers)\n * @return {String} rendered output\n */\nRenderer.prototype.heading = function (text, level, raw, number, autoid, anchor) {\n  let atx = ''\n  if (anchor) {\n    atx += '<a name=\"' + anchor + '\"></a>\\n\\n'\n  } else if (this.options.autoid && autoid) {\n    atx += '<a name=\"' + autoid + '\"></a>\\n\\n'\n  }\n  atx += '########'.substring(0, level)\n  return atx + ' ' + text + '\\n'\n}\n\n/**\n * Render text\n * @param {String} text - text\n * @return {String} rendered output\n */\nRenderer.prototype.paragraph = function (text) {\n  return text // TODO\n}\n\n/**\n * Render newline `<br>`\n * @param {String} text - text\n * @return {String} rendered output\n */\nRenderer.prototype.newline = function (text) {\n  return text\n}\n\n/**\n * Renders a blockquote\n * @param {String} body - body of blockquote\n * @return {String} rendered output\n */\nRenderer.prototype.blockquote = function (body) {\n  // ~ return body.replace(/\\n/gm, '\\n> ');\n  return body.replace(/\\n$/, '').replace(/^/gm, '> ') + '\\n'\n}\n\n/**\n * Renders a list\n * @param {String} body - body of list\n * @return {String} rendered output\n */\nRenderer.prototype.list = function (body /*, ordered */) {\n  return body.replace(/\\n$/, '')\n}\n\n/**\n * Renders a listitem\n * @param {String} bullet - bullet char\n * @param {String} text - text of listitem\n * @return {String} rendered output\n */\nRenderer.prototype.listitem = function (bullet, text) {\n  let indent = ''\n  bullet += ' '\n  for (let i = 0; i < bullet.length; i++) {\n    indent += ' '\n  }\n  return bullet + text.replace(/\\n(?!\\n|$)/gm, '\\n' + indent) + '\\n'\n}\n\n/**\n * Render fenced code blocks\n * @param {String} code - code block\n * @param {String} lang - language of code block\n * @return {String} rendered output\n */\nRenderer.prototype.fences = function (code, lang, indent, fences) {\n  return this.fence(lang, indent, fences) + code + '\\n' + this.fence('', indent, fences)\n}\n\n/**\n * Render a single reference as markdown\n * @param {String} ref - reference name\n * @param {String} href - URL of reference\n * @param {String} title - Title of reference\n * @return {String} rendered output\n */\nRenderer.prototype.reference = function (ref, href, title) {\n  return '[' + ref + ']: ' + href + (title ? ' \"' + title + '\"' : '') + '\\n'\n}\n\n/**\n * Render a ppinclude which could not be resolved\n * @param {String} text - text\n * @param {String} indent - indent as whitespaces string\n * @param {String} lang - language of included file\n * @return {String} rendered output\n */\nRenderer.prototype.include = function (text, indent, lang) {\n  return indent + '!include (' + text + (lang ? ' lang=' + lang : '') + ')\\n'\n}\n\n/**\n * Render GFM fences\n * @param {String} lang - language of fences block\n * @return rendered output\n */\nRenderer.prototype.fence = function (lang, indent, fences) {\n  fences = fences || '```'\n  indent = indent || ''\n  return indent + fences + (lang || '') + '\\n'\n}\n\n/**\n * Render codeblock\n * @param {String} text - text\n * @return rendered output\n */\nRenderer.prototype.codeblock = function (text) {\n  return text\n}\n/**\n * Render html\n * @param {String} text - text\n * @return rendered output\n */\nRenderer.prototype.html = function (text) {\n  return text\n}\n/**\n * Render horizontal ruler\n * @param {String} text - text\n * @return rendered output\n */\nRenderer.prototype.hr = function (text) {\n  return text\n}\n\n/// / ---- inline level\n\nRenderer.prototype.escape = function (text) {\n  return '\\\\' + text\n}\nRenderer.prototype.url = function (text) {\n  return text\n}\nRenderer.prototype.tag = function (text) {\n  return text\n}\nRenderer.prototype.link = function (text, label, href, title) {\n  return '[' + label + '](' + href + (title ? ' ' + title : '') + ')'\n}\nRenderer.prototype.reflink = function (text, label, ref) {\n  return '[' + label + '][' + ref + ']'\n}\nRenderer.prototype.nolink = function (text, label) {\n  return '[' + label + ']'\n}\nRenderer.prototype.image = function (text, label, href, title) {\n  return '!' + this.link(text, label, href, title)\n}\nRenderer.prototype.refimage = function (text, label, ref) {\n  return '!' + this.reflink(text, label, ref)\n}\nRenderer.prototype.noimage = function (text, label) {\n  return '!' + this.nolink(text, label)\n}\nRenderer.prototype.strong = function (text, chars) {\n  return chars + text + chars\n}\nRenderer.prototype.em = function (text, char) {\n  return char + text + char\n}\nRenderer.prototype.del = function (text) {\n  return '~~' + text + '~~'\n}\nRenderer.prototype.text = function (text) {\n  return text\n}\nRenderer.prototype.br = function (text) {\n  return text\n}\nRenderer.prototype.code = function (text) {\n  return text\n}\n\n/**\n * Sorter to sort reference by title\n * @api private\n */\nRenderer.sortByTitle = function (a, b) {\n  const _a = a.title.toLowerCase()\n  const _b = b.title.toLowerCase()\n\n  if (_a > _b) {\n    return 1\n  } else if (_a < _b) {\n    return -1\n  } else {\n    return 0\n  }\n}\n\n/**\n * Render all references\n * @param {Array} refs : Array of Objects `{ ref: {String}, href: {String}, title: {String} }`\n * @return {String} rendered output\n */\nRenderer.prototype.references = function (refs) {\n  const out = []\n\n  refs.map(ref => {\n    if (!ref.title) {\n      ref.title = ref.ref\n    }\n    return ref\n  }).sort(Renderer.sortByTitle)\n    .forEach(function (ref) {\n      out.push('* [' + ref.title + '][' + ref.ref + ']')\n    })\n  if (this.options.tags) {\n    return '<!-- !ref -->\\n\\n' + out.join('\\n') + '\\n\\n<!-- ref! -->\\n'\n  } else {\n    return out.join('\\n') + '\\n'\n  }\n}\n\n/**\n * Render table of contents\n * @param {Array} toc - Array of Objects of type:\n * ```\n * { text: {String},\n *   depth: {Number}\n * }\n * ```\n * @param {Object} options - options\n * @param {Number} options.depth - show TOC up to depth\n * @param {Boolean} options.numbered - if true display numbered instead of bullet list\n * @return {String} rendered output\n */\nRenderer.prototype.tableOfContents = function (toc, options) {\n  let omitlevel\n  const opts = this.joinOpts({\n    level: options.level,\n    minlevel: options.minlevel,\n    numbered: options.numbered,\n    omit: options.omit\n  })\n  const numbering = new Numbering()\n  const br = (this.options.breaks ? ' <br>' : '')\n  const level = options.level || defaults.level // standard depth of TOC\n  const minlevel = options.minlevel || defaults.minlevel //\n\n  const renderLink = (text, autoid) => '[' + this.sanitizeHeadings(text) + '](#' + autoid + ')'\n\n  const out = toc.filter(t => {\n    if (t.depth <= level && t.depth >= minlevel) {\n      return true\n    }\n    return false\n  }).map(t => {\n    if (!this.options.numberedHeadings && options.numbered) {\n      t.number = numbering.count(t.depth - minlevel + 1)\n    }\n    return t\n  }).filter(t => {\n    if (options.omit) {\n      if (omitlevel) { // omit the branch below as well...\n        if (t.depth > omitlevel) {\n          return false\n        } else {\n          omitlevel = undefined // reset\n        }\n      }\n      return !options.omit.some(tt => {\n        if (tt === t.raw) {\n          omitlevel = t.depth\n          return true\n        }\n        return false\n      })\n    }\n    return true\n  }).map(t => {\n    if (options.numbered) {\n      // render numbered list\n      if (this.options.numberedHeadings) {\n        return (t.number ? t.number + ' ' : '') + renderLink(t.raw, t.autoid) + br\n      } else {\n        return t.number + ' ' + renderLink(t.text, t.autoid) + br\n      }\n    } else {\n      // render bullet list\n      let space = ''\n      for (let i = 1; i < (t.depth - minlevel + 1 || 1); i++) {\n        space += '  '\n      }\n      return space + '* ' + renderLink(t.text, t.autoid)\n    }\n  })\n\n  if (this.options.tags) {\n    return '<!-- !toc ' + opts + '-->\\n\\n' + out.join('\\n') + '\\n\\n<!-- toc! -->\\n\\n'\n  } else {\n    return out.join('\\n') + '\\n\\n'\n  }\n}\n\n/**\n * Render numberedheadings command\n * @param {Number} maxLevel\n * @param {Number} minLevel\n * @return {String} rendered output\n */\nRenderer.prototype.numberedHeadings = function (maxLevel, minLevel, skip, start, omit) {\n  const opts = this.joinOpts({\n    level: maxLevel,\n    minlevel: minLevel,\n    skip: skip,\n    start: start,\n    omit: omit\n  })\n  if (this.options.tags) {\n    return '<!-- !numberedheadings ' + opts + '-->\\n\\n'\n  }\n  return ''\n}\n\nRenderer.prototype.joinOpts = function (obj) {\n  const tmp = []\n  for (const key in obj) {\n    let val = obj[key]\n    if (val === true) {\n      tmp.push(key)\n    } else if (val !== undefined) {\n      if (Array.isArray(val)) {\n        val = '\"' + val.join(';') + '\"'\n      }\n      tmp.push(key + '=' + val)\n    }\n  }\n  if (tmp.length > 0) {\n    return '(' + tmp.join(' ') + ') '\n  } else {\n    return ''\n  }\n}\n\nRenderer.prototype.sanitizeHeadings = function (heading) {\n  return heading.replace(/\\[([^\\]]*)\\]\\s*(?:\\[[^\\]]*\\]|\\([^)]*\\))/g, '$1')\n}\n\nmodule.exports = Renderer\n","/**\n * Number headings\n * @constructor\n * @api private\n */\nfunction Numbering (init) {\n  this._ = [0, 0, 0, 0, 0, 0, 0]\n  this.last = 1\n  this._[1] = (init ? init - 1 : 0)\n}\n\n/**\n * Reset number array per level\n * @param {Number} level\n */\nNumbering.prototype.reset = function (level) {\n  for (let i = level + 1; i < this._.length; i++) {\n    this._[i] = 0\n  }\n}\n\n/**\n * Generate output value for number\n * @param {Number} level\n * @return {String} number\n */\nNumbering.prototype.val = function (level) {\n  let out = this._[1]\n\n  for (let i = 2; i <= level; i++) {\n    out += '.' + this._[i]\n  }\n  return out + '\\\\.'\n}\n\n/**\n * Count up per level\n * @param {Number} level\n * @return {String} number\n */\nNumbering.prototype.count = function (level) {\n  if (level <= 6) {\n    if (this.last > level) {\n      this.reset(level)\n    }\n    this._[level] += 1\n    this.last = level\n    return this.val(level)\n  }\n}\n\nmodule.exports = Numbering\n","/* eslint-disable no-multi-spaces */\n\n/**\n * initially from https://raw.githubusercontent.com/thlorenz/anchor-markdown-header/master/anchor-markdown-header.js\n * @author thlorenz\n * @license MIT\n */\n\nconst emojiRegex = require('emoji-regex')\nconst entities = require('html-entities')\n\nconst MODE = {\n  BITBUCKET: 'bitbucket',\n  GHOST: 'ghost',\n  GITHUB: 'github',\n  GITLAB: 'gitlab',\n  MARKDOWNIT: 'markdownit',\n  MARKED: 'marked',\n  PANDOC: 'pandoc',\n  UNIFIED: 'unified'\n}\n\n// CJK punctuations 。？！，、；：【】（）〔〕［］﹃﹄“”‘’﹁﹂—…－～《》〈〉「」\nconst RE_CJK = /[\\u2014\\u2018\\u2019\\u201c\\u201d\\u2026\\u3001\\u3002\\u3008-\\u300d\\u3010\\u3011\\u3014\\u3015\\ufe41-\\ufe44\\uff01\\uff08\\uff09\\uff0c\\uff0d\\uff1a\\uff1b\\uff1f\\uff3b\\uff3d\\uff5e]/g\nconst RE_ENTITIES     = /&([a-z][a-z0-9]+|#[0-9]{2,4});/ig\nconst RE_SPECIALS_DOT = /[./?!:[\\]`,()*\"';{}+=<>~\\\\$|#@&\\u2013\\u2014^]/g\nconst RE_SPECIALS     =  /[/?!:[\\]`,()*\"';{}+=<>~\\\\$|#@&\\u2013\\u2014^]/g\n\n/**\n * basicGithubId\n * @private\n */\nfunction basicGithubId (text) {\n  return text\n    .toLowerCase()\n    .replace(/\\s+/g, '-')         // whitespaces\n    .replace(/%25|%/ig, '')       // remove single % signs\n    .replace(RE_ENTITIES, '')     // remove xml/html entities\n    .replace(RE_SPECIALS_DOT, '') // single chars that are removed\n    .replace(RE_CJK, '')          // CJK punctuations that are removed\n}\n\n/**\n * getGithubId - anchors used at github.com\n * @private\n * If no repetition, or if the repetition is 0 then ignore. Otherwise append '-' and the number.\n */\nfunction getGithubId (text) {\n  text = basicGithubId(text)\n  text = text.replace(emojiRegex(), '') // Strip emojis\n  return text\n}\n\n/**\n * getBitbucketId - anchors used at bitbucket.org\n * @private\n * @see: https://github.com/Python-Markdown/markdown/blob/master/markdown/extensions/toc.py#L25\n * There seams to be some \"magic\" preprocessor which could not be handled here.\n * @see: https://github.com/Python-Markdown/markdown/issues/222\n * If no repetition, or if the repetition is 0 then ignore. Otherwise append '_' and the number.\n * https://groups.google.com/d/msg/bitbucket-users/XnEWbbzs5wU/Fat0UdIecZkJ\n */\nfunction getBitbucketId (text) {\n  text = 'markdown-header-' + text\n    .toLowerCase()\n    .replace(/\\\\(.)/g, (_m, c) => c.charCodeAt(0)) // add escaped chars with their charcode\n    .normalize('NFKD').replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/[^\\w\\s-]/g, '')\n    .replace(/\\s+/g, '-')     // whitespace\n    .replace(/-+/g, '-')      // duplicated hyphen\n    .replace(/^-+|-+$/g, '')  // heading/ tailing hyphen\n  return text\n}\n\n/**\n * getGhostId - anchors used at ghost.org or in `npm i ghost`\n * @private\n * @see https://github.com/TryGhost/Koenig/blob/master/packages/kg-markdown-html-renderer/lib/markdown-html-renderer.js\n */\nfunction getGhostId (text) {\n  return entities.decode(text).replace(/[^a-z0-9]/ig, '')\n}\n\n/**\n * getGitlabId - anchors used at gitlab.com\n * @private\n * @see: https://github.com/gitlabhq/gitlabhq/blob/master/doc/user/markdown.md#header-ids-and-links\n * If no repetition, or if the repetition is 0 then ignore. Otherwise append '-' and the number.\n */\nfunction getGitlabId (text) {\n  text = basicGithubId(text)\n  text = text\n    .replace(emojiRegex(), '')  // Strip emojis\n    .replace(/-+/g, '-')        // duplicated hyphen\n  return text\n}\n\n/**\n * getPandocId - anchors used at pandoc\n * @private\n */\nfunction getPandocId (text) {\n  text = text\n    .replace(emojiRegex(), '') // Strip emojis\n    .toLowerCase()\n    .trim()\n    .replace(/%25|%/ig, '')   // remove single % signs\n    .replace(RE_ENTITIES, '') // remove xml/html entities\n    .replace(RE_SPECIALS, '') // single chars that are removed but not [.-]\n    .replace(/\\s+/g, '-')     // whitespaces\n    .replace(/^-+|-+$/g, '')  // heading/ tailing hyphen\n    .replace(RE_CJK, '')      // CJK punctuations that are removed\n\n  if (/^[0-9-]+$/.test(text)) {\n    text = 'section'\n  }\n  return text\n}\n\n/**\n * @see https://github.com/markedjs/marked/blob/master/src/helpers.js#L30\n */\nfunction unescapeMarked (html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, (_, n) => {\n    n = n.toLowerCase()\n    if (n === 'colon') return ':'\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1))\n    }\n    return ''\n  })\n}\n\n/**\n * getMarkedId - anchors used in `npm i marked`\n * @private\n * @see https://github.com/markedjs/marked/blob/master/src/Slugger.js#L19 v0.8.2\n */\nfunction getMarkedId (text) {\n  const _text = text.replace(/<(https?:\\/\\/[^>]+)>/g, '$1') // normalize links\n  return unescapeMarked(_text)\n    .toLowerCase()\n    .trim()\n    .replace(/<[!/a-z].*?>/ig, '') // remove html tags\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '') // remove unwanted chars\n    .replace(/\\s/g, '-')\n}\n\n/**\n * getMarkDownItAnchorId - anchors used with `npm i markdown-it-anchor`\n * @private\n * @see: https://github.com/valeriangalliat/markdown-it-anchor/blob/master/index.js#L1\n * If no repetition, or if the repetition is 0 then ignore. Otherwise append '_' and the number.\n * numbering starts at 2!\n */\nfunction getMarkDownItAnchorId (text) {\n  text = text\n    .replace(/^[<]|[>]$/g, '')// correct markdown format bold/url\n\n  const result = entities.decode(text).replace(/[^a-z0-9]/ig, '')\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, '-')\n\n  return encodeURIComponent(result)\n}\n\n/**\n * @private\n */\nfunction asciiOnlyToLowerCase (input) {\n  let result = ''\n  for (let i = 0; i < input.length; ++i) {\n    if (input[i] >= 'A' && input[i] <= 'Z') {\n      result += input[i].toLowerCase()\n    } else {\n      result += input[i]\n    }\n  }\n  return result\n}\n\n/**\n * Generates an anchor for the given header and mode.\n *\n * @param header      {String} The header to be anchored.\n * @param mode        {String} The anchor mode (github.com|nodejs.org|bitbucket.org|ghost.org|gitlab.com).\n * @return            {String} The header anchor that is compatible with the given mode.\n */\nfunction slugger (header, mode) {\n  mode = mode || 'marked'\n  let replace\n\n  switch (mode) {\n    case MODE.MARKED:\n      replace = getMarkedId\n      break\n    case MODE.MARKDOWNIT:\n      return getMarkDownItAnchorId(header)\n    case MODE.GITHUB:\n      replace = getGithubId\n      break\n    case MODE.GITLAB:\n      replace = getGitlabId\n      break\n    case MODE.PANDOC:\n      replace = getPandocId\n      break\n    case MODE.BITBUCKET:\n      replace = getBitbucketId\n      break\n    case MODE.GHOST:\n      replace = getGhostId\n      break\n    default:\n      throw new Error('Unknown mode: ' + mode)\n  }\n\n  const href = replace(asciiOnlyToLowerCase(header.trim()))\n\n  return encodeURI(href)\n}\n\nmodule.exports = {\n  MODE,\n  slugger\n}\n","const ppInclude = require('./ppInclude-browser')\nconst markedppninja = require('./markedppninja')\nmarkedppninja.ppInclude = ppInclude\n\nmodule.exports = markedppninja\n","/* globals XMLHttpRequest,location */\n\n/*\n * code from <https://github.com/joyent/node/blob/master/lib/path.js>\n * @credits Joyent\n */\nconst path = {\n  normalizeArray: function (parts, allowAboveRoot) {\n    // if the path tries to go above the root, `up` ends up > 0\n    let up = 0\n    for (let i = parts.length - 1; i >= 0; i--) {\n      const last = parts[i]\n      if (last === '.') {\n        parts.splice(i, 1)\n      } else if (last === '..') {\n        parts.splice(i, 1)\n        up++\n      } else if (up) {\n        parts.splice(i, 1)\n        up--\n      }\n    }\n\n    // if the path is allowed to go above the root, restore leading ..s\n    if (allowAboveRoot) {\n      for (; up--; up) {\n        parts.unshift('..')\n      }\n    }\n\n    return parts\n  },\n  resolve: function () {\n    let resolvedPath = ''\n    let resolvedAbsolute = false\n\n    for (let i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = (i >= 0) ? arguments[i] : '/'\n\n      // Skip empty and invalid entries\n      if (!path) {\n        continue\n      }\n\n      resolvedPath = path + '/' + resolvedPath\n      resolvedAbsolute = path.charAt(0) === '/'\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = this.normalizeArray(resolvedPath.split('/').filter(function (p) {\n      return !!p\n    }), !resolvedAbsolute).join('/')\n\n    return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.'\n  },\n  splitPathRe: /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/,\n  splitPath: function (filename) {\n    return this.splitPathRe.exec(filename).slice(1)\n  },\n  dirname: function (path) {\n    const result = this.splitPath(path)\n    const root = result[0]\n    let dir = result[1]\n\n    if (!root && !dir) {\n      // No dirname whatsoever\n      return '.'\n    }\n\n    if (dir) {\n      // It has a dirname, strip trailing slash\n      dir = dir.substr(0, dir.length - 1)\n    }\n\n    return root + dir\n  },\n  join: function () {\n    return Array.prototype.slice.call(arguments).join('/')\n  }\n}\n\n/*\n * code from <https://github.com/caolan/async.git>\n * @credits Caolan McMahon\n */\nconst async = {\n  _eachLimit: function (limit) {\n    return function (arr, iterator, callback) {\n      callback = callback || function () {}\n      if (!arr.length || limit <= 0) {\n        return callback()\n      }\n      let completed = 0\n      let started = 0\n      let running = 0;\n\n      (function replenish () {\n        if (completed >= arr.length) {\n          return callback()\n        }\n\n        while (running < limit && started < arr.length) {\n          started += 1\n          running += 1\n          iterator(arr[started - 1], function (err) {\n            if (err) {\n              callback(err)\n              callback = function () {}\n            } else {\n              completed += 1\n              running -= 1\n              if (completed >= arr.length) {\n                callback()\n              } else {\n                replenish()\n              }\n            }\n          }) // jshint ignore:line\n        }\n      })()\n    }\n  },\n  eachLimit: function (arr, limit, iterator, callback) {\n    const fn = this._eachLimit(limit)\n    fn(arr, iterator, callback)\n  }\n}\n\n/*\n * XHR Request\n * adapted code from <https://github.com/xui/xui/blob/master/src/js/xhr.js>\n * @credits Brian LeRoux, Brock Whitten, Rob Ellis\n */\nfunction xhr (url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = null\n  }\n  const o = options || {}\n  const req = new XMLHttpRequest()\n  const method = o.method || 'get'\n  const params = o.data || null\n\n  req.queryString = params\n  req.open(method, url, true)\n  req.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n\n  if (method.toLowerCase() === 'post') {\n    req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n  }\n\n  for (const key in o.headers) {\n    if (Object.prototype.hasOwnProperty.call(o.headers, key)) {\n      req.setRequestHeader(key, o.headers[key])\n    }\n  }\n\n  function stateChange () {\n    if (req.readyState === 4) {\n      if ((/^[20]/).test(req.status)) {\n        callback(null, req.responseText)\n      } else if ((/^[45]/).test(req.status)) {\n        callback(new Error(req.status))\n      }\n    }\n  }\n\n  req.onreadystatechange = stateChange\n\n  try {\n    req.send(params)\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('Error: Resolving URL ' + url)\n    callback(e)\n  }\n}\n\n/**\n * Include and Lex files\n * @param {Array} tokens - array of tokens\n * @param {Object} options - options to overwrite\n * @param {String} options.dirname - base directory from where to search files to include (If not specified then current working directory is used)\n * @param {Function} callback - `function(err, tokens)`\n */\nfunction ppInclude (tokens, Lexer, options, callback) {\n  const dirname = options.dirname || path.dirname(location.pathname)\n  const lexed = {}\n  const _options = Object.assign({}, options)\n  _options.tags = false\n\n  // ppInclude is used to detect recursions\n  if (!_options.ppInclude) {\n    _options.ppInclude = {}\n  }\n\n  async.eachLimit(tokens, 5, function (token, done) {\n    if (token.type === 'ppinclude' &&\n        typeof token.text === 'string' &&\n        !_options.ppInclude[token.text]) {\n      const path_ = path.resolve(path.join(dirname, token.text))\n      const url = location.protocol + '//' + location.host + path_\n\n      xhr(url, function (err, src) {\n        _options.ppInclude[token.text] = 1\n        _options.dirname = path.dirname(path_)\n        if (err) {\n          // eslint-disable-next-line no-console\n          console.log('Error: ' + err.message)\n          return done()\n        }\n        const lexer = new Lexer(_options)\n        const sep = '\\n' + token.indent\n        src = token.indent + src.split('\\n').join(sep)\n        if (src.substr(0 - sep.length) === sep) {\n          src = src.substr(0, src.length - sep.length + 1)\n        }\n        ppInclude(lexer.lex(src), Lexer, _options, function (err, ntokens) {\n          if (err) {\n            // TODO\n          }\n          lexed[token.text] = ntokens\n          done()\n        })\n      })\n    } else {\n      done()\n    }\n  },\n  function () {\n    const _tokens = []\n\n    // compose the new tokens array\n    tokens.forEach(function (token) {\n      if (token.type === 'ppinclude' &&\n          typeof token.text === 'string' &&\n          lexed[token.text] !== undefined) {\n        _tokens.push({\n          type: 'ppinclude_start',\n          text: token.text,\n          indent: token.indent,\n          lang: token.lang,\n          tags: options.tags\n        })\n        lexed[token.text].forEach(function (token) {\n          _tokens.push(Object.assign({}, token)) // clone tokens!\n        })\n        _tokens.push({\n          type: 'ppinclude_end',\n          indent: token.indent,\n          lang: token.lang,\n          tags: options.tags\n        })\n      } else {\n        _tokens.push(token)\n      }\n    })\n    callback(null, _tokens)\n  })\n}\n\nmodule.exports = ppInclude\n","/*!\n * markedppninja\n *\n * A preprocessor for markdown files\n *\n * @copyright 2014 commenthol\n * @licence MIT\n *\n * @note Code inspired by `marked` project\n * @credits Christopher Jeffrey <https://github.com/chjj/marked>\n * @note Forked from\n * @credits commenthol <https://github.com/commenthol/markedpp>\n */\n\nconst Lexer = require('./Lexer')\nconst InlineLexer = require('./InlineLexer')\nconst Parser = require('./Parser')\nconst Renderer = require('./Renderer')\nconst defaults = require('./defaults')\n\n/**\n * Markdown Preprocessor\n *\n * @module markedppninja\n * @param {String} src - markdown source to preprocess\n * @param {Object} options - options\n * @param {String} options.dirname - dirname of markdown source file - required to include other files\n * @param {Function} callback - callback function\n * ```\n * function({Error} err, {String} data)\n * ```\n */\nfunction markedppninja (src, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = null\n  }\n\n  // Try very hard to get the dirname\n  if (!options) {\n    options = Object.assign({}, defaults, { dirname: callback.dirname } || {})\n    if (!options.dirname) {\n      throw new Error('dirname is nullish on options and could not be set.')\n    }\n  } else {\n    options = Object.assign({}, defaults, options || {})\n    if (options.include) {\n      if (!options.dirname) {\n        if (callback.dirname) {\n          options.dirname = callback.dirname\n        } else {\n          throw new Error('dirname is nullish on options and could not be set.')\n        }\n      }\n    }\n  }\n\n  if (options.include) {\n    if (!options.dirname) {\n      throw new Error('options.dirname is nullish.')\n    }\n  }\n\n  Lexer.lex(markedppninja.ppInclude, src, options, function (err, tokens) {\n    let out = tokens\n    if (!err && tokens) {\n      out = Parser.parse(tokens, options)\n    }\n    callback(err, out)\n  })\n}\n\n/**\n * exports\n */\nmarkedppninja.defaults = defaults\nmarkedppninja.Lexer = Lexer\nmarkedppninja.InlineLexer = InlineLexer\nmarkedppninja.Renderer = Renderer\nmarkedppninja.Parser = Parser\n\nmodule.exports = markedppninja\n","const InlineLexer = require('./InlineLexer')\nconst {\n  block\n} = require('./rules')\nconst {\n  int,\n  repeat\n} = require('./utils')\nconst defaults = require('./defaults')\n\nconst KEY = /^(.+)$/\nconst KEYVALUE = /^([a-z0-9]+)=(.*)$/\nconst KEYVALUES = /^([a-z0-9]+)=([\"'])(.*?)\\2$/\n\n/**\n * Lexer\n * @constructor\n * @param {Object} options - overwrites default options\n */\nfunction Lexer (options) {\n  this.tokens = []\n  this.options = options || defaults\n  this.rules = block\n  if (this.options.gfm) {\n    Object.assign(this.rules, block.opts.gfm)\n  }\n  if (this.options.include) {\n    Object.assign(this.rules, block.opts.include)\n  }\n  if (this.options.numberedheadings) {\n    Object.assign(this.rules, block.opts.numberedheadings)\n  }\n  if (this.options.toc) {\n    Object.assign(this.rules, block.opts.toc)\n  }\n  if (this.options.ref) {\n    Object.assign(this.rules, block.opts.ref)\n  }\n}\n\n/**\n * Preprocessing\n * @param {String} src - markdown source\n * @return {Object} token\n */\nLexer.prototype.lex = function (src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n')\n\n  // ~ src = src.replace(/\\n/g, '↩\\n').replace(/ /g, '·') // TODO - debugging\n  return this.token(src, true)\n}\n\n/**\n * Lexing\n * @param {String} src - markdown source\n * @param {Boolean} top -\n * @return {Array} - array of tokens\n */\nLexer.prototype.token = function (src, top) {\n  let cap,\n    bull,\n    next,\n    l,\n    b,\n    i,\n    item,\n    space,\n    loose,\n    bq,\n    tmp,\n    opts\n\n  while (src) {\n    // newline\n    if ((cap = this.rules.newline.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'space',\n        text: cap[0]\n      })\n    }\n    // ppinclude\n    if ((cap = this.rules.ppinclude.exec(src))) {\n      src = src.substring(cap[0].length)\n      tmp = cap[2] || cap[3] || cap[4]\n      opts = Lexer.splitOpts(tmp)\n      tmp = tmp.replace(/ *(?:[a-z]+=[a-z0-9-]+)/, '').replace(/\\\\ /g, ' ')\n      this.tokens.push({\n        type: 'ppinclude',\n        text: tmp,\n        indent: opts.indent ? repeat(' ', opts.indent) : cap[1],\n        lang: opts.lang\n      })\n      continue\n    }\n    // code\n    if ((cap = this.rules.code.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'code',\n        text: cap[0]\n      })\n      continue\n    }\n    // fences (gfm)\n    if ((cap = this.rules.fences.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'fences',\n        indent: cap[1],\n        fences: cap[2],\n        lang: cap[3],\n        text: cap[4]\n      })\n      continue\n    }\n    /*\n     * heading\n     * cap[1] - headingid from <a name=\"\">\n     * cap[2] - heading char\n     * cap[3] - heading text\n     */\n    if ((cap = this.rules.heading.exec(src))) {\n      src = src.substring(cap[0].length)\n      tmp = new InlineLexer(this.options)\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2].length,\n        text: cap[3],\n        raw: cap[3],\n        autoid: null,\n        anchor: cap[1],\n        inline: tmp.lex(cap[3])\n      })\n      continue\n    }\n    /*\n     * lheading\n     * cap[1] - headingid from <a name=\"\">\n     * cap[2] - heading char\n     * cap[3] - heading text\n     */\n    if ((cap = this.rules.lheading.exec(src))) {\n      src = src.substring(cap[0].length)\n      tmp = new InlineLexer(this.options)\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[3] === '=' ? 1 : 2,\n        text: cap[2],\n        raw: cap[2],\n        autoid: null,\n        anchor: cap[1],\n        inline: tmp.lex(cap[2])\n      })\n      continue\n    }\n    // hr\n    if ((cap = this.rules.hr.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'hr',\n        text: cap[0]\n      })\n      continue\n    }\n    // blockquote\n    if ((cap = this.rules.blockquote.exec(src))) {\n      src = src.substring(cap[0].length)\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      })\n\n      cap = cap[0].replace(/^ *> ?/gm, '')\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top)\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      })\n\n      continue\n    }\n    // list -\n    if ((cap = this.rules.list.exec(src))) {\n      src = src.substring(cap[0].length)\n      bull = cap[2]\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1,\n        start: int(bull, true)\n      })\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item)\n\n      next = false\n      l = cap.length\n      i = 0\n\n      for (; i < l; i++) {\n        item = cap[i]\n        bull = this.rules.bullet.exec(item)[0]\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '')\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '')\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartlists && i !== l - 1) {\n          b = this.rules.bullet.exec(cap[i + 1])[0]\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src\n            i = l - 1\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item)\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n'\n          if (!loose) loose = next\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start',\n          text: bull\n        })\n\n        // Recurse.\n        this.token(item, false, bq)\n\n        this.tokens.push({\n          type: 'list_item_end'\n        })\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      })\n\n      continue\n    }\n    // ppnumberedheadings\n    if ((cap = this.rules.ppnumberedheadings.exec(src))) {\n      src = src.substring(cap[0].length)\n      opts = Lexer.splitOpts(cap[1] || cap[2])\n      if (typeof opts.omit === 'string') {\n        opts.omit = [opts.omit]\n      }\n      this.options.numberedHeadings = true\n      this.tokens.push({\n        type: 'ppnumberedheadings',\n        level: Lexer.range(opts.level, defaults.minlevel, 6, defaults.level),\n        minlevel: Lexer.range(opts.minlevel, defaults.minlevel, 6),\n        skip: opts.skip,\n        start: opts.start,\n        omit: opts.omit\n      })\n      continue\n    }\n    // pptoc\n    if ((cap = this.rules.pptoc.exec(src))) {\n      src = src.substring(cap[0].length)\n      opts = Lexer.splitOpts(cap[1] || cap[2])\n      if (typeof opts.omit === 'string') {\n        opts.omit = [opts.omit]\n      }\n      this.tokens.push({\n        type: 'pptoc',\n        level: Lexer.range(opts.level, defaults.minlevel, 6, defaults.level),\n        minlevel: Lexer.range(opts.minlevel, defaults.minlevel, 6),\n        numbered: opts.numbered,\n        omit: opts.omit\n      })\n      continue\n    }\n    // ppref\n    if ((cap = this.rules.ppref.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'ppref'\n      })\n      continue\n    }\n    // html\n    if ((cap = this.rules.html.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'html',\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      })\n      continue\n    }\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length)\n      this.tokens.push({\n        type: 'def',\n        ref: cap[1],\n        href: cap[2],\n        title: cap[3]\n      })\n      continue\n    }\n    // top-level paragraph\n    if (top && ((cap = this.rules.paragraph.exec(src)))) {\n      src = src.substring(cap[1].length)\n      tmp = new InlineLexer(this.options)\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1],\n        inline: tmp.lex(cap[1])\n      })\n      continue\n    }\n    // text\n    if ((cap = this.rules.text.exec(src))) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length)\n      tmp = new InlineLexer(this.options)\n      this.tokens.push({\n        type: 'text',\n        text: cap[0], // Todo run InlineLexer\n        inline: tmp.lex(cap[0])\n      })\n      continue\n    }\n    // no match\n    if (src) {\n      // ~ console.log('-->', src); // TODO - debugging\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0))\n    }\n  }\n\n  return this.tokens\n}\n\n/**\n * Expose Block Rules\n */\nLexer.rules = block\n\n/**\n * Static Lex Method\n * @param {String} src - markdown source\n * @param {Object} options - options to overwrite\n * @param {Function} callback - `function(err, tokens)`\n */\nLexer.lex = function (ppInclude, src, options, callback) {\n  const lexer = new Lexer(options)\n  const tokens = lexer.lex(src) // returns the lexed tokens\n  if (options.include) {\n    ppInclude(tokens, Lexer, options, function (err, tokens) {\n      callback(err, tokens, options)\n    })\n  } else {\n    callback(null, tokens, options)\n  }\n}\n\n/**\n * Split preproc command options\n * @param {String} str - string to split into key-value pairs\n */\nLexer.splitOpts = function (str) {\n  const opts = {}\n  let sep\n  let tmp = ''\n\n  ;(str || '').split(' ').forEach(function (s) {\n    if (/\\\\$|^[\"'].*[^\"']$/.test(s) || (sep && !sep.test(s))) {\n      tmp += s + ' '\n      return\n    }\n    if (/=([\"']).*[^\"']$/.test(s)) {\n      sep = s.replace(/^.*=([\"']).*[^\"']$/, '$1')\n      sep = new RegExp(sep + '$')\n      tmp += s + ' '\n      return\n    }\n    if (tmp) {\n      s = tmp + s\n      tmp = ''\n      sep = undefined\n    }\n    if (KEYVALUES.test(s)) {\n      s.replace(KEYVALUES, function (m, key, x, value) {\n        opts[key] = value.split(';')\n        opts[key] = opts[key].map(function (value) {\n          if (/^\\d+$/.test(value)) {\n            const tmp = parseInt(value, 10)\n            if (!isNaN(tmp)) {\n              value = tmp\n            }\n          }\n          return value\n        })\n        if (opts[key].length === 1) {\n          opts[key] = opts[key][0]\n        }\n      })\n    } else if (KEYVALUE.test(s)) {\n      s.replace(KEYVALUE, function (m, key, value) {\n        const tmp = parseInt(value, 10)\n        if (!isNaN(tmp)) {\n          value = tmp\n        }\n        opts[key] = value\n      })\n    } else if (KEY.test(s)) {\n      s = s.replace(/\\\\ /g, ' ').replace(/^([\"'])([^\\1]+)\\1$/, '$2')\n      if (/^!(.*)$/.test(s)) {\n        s = s.replace(/^!(.*)$/, '$1')\n        opts[s] = false\n      } else {\n        opts[s] = true\n      }\n    }\n  })\n\n  return opts\n}\n\n/**\n * Limit the range of input value `val`\n * @param {Number} val - value to check\n * @param {Number} min - min allowed value\n * @param {Number} max - max allowed value\n * @param {Number|undefined} def - default value - if val === def then `undefined` is returned\n * @return {Number} ranged val\n */\nLexer.range = function (val, min, max, def) {\n  if (val < min) {\n    return min\n  } else if (val > max) {\n    return max\n  } else {\n    if (def && val === def) {\n      return undefined\n    }\n    return val\n  }\n}\n\nmodule.exports = Lexer\n","function int (str, undef) {\n  const num = parseInt(str, 10)\n  if (isNaN(num)) {\n    if (undef === true) { return } else { return str }\n  }\n  return num\n}\n\nfunction repeat (str, times) {\n  times = times || 1\n  let ret = ''\n  for (let i = 0; i < times; i++) {\n    ret += str\n  }\n  return ret\n}\n\nmodule.exports = {\n  int,\n  repeat\n}\n","const InlineLexer = require('./InlineLexer')\nconst Renderer = require('./Renderer')\nconst Numbering = require('./Numbering')\nconst defaults = require('./defaults')\nconst Anchor = require('./Anchor')\nconst { MODE } = require('./anchorSlugger')\nMODE.UNIFIED = 'unified'\n\nconst REMOVENUMBER = /^([0-9]+\\\\?\\.)+ +/\n\n/**\n * Parser\n * @constructor\n * @param {Object} options\n * @param {Object} options.renderer - Custom renderer\n */\nfunction Parser (options) {\n  this.tokens = []\n  this.token = null\n  this.count = -1\n  this.indent = []\n  this.options = options || defaults\n  this.options.renderer = this.options.renderer || new Renderer() // jshint ignore:line\n  this.renderer = this.options.renderer\n  this.renderer.options = this.options\n\n  this.anchorMode = [\n    MODE.GHOST,\n    MODE.BITBUCKET,\n    MODE.GITLAB,\n    MODE.GITHUB,\n    MODE.PANDOC,\n    MODE.UNIFIED,\n    MODE.MARKDOWNIT,\n    MODE.MARKED\n  ].map(k => this.options[k] && k).filter(k => k)[0]\n  if (this.anchorMode === MODE.UNIFIED) {\n    this.anchorMode = MODE.GITHUB\n  } this._anchors = new Anchor(this.anchorMode)\n}\n\n/**\n * Parse Loop\n * @param {Array} tokens - Array of {Object} tokens:\n * ```\n * { type: {String} token type,\n *   ...: {*} other values\n * }\n * ```\n * @return {String} parsed output\n */\nParser.prototype.parse = function (tokens) {\n  this.tokens = tokens\n\n  this.updateAutoIdentifier()\n\n  let out = ''\n  while (this.next()) {\n    out += this.tok()\n  }\n\n  return out\n}\n\n/**\n * Next Token\n */\nParser.prototype.next = function () {\n  this.token = this.tokens[this.count += 1]\n  return this.token\n}\n\n/**\n * Preview Next Token\n */\nParser.prototype.peek = function () {\n  return this.tokens[this.count + 1] || 0\n}\n\n/**\n * Parse references\n */\nParser.prototype.references = function () {\n  const refs = []\n  const uniq = {\n    title: {},\n    ref: {}\n  }\n\n  this.tokens.forEach(function (token) {\n    if (token.type === 'def' && !/^#/.test(token.href)) {\n      if (token.title) {\n        uniq.title[token.ref] = token.title\n      } else {\n        uniq.ref[token.ref] = token.ref\n      }\n    }\n  })\n\n  for (const i in uniq.title) {\n    refs.push({\n      ref: i,\n      title: uniq.title[i]\n    })\n  }\n  for (const i in uniq.ref) {\n    if (!uniq.title[i]) {\n      refs.push({\n        ref: i,\n        title: i\n      })\n    }\n  }\n\n  return refs\n}\n\n/**\n * Parse Table of Contents\n */\nParser.prototype.tableOfContents = function () {\n  return this.tokens.filter(token => {\n    if (token.type === 'heading') {\n      return true\n    }\n    return false\n  })\n}\n\n/**\n * Generate a internal reference id (method used by marked)\n *\n * @api private\n * @param {Object} token - parsed token\n * @param {Object} opts - options\n * @param {Boolean} opts.raw - if true use `token.raw` for id generation othewise `token.text` is used\n * @return {String} id\n */\nParser.prototype.headingAutoId = function (token, opts) {\n  opts = opts || {\n    raw: false\n  }\n\n  if (token.anchor) {\n    return token.anchor\n  }\n\n  const inlineText = getInlineAnchorText(token, this.anchorMode)\n  const header = (\n    opts.raw\n      ? token.raw\n      : inlineText || token.text\n  ).replace(/^#/, '')\n  const id = this._anchors.get(header, opts.inc)\n  return id\n}\n\n/**\n * Update Auto Identifiers\n */\nParser.prototype.updateAutoIdentifier = function () {\n  const self = this\n  const headings = {}\n  this._anchors = new Anchor(this.anchorMode)\n\n  // sanitize the id before lookup\n  function prep (id) {\n    id = id.replace(/(?:%20|\\+)/g, ' ')\n    id = self.headingAutoId({ text: id })\n    return id\n  }\n\n  // obtain headings ids\n  this.tokens = this.tokens.map(token => {\n    if (token.type === 'heading') {\n      const raw = this.headingAutoId(token, { raw: true }) // needs to come first because of counter increment\n      const id = this.headingAutoId(token, { inc: true })\n      headings[raw] = '#' + id\n      headings[id] = '#' + id\n      token.autoid = id\n    }\n    return token\n  })\n\n  this.tokens = this.tokens.map(function (token) {\n    let id\n    if (token.inline) {\n      token.inline = token.inline.map(token => {\n        switch (token.type) {\n          case 'link':\n          case 'image':\n          {\n            id = prep(token.href)\n            if (headings[id]) {\n              token.href = headings[id]\n            }\n            break\n          }\n        }\n        return token\n      })\n    } else {\n      switch (token.type) {\n        case 'def':\n        {\n          if (token.href && token.href.indexOf('#') === 0) {\n            id = prep(token.href)\n            if (headings[id]) {\n              token.href = headings[id]\n            }\n            break\n          }\n        }\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Prepare headings text if numberedheadings option is set\n * updates all tokens containing headings\n * @param {Number} maxLevel\n * @param {Number} minLevel\n */\nParser.prototype.numberedHeadings = function (maxLevel, minLevel, skip, start, omit) {\n  const omitMatch = {}\n  let skipFlag = false\n  const numbering = new Numbering(start)\n\n  skip = skip || 0\n\n  ;(omit || []).forEach(function (key) {\n    omitMatch[key] = true\n  })\n\n  maxLevel = maxLevel || defaults.level\n  minLevel = minLevel || defaults.minlevel\n\n  this.tokens = this.tokens.map(token => {\n    if (token.type === 'heading') {\n      token.text = token.text.replace(REMOVENUMBER, '')\n      const tmp = token.raw.replace(REMOVENUMBER, '')\n      if (tmp !== token.raw && token.inline) {\n        // need to re-lex the inline tokens\n        token.inline = new InlineLexer(this.options).lex(tmp)\n      }\n      token.raw = tmp\n\n      if (token.depth === minLevel) {\n        if (skip > 0) {\n          skip -= 1\n          skipFlag = true\n        } else if (skip === 0) {\n          skipFlag = false\n        }\n      }\n\n      if (!skipFlag && !omitMatch[token.raw] && token.depth <= maxLevel && token.depth >= minLevel) {\n        token.number = numbering.count(token.depth - minLevel + 1)\n        const text = token.number + ' '\n        token.text = text + token.text\n        if (token.inline) {\n          token.inline.unshift({ type: 'text', text: text })\n        }\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Parse Current Token\n */\nParser.prototype.tok = function (options) {\n  options = options || {}\n\n  switch (this.token.type) {\n    case 'space':\n    {\n      return this.renderer.newline(this.token.text)\n    }\n    case 'code':\n    {\n      return this.renderer.codeblock(this.token.text)\n    }\n    case 'hr':\n    {\n      return this.renderer.hr(this.token.text)\n    }\n    case 'html':\n    {\n      return this.renderer.html(this.token.text)\n    }\n    case 'paragraph':\n    {\n      let body = ''\n      ;(this.token.inline || []).forEach(token => {\n        body += this.inlinetok(token)\n      })\n      return this.renderer.paragraph(body)\n    }\n    case 'text':\n    {\n      let body = ''\n      ;(this.token.inline || []).forEach(token => {\n        body += this.inlinetok(token)\n      })\n      return this.renderer.text(body)\n    }\n    case 'heading':\n    {\n      return this.renderer.heading(\n        this.token.text,\n        this.token.depth,\n        this.token.raw,\n        this.token.number,\n        this.token.autoid,\n        this.token.anchor)\n    }\n    case 'fences':\n    {\n      return this.renderer.fences(\n        this.token.text,\n        this.token.lang,\n        this.token.indent,\n        this.token.fences\n      )\n    }\n    case 'def':\n    {\n      return this.renderer.reference(this.token.ref,\n        this.token.href, this.token.title)\n    }\n    case 'blockquote_start':\n    {\n      let body = ''\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok()\n      }\n\n      return this.renderer.blockquote(body)\n    }\n    case 'list_start':\n    {\n      let obj\n      let body = ''\n      const ordered = this.token.ordered\n      let start = this.token.start\n\n      while (this.next().type !== 'list_end') {\n        if (this.options.autonumber && ordered) {\n          obj = {\n            start: start++\n          }\n        }\n        body += this.tok(obj)\n      }\n\n      return this.renderer.list(body, ordered)\n    }\n    case 'list_item_start':\n    {\n      let body = ''\n      let bullet = this.token.text\n      if (options.start) {\n        bullet = options.start + '.'\n      }\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok()\n      }\n\n      return this.renderer.listitem(bullet, body)\n    }\n    case 'loose_item_start':\n    {\n      let body = ''\n      let bullet = this.token.text\n      if (options.start) {\n        bullet = options.start + '.'\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok()\n      }\n\n      return this.renderer.listitem(bullet, body)\n    }\n    case 'ppnumberedheadings':\n    {\n      this.options.numberedHeadings = true\n      this.numberedHeadings(\n        this.token.level,\n        this.token.minlevel,\n        this.token.skip,\n        this.token.start,\n        this.token.omit\n      )\n      this.updateAutoIdentifier()\n      return this.renderer.numberedHeadings(\n        this.token.level,\n        this.token.minlevel,\n        this.token.skip,\n        this.token.start,\n        this.token.omit\n      )\n    }\n    case 'ppref':\n    {\n      return this.renderer.references(this.references())\n    }\n    case 'ppinclude_start':\n    {\n      let body = ''\n      if (this.token.tags) {\n        const indent = this.token.indent.replace('\\t', '    ').length\n        body += '<!-- include (' + this.token.text.replace(/ /g, '\\\\ ') +\n            (this.token.lang ? ' lang=' + this.token.lang : '') +\n            (indent ? ' indent=' + indent.toString() : '') +\n            ') -->\\n'\n      }\n      if (typeof this.token.lang === 'string') {\n        body += this.renderer.fence(this.token.lang)\n      }\n      return body\n    }\n    case 'ppinclude_end':\n    {\n      let body = ''\n      if (typeof this.token.lang === 'string') {\n        body += this.renderer.fence()\n      }\n      if (this.token.tags) {\n        body += '<!-- /include -->\\n'\n      }\n      return body\n    }\n    case 'ppinclude':\n    {\n      return this.renderer.include(this.token.text, this.token.indent, this.token.lang)\n    }\n    case 'pptoc':\n    {\n      return this.renderer.tableOfContents(\n        this.tableOfContents(),\n        this.token)\n    }\n    default:\n    {\n      return '<!-- ' + JSON.stringify(this.token) + ' -->\\n'\n    }\n  }\n}\n\n/**\n * Parse inline tokens\n */\nParser.prototype.inlinetok = function (token) {\n  switch (token.type) {\n    case 'escape':\n    {\n      return this.renderer.escape(token.text)\n    }\n    case 'url':\n    {\n      return this.renderer.url(token.text)\n    }\n    case 'tag':\n    {\n      return this.renderer.tag(token.text)\n    }\n    case 'link':\n    {\n      return this.renderer.link(token.raw, token.text, token.href, token.title)\n    }\n    case 'reflink':\n    {\n      return this.renderer.reflink(token.raw, token.text, token.ref)\n    }\n    case 'nolink':\n    {\n      return this.renderer.nolink(token.raw, token.text)\n    }\n    case 'image':\n    {\n      return this.renderer.image(token.raw, token.text, token.href, token.title)\n    }\n    case 'refimage':\n    {\n      return this.renderer.refimage(token.raw, token.text, token.ref)\n    }\n    case 'noimage':\n    {\n      return this.renderer.noimage(token.raw, token.text)\n    }\n    case 'strong':\n    {\n      return this.renderer.strong(token.text, token.char)\n    }\n    case 'em':\n    {\n      return this.renderer.em(token.text, token.char)\n    }\n    case 'text':\n    {\n      return this.renderer.text(token.text)\n    }\n    case 'code':\n    {\n      return this.renderer.code(token.text)\n    }\n    case 'br':\n    {\n      return this.renderer.br(token.text)\n    }\n    case 'del':\n    {\n      return this.renderer.del(token.text)\n    }\n    default:\n    {\n      return '<!-- ' + JSON.stringify(this.token) + ' -->\\n'\n    }\n  }\n}\n\n/**\n * Static Parse Method\n * @param {Array} toc - Array of Objects of type:\n * ```\n * { text: {String} Name of Heading,\n *   depth: {Number} Level of Heading,\n *   raw: {String} Raw Name of Heading\n * }\n * ```\n * @param {Object} options - options\n * @return {String} preprocessed markdown\n */\nParser.parse = function (tokens, options) {\n  const parser = new Parser(options)\n  return parser.parse(tokens)\n}\n\n/**\n * @api private\n */\nfunction getInlineAnchorText (token, mode) {\n  if (token.inline) {\n    let text = token.inline.map(token => {\n      let text = token.text\n\n      // sanitation for different anchor modes\n      if (mode === MODE.MARKDOWNIT && token.type === 'code') {\n        text = text.replace(/`/g, '')\n      } else if ([MODE.GITHUB, MODE.GITLAB, MODE.PANDOC].includes(mode) && token.type === 'tag') {\n        text = ''\n      } else if (mode === MODE.BITBUCKET && token.type === 'escape') {\n        text = '\\\\' + text\n      }\n\n      return text\n    }).join('')\n\n    if (mode === MODE.PANDOC) { // no numbering!\n      text = text.replace(REMOVENUMBER, '')\n    }\n    return text\n  }\n}\n\nmodule.exports = Parser\n","const { slugger, MODE } = require('./anchorSlugger')\n\nclass Anchor {\n  constructor (mode = MODE.MARKED) {\n    this._counters = {}\n    this._mode = mode\n    this._startCnt = 0\n\n    switch (mode) {\n      case MODE.BITBUCKET:\n        this._fn = (...args) => this._inc('_', ...args)\n        break\n      case MODE.GITHUB:\n      case MODE.GITLAB:\n      case MODE.PANDOC:\n      case MODE.MARKED:\n        this._fn = (...args) => this._inc('-', ...args)\n        break\n      case MODE.MARKDOWNIT:\n        this._startCnt = 0\n        this._fn = (...args) => this._inc('-', ...args)\n        break\n      case MODE.GHOST:\n        // repetitions not supported\n        this._fn = (id) => id\n        break\n      default:\n        throw new Error('Unknown mode: ' + mode)\n    }\n  }\n\n  _inc (sep, id, isInc) {\n    if (!this._counters[id]) this._counters[id] = 0\n    const cnt = this._counters[id]\n    if (isInc) {\n      if (!cnt) this._counters[id] = this._startCnt\n      this._counters[id] += 1\n    }\n    return cnt ? id + sep + cnt : id\n  }\n\n  get (header, isInc) {\n    const id = slugger(header, this._mode)\n    return this._fn(id, isInc)\n  }\n}\n\nmodule.exports = Anchor\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|(?:\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C\\uDFFB(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))?|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC)?|(?:\\uD83D\\uDC69(?:\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83E\\uDDD1(?:\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83D\\uDC3B\\u200D\\u2744|(?:(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])\\u200D[\\u2640\\u2642]|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u2600-\\u2604\\u260E\\u2611\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26B0\\u26B1\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0\\u26F1\\u26F4\\u26F7\\u26F8\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]|\\uD83D[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3])\\uFE0F|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB|\\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83D\\uDC69(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79)|\\uD83D\\uDC41\\uFE0F|\\uD83C\\uDFF3\\uFE0F|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\u2764\\uFE0F|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF4|(?:[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270C\\u270D]|\\uD83D[\\uDD74\\uDD90])(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC08\\uDC15\\uDC3B\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE2E\\uDE35\\uDE36\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5]|\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD]|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF]|[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD1D\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78\\uDD7A-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCB\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6]|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar named_references_1 = require(\"./named-references\");\nvar numeric_unicode_map_1 = require(\"./numeric-unicode-map\");\nvar surrogate_pairs_1 = require(\"./surrogate-pairs\");\nvar allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), { all: named_references_1.namedReferences.html5 });\nvar encodeRegExps = {\n    specialChars: /[<>'\"&]/g,\n    nonAscii: /(?:[<>'\"&\\u0080-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    nonAsciiPrintable: /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g,\n    extensive: /(?:[\\x01-\\x0c\\x0e-\\x1f\\x21-\\x2c\\x2e-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7d\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g\n};\nvar defaultEncodeOptions = {\n    mode: 'specialChars',\n    level: 'all',\n    numeric: 'decimal'\n};\n/** Encodes all the necessary (specified by `level`) characters in the text */\nfunction encode(text, _a) {\n    var _b = _a === void 0 ? defaultEncodeOptions : _a, _c = _b.mode, mode = _c === void 0 ? 'specialChars' : _c, _d = _b.numeric, numeric = _d === void 0 ? 'decimal' : _d, _e = _b.level, level = _e === void 0 ? 'all' : _e;\n    if (!text) {\n        return '';\n    }\n    var encodeRegExp = encodeRegExps[mode];\n    var references = allNamedReferences[level].characters;\n    var isHex = numeric === 'hexadecimal';\n    encodeRegExp.lastIndex = 0;\n    var _b = encodeRegExp.exec(text);\n    var _c;\n    if (_b) {\n        _c = '';\n        var _d = 0;\n        do {\n            if (_d !== _b.index) {\n                _c += text.substring(_d, _b.index);\n            }\n            var _e = _b[0];\n            var result_1 = references[_e];\n            if (!result_1) {\n                var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);\n                result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';\n            }\n            _c += result_1;\n            _d = _b.index + _e.length;\n        } while ((_b = encodeRegExp.exec(text)));\n        if (_d !== text.length) {\n            _c += text.substring(_d);\n        }\n    }\n    else {\n        _c =\n            text;\n    }\n    return _c;\n}\nexports.encode = encode;\nvar defaultDecodeOptions = {\n    scope: 'body',\n    level: 'all'\n};\nvar strict = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);/g;\nvar attribute = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;\nvar baseDecodeRegExps = {\n    xml: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.xml\n    },\n    html4: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html4\n    },\n    html5: {\n        strict: strict,\n        attribute: attribute,\n        body: named_references_1.bodyRegExps.html5\n    }\n};\nvar decodeRegExps = __assign(__assign({}, baseDecodeRegExps), { all: baseDecodeRegExps.html5 });\nvar fromCharCode = String.fromCharCode;\nvar outOfBoundsChar = fromCharCode(65533);\nvar defaultDecodeEntityOptions = {\n    level: 'all'\n};\n/** Decodes a single entity */\nfunction decodeEntity(entity, _a) {\n    var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level, level = _b === void 0 ? 'all' : _b;\n    if (!entity) {\n        return '';\n    }\n    var _b = entity;\n    var decodeEntityLastChar_1 = entity[entity.length - 1];\n    if (false\n        && decodeEntityLastChar_1 === '=') {\n        _b =\n            entity;\n    }\n    else if (false\n        && decodeEntityLastChar_1 !== ';') {\n        _b =\n            entity;\n    }\n    else {\n        var decodeResultByReference_1 = allNamedReferences[level].entities[entity];\n        if (decodeResultByReference_1) {\n            _b = decodeResultByReference_1;\n        }\n        else if (entity[0] === '&' && entity[1] === '#') {\n            var decodeSecondChar_1 = entity[2];\n            var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X'\n                ? parseInt(entity.substr(3), 16)\n                : parseInt(entity.substr(2));\n            _b =\n                decodeCode_1 >= 0x10ffff\n                    ? outOfBoundsChar\n                    : decodeCode_1 > 65535\n                        ? surrogate_pairs_1.fromCodePoint(decodeCode_1)\n                        : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);\n        }\n    }\n    return _b;\n}\nexports.decodeEntity = decodeEntity;\n/** Decodes all entities in the text */\nfunction decode(text, _a) {\n    var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a, decodeCode_1 = decodeSecondChar_1.level, level = decodeCode_1 === void 0 ? 'all' : decodeCode_1, _b = decodeSecondChar_1.scope, scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;\n    if (!text) {\n        return '';\n    }\n    var decodeRegExp = decodeRegExps[level][scope];\n    var references = allNamedReferences[level].entities;\n    var isAttribute = scope === 'attribute';\n    var isStrict = scope === 'strict';\n    decodeRegExp.lastIndex = 0;\n    var replaceMatch_1 = decodeRegExp.exec(text);\n    var replaceResult_1;\n    if (replaceMatch_1) {\n        replaceResult_1 = '';\n        var replaceLastIndex_1 = 0;\n        do {\n            if (replaceLastIndex_1 !== replaceMatch_1.index) {\n                replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);\n            }\n            var replaceInput_1 = replaceMatch_1[0];\n            var decodeResult_1 = replaceInput_1;\n            var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];\n            if (isAttribute\n                && decodeEntityLastChar_2 === '=') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else if (isStrict\n                && decodeEntityLastChar_2 !== ';') {\n                decodeResult_1 = replaceInput_1;\n            }\n            else {\n                var decodeResultByReference_2 = references[replaceInput_1];\n                if (decodeResultByReference_2) {\n                    decodeResult_1 = decodeResultByReference_2;\n                }\n                else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {\n                    var decodeSecondChar_2 = replaceInput_1[2];\n                    var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X'\n                        ? parseInt(replaceInput_1.substr(3), 16)\n                        : parseInt(replaceInput_1.substr(2));\n                    decodeResult_1 =\n                        decodeCode_2 >= 0x10ffff\n                            ? outOfBoundsChar\n                            : decodeCode_2 > 65535\n                                ? surrogate_pairs_1.fromCodePoint(decodeCode_2)\n                                : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);\n                }\n            }\n            replaceResult_1 += decodeResult_1;\n            replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;\n        } while ((replaceMatch_1 = decodeRegExp.exec(text)));\n        if (replaceLastIndex_1 !== text.length) {\n            replaceResult_1 += text.substring(replaceLastIndex_1);\n        }\n    }\n    else {\n        replaceResult_1 =\n            text;\n    }\n    return replaceResult_1;\n}\nexports.decode = decode;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.bodyRegExps={xml:/&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g};exports.namedReferences={xml:{entities:{\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&apos;\":\"'\",\"&amp;\":\"&\"},characters:{\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&apos;\",\"&\":\"&amp;\"}},html4:{entities:{\"&apos;\":\"'\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&times\":\"×\",\"&times;\":\"×\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&quot\":'\"',\"&quot;\":'\"',\"&amp\":\"&\",\"&amp;\":\"&\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&gt\":\">\",\"&gt;\":\">\",\"&OElig;\":\"Œ\",\"&oelig;\":\"œ\",\"&Scaron;\":\"Š\",\"&scaron;\":\"š\",\"&Yuml;\":\"Ÿ\",\"&circ;\":\"ˆ\",\"&tilde;\":\"˜\",\"&ensp;\":\" \",\"&emsp;\":\" \",\"&thinsp;\":\" \",\"&zwnj;\":\"‌\",\"&zwj;\":\"‍\",\"&lrm;\":\"‎\",\"&rlm;\":\"‏\",\"&ndash;\":\"–\",\"&mdash;\":\"—\",\"&lsquo;\":\"‘\",\"&rsquo;\":\"’\",\"&sbquo;\":\"‚\",\"&ldquo;\":\"“\",\"&rdquo;\":\"”\",\"&bdquo;\":\"„\",\"&dagger;\":\"†\",\"&Dagger;\":\"‡\",\"&permil;\":\"‰\",\"&lsaquo;\":\"‹\",\"&rsaquo;\":\"›\",\"&euro;\":\"€\",\"&fnof;\":\"ƒ\",\"&Alpha;\":\"Α\",\"&Beta;\":\"Β\",\"&Gamma;\":\"Γ\",\"&Delta;\":\"Δ\",\"&Epsilon;\":\"Ε\",\"&Zeta;\":\"Ζ\",\"&Eta;\":\"Η\",\"&Theta;\":\"Θ\",\"&Iota;\":\"Ι\",\"&Kappa;\":\"Κ\",\"&Lambda;\":\"Λ\",\"&Mu;\":\"Μ\",\"&Nu;\":\"Ν\",\"&Xi;\":\"Ξ\",\"&Omicron;\":\"Ο\",\"&Pi;\":\"Π\",\"&Rho;\":\"Ρ\",\"&Sigma;\":\"Σ\",\"&Tau;\":\"Τ\",\"&Upsilon;\":\"Υ\",\"&Phi;\":\"Φ\",\"&Chi;\":\"Χ\",\"&Psi;\":\"Ψ\",\"&Omega;\":\"Ω\",\"&alpha;\":\"α\",\"&beta;\":\"β\",\"&gamma;\":\"γ\",\"&delta;\":\"δ\",\"&epsilon;\":\"ε\",\"&zeta;\":\"ζ\",\"&eta;\":\"η\",\"&theta;\":\"θ\",\"&iota;\":\"ι\",\"&kappa;\":\"κ\",\"&lambda;\":\"λ\",\"&mu;\":\"μ\",\"&nu;\":\"ν\",\"&xi;\":\"ξ\",\"&omicron;\":\"ο\",\"&pi;\":\"π\",\"&rho;\":\"ρ\",\"&sigmaf;\":\"ς\",\"&sigma;\":\"σ\",\"&tau;\":\"τ\",\"&upsilon;\":\"υ\",\"&phi;\":\"φ\",\"&chi;\":\"χ\",\"&psi;\":\"ψ\",\"&omega;\":\"ω\",\"&thetasym;\":\"ϑ\",\"&upsih;\":\"ϒ\",\"&piv;\":\"ϖ\",\"&bull;\":\"•\",\"&hellip;\":\"…\",\"&prime;\":\"′\",\"&Prime;\":\"″\",\"&oline;\":\"‾\",\"&frasl;\":\"⁄\",\"&weierp;\":\"℘\",\"&image;\":\"ℑ\",\"&real;\":\"ℜ\",\"&trade;\":\"™\",\"&alefsym;\":\"ℵ\",\"&larr;\":\"←\",\"&uarr;\":\"↑\",\"&rarr;\":\"→\",\"&darr;\":\"↓\",\"&harr;\":\"↔\",\"&crarr;\":\"↵\",\"&lArr;\":\"⇐\",\"&uArr;\":\"⇑\",\"&rArr;\":\"⇒\",\"&dArr;\":\"⇓\",\"&hArr;\":\"⇔\",\"&forall;\":\"∀\",\"&part;\":\"∂\",\"&exist;\":\"∃\",\"&empty;\":\"∅\",\"&nabla;\":\"∇\",\"&isin;\":\"∈\",\"&notin;\":\"∉\",\"&ni;\":\"∋\",\"&prod;\":\"∏\",\"&sum;\":\"∑\",\"&minus;\":\"−\",\"&lowast;\":\"∗\",\"&radic;\":\"√\",\"&prop;\":\"∝\",\"&infin;\":\"∞\",\"&ang;\":\"∠\",\"&and;\":\"∧\",\"&or;\":\"∨\",\"&cap;\":\"∩\",\"&cup;\":\"∪\",\"&int;\":\"∫\",\"&there4;\":\"∴\",\"&sim;\":\"∼\",\"&cong;\":\"≅\",\"&asymp;\":\"≈\",\"&ne;\":\"≠\",\"&equiv;\":\"≡\",\"&le;\":\"≤\",\"&ge;\":\"≥\",\"&sub;\":\"⊂\",\"&sup;\":\"⊃\",\"&nsub;\":\"⊄\",\"&sube;\":\"⊆\",\"&supe;\":\"⊇\",\"&oplus;\":\"⊕\",\"&otimes;\":\"⊗\",\"&perp;\":\"⊥\",\"&sdot;\":\"⋅\",\"&lceil;\":\"⌈\",\"&rceil;\":\"⌉\",\"&lfloor;\":\"⌊\",\"&rfloor;\":\"⌋\",\"&lang;\":\"〈\",\"&rang;\":\"〉\",\"&loz;\":\"◊\",\"&spades;\":\"♠\",\"&clubs;\":\"♣\",\"&hearts;\":\"♥\",\"&diams;\":\"♦\"},characters:{\"'\":\"&apos;\",\" \":\"&nbsp;\",\"¡\":\"&iexcl;\",\"¢\":\"&cent;\",\"£\":\"&pound;\",\"¤\":\"&curren;\",\"¥\":\"&yen;\",\"¦\":\"&brvbar;\",\"§\":\"&sect;\",\"¨\":\"&uml;\",\"©\":\"&copy;\",\"ª\":\"&ordf;\",\"«\":\"&laquo;\",\"¬\":\"&not;\",\"­\":\"&shy;\",\"®\":\"&reg;\",\"¯\":\"&macr;\",\"°\":\"&deg;\",\"±\":\"&plusmn;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"´\":\"&acute;\",\"µ\":\"&micro;\",\"¶\":\"&para;\",\"·\":\"&middot;\",\"¸\":\"&cedil;\",\"¹\":\"&sup1;\",\"º\":\"&ordm;\",\"»\":\"&raquo;\",\"¼\":\"&frac14;\",\"½\":\"&frac12;\",\"¾\":\"&frac34;\",\"¿\":\"&iquest;\",\"À\":\"&Agrave;\",\"Á\":\"&Aacute;\",\"Â\":\"&Acirc;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"Å\":\"&Aring;\",\"Æ\":\"&AElig;\",\"Ç\":\"&Ccedil;\",\"È\":\"&Egrave;\",\"É\":\"&Eacute;\",\"Ê\":\"&Ecirc;\",\"Ë\":\"&Euml;\",\"Ì\":\"&Igrave;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"Ï\":\"&Iuml;\",\"Ð\":\"&ETH;\",\"Ñ\":\"&Ntilde;\",\"Ò\":\"&Ograve;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"Õ\":\"&Otilde;\",\"Ö\":\"&Ouml;\",\"×\":\"&times;\",\"Ø\":\"&Oslash;\",\"Ù\":\"&Ugrave;\",\"Ú\":\"&Uacute;\",\"Û\":\"&Ucirc;\",\"Ü\":\"&Uuml;\",\"Ý\":\"&Yacute;\",\"Þ\":\"&THORN;\",\"ß\":\"&szlig;\",\"à\":\"&agrave;\",\"á\":\"&aacute;\",\"â\":\"&acirc;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"å\":\"&aring;\",\"æ\":\"&aelig;\",\"ç\":\"&ccedil;\",\"è\":\"&egrave;\",\"é\":\"&eacute;\",\"ê\":\"&ecirc;\",\"ë\":\"&euml;\",\"ì\":\"&igrave;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"ï\":\"&iuml;\",\"ð\":\"&eth;\",\"ñ\":\"&ntilde;\",\"ò\":\"&ograve;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"õ\":\"&otilde;\",\"ö\":\"&ouml;\",\"÷\":\"&divide;\",\"ø\":\"&oslash;\",\"ù\":\"&ugrave;\",\"ú\":\"&uacute;\",\"û\":\"&ucirc;\",\"ü\":\"&uuml;\",\"ý\":\"&yacute;\",\"þ\":\"&thorn;\",\"ÿ\":\"&yuml;\",'\"':\"&quot;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",\"Œ\":\"&OElig;\",\"œ\":\"&oelig;\",\"Š\":\"&Scaron;\",\"š\":\"&scaron;\",\"Ÿ\":\"&Yuml;\",\"ˆ\":\"&circ;\",\"˜\":\"&tilde;\",\" \":\"&ensp;\",\" \":\"&emsp;\",\" \":\"&thinsp;\",\"‌\":\"&zwnj;\",\"‍\":\"&zwj;\",\"‎\":\"&lrm;\",\"‏\":\"&rlm;\",\"–\":\"&ndash;\",\"—\":\"&mdash;\",\"‘\":\"&lsquo;\",\"’\":\"&rsquo;\",\"‚\":\"&sbquo;\",\"“\":\"&ldquo;\",\"”\":\"&rdquo;\",\"„\":\"&bdquo;\",\"†\":\"&dagger;\",\"‡\":\"&Dagger;\",\"‰\":\"&permil;\",\"‹\":\"&lsaquo;\",\"›\":\"&rsaquo;\",\"€\":\"&euro;\",\"ƒ\":\"&fnof;\",\"Α\":\"&Alpha;\",\"Β\":\"&Beta;\",\"Γ\":\"&Gamma;\",\"Δ\":\"&Delta;\",\"Ε\":\"&Epsilon;\",\"Ζ\":\"&Zeta;\",\"Η\":\"&Eta;\",\"Θ\":\"&Theta;\",\"Ι\":\"&Iota;\",\"Κ\":\"&Kappa;\",\"Λ\":\"&Lambda;\",\"Μ\":\"&Mu;\",\"Ν\":\"&Nu;\",\"Ξ\":\"&Xi;\",\"Ο\":\"&Omicron;\",\"Π\":\"&Pi;\",\"Ρ\":\"&Rho;\",\"Σ\":\"&Sigma;\",\"Τ\":\"&Tau;\",\"Υ\":\"&Upsilon;\",\"Φ\":\"&Phi;\",\"Χ\":\"&Chi;\",\"Ψ\":\"&Psi;\",\"Ω\":\"&Omega;\",\"α\":\"&alpha;\",\"β\":\"&beta;\",\"γ\":\"&gamma;\",\"δ\":\"&delta;\",\"ε\":\"&epsilon;\",\"ζ\":\"&zeta;\",\"η\":\"&eta;\",\"θ\":\"&theta;\",\"ι\":\"&iota;\",\"κ\":\"&kappa;\",\"λ\":\"&lambda;\",\"μ\":\"&mu;\",\"ν\":\"&nu;\",\"ξ\":\"&xi;\",\"ο\":\"&omicron;\",\"π\":\"&pi;\",\"ρ\":\"&rho;\",\"ς\":\"&sigmaf;\",\"σ\":\"&sigma;\",\"τ\":\"&tau;\",\"υ\":\"&upsilon;\",\"φ\":\"&phi;\",\"χ\":\"&chi;\",\"ψ\":\"&psi;\",\"ω\":\"&omega;\",\"ϑ\":\"&thetasym;\",\"ϒ\":\"&upsih;\",\"ϖ\":\"&piv;\",\"•\":\"&bull;\",\"…\":\"&hellip;\",\"′\":\"&prime;\",\"″\":\"&Prime;\",\"‾\":\"&oline;\",\"⁄\":\"&frasl;\",\"℘\":\"&weierp;\",\"ℑ\":\"&image;\",\"ℜ\":\"&real;\",\"™\":\"&trade;\",\"ℵ\":\"&alefsym;\",\"←\":\"&larr;\",\"↑\":\"&uarr;\",\"→\":\"&rarr;\",\"↓\":\"&darr;\",\"↔\":\"&harr;\",\"↵\":\"&crarr;\",\"⇐\":\"&lArr;\",\"⇑\":\"&uArr;\",\"⇒\":\"&rArr;\",\"⇓\":\"&dArr;\",\"⇔\":\"&hArr;\",\"∀\":\"&forall;\",\"∂\":\"&part;\",\"∃\":\"&exist;\",\"∅\":\"&empty;\",\"∇\":\"&nabla;\",\"∈\":\"&isin;\",\"∉\":\"&notin;\",\"∋\":\"&ni;\",\"∏\":\"&prod;\",\"∑\":\"&sum;\",\"−\":\"&minus;\",\"∗\":\"&lowast;\",\"√\":\"&radic;\",\"∝\":\"&prop;\",\"∞\":\"&infin;\",\"∠\":\"&ang;\",\"∧\":\"&and;\",\"∨\":\"&or;\",\"∩\":\"&cap;\",\"∪\":\"&cup;\",\"∫\":\"&int;\",\"∴\":\"&there4;\",\"∼\":\"&sim;\",\"≅\":\"&cong;\",\"≈\":\"&asymp;\",\"≠\":\"&ne;\",\"≡\":\"&equiv;\",\"≤\":\"&le;\",\"≥\":\"&ge;\",\"⊂\":\"&sub;\",\"⊃\":\"&sup;\",\"⊄\":\"&nsub;\",\"⊆\":\"&sube;\",\"⊇\":\"&supe;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"⊥\":\"&perp;\",\"⋅\":\"&sdot;\",\"⌈\":\"&lceil;\",\"⌉\":\"&rceil;\",\"⌊\":\"&lfloor;\",\"⌋\":\"&rfloor;\",\"〈\":\"&lang;\",\"〉\":\"&rang;\",\"◊\":\"&loz;\",\"♠\":\"&spades;\",\"♣\":\"&clubs;\",\"♥\":\"&hearts;\",\"♦\":\"&diams;\"}},html5:{entities:{\"&AElig\":\"Æ\",\"&AElig;\":\"Æ\",\"&AMP\":\"&\",\"&AMP;\":\"&\",\"&Aacute\":\"Á\",\"&Aacute;\":\"Á\",\"&Abreve;\":\"Ă\",\"&Acirc\":\"Â\",\"&Acirc;\":\"Â\",\"&Acy;\":\"А\",\"&Afr;\":\"𝔄\",\"&Agrave\":\"À\",\"&Agrave;\":\"À\",\"&Alpha;\":\"Α\",\"&Amacr;\":\"Ā\",\"&And;\":\"⩓\",\"&Aogon;\":\"Ą\",\"&Aopf;\":\"𝔸\",\"&ApplyFunction;\":\"⁡\",\"&Aring\":\"Å\",\"&Aring;\":\"Å\",\"&Ascr;\":\"𝒜\",\"&Assign;\":\"≔\",\"&Atilde\":\"Ã\",\"&Atilde;\":\"Ã\",\"&Auml\":\"Ä\",\"&Auml;\":\"Ä\",\"&Backslash;\":\"∖\",\"&Barv;\":\"⫧\",\"&Barwed;\":\"⌆\",\"&Bcy;\":\"Б\",\"&Because;\":\"∵\",\"&Bernoullis;\":\"ℬ\",\"&Beta;\":\"Β\",\"&Bfr;\":\"𝔅\",\"&Bopf;\":\"𝔹\",\"&Breve;\":\"˘\",\"&Bscr;\":\"ℬ\",\"&Bumpeq;\":\"≎\",\"&CHcy;\":\"Ч\",\"&COPY\":\"©\",\"&COPY;\":\"©\",\"&Cacute;\":\"Ć\",\"&Cap;\":\"⋒\",\"&CapitalDifferentialD;\":\"ⅅ\",\"&Cayleys;\":\"ℭ\",\"&Ccaron;\":\"Č\",\"&Ccedil\":\"Ç\",\"&Ccedil;\":\"Ç\",\"&Ccirc;\":\"Ĉ\",\"&Cconint;\":\"∰\",\"&Cdot;\":\"Ċ\",\"&Cedilla;\":\"¸\",\"&CenterDot;\":\"·\",\"&Cfr;\":\"ℭ\",\"&Chi;\":\"Χ\",\"&CircleDot;\":\"⊙\",\"&CircleMinus;\":\"⊖\",\"&CirclePlus;\":\"⊕\",\"&CircleTimes;\":\"⊗\",\"&ClockwiseContourIntegral;\":\"∲\",\"&CloseCurlyDoubleQuote;\":\"”\",\"&CloseCurlyQuote;\":\"’\",\"&Colon;\":\"∷\",\"&Colone;\":\"⩴\",\"&Congruent;\":\"≡\",\"&Conint;\":\"∯\",\"&ContourIntegral;\":\"∮\",\"&Copf;\":\"ℂ\",\"&Coproduct;\":\"∐\",\"&CounterClockwiseContourIntegral;\":\"∳\",\"&Cross;\":\"⨯\",\"&Cscr;\":\"𝒞\",\"&Cup;\":\"⋓\",\"&CupCap;\":\"≍\",\"&DD;\":\"ⅅ\",\"&DDotrahd;\":\"⤑\",\"&DJcy;\":\"Ђ\",\"&DScy;\":\"Ѕ\",\"&DZcy;\":\"Џ\",\"&Dagger;\":\"‡\",\"&Darr;\":\"↡\",\"&Dashv;\":\"⫤\",\"&Dcaron;\":\"Ď\",\"&Dcy;\":\"Д\",\"&Del;\":\"∇\",\"&Delta;\":\"Δ\",\"&Dfr;\":\"𝔇\",\"&DiacriticalAcute;\":\"´\",\"&DiacriticalDot;\":\"˙\",\"&DiacriticalDoubleAcute;\":\"˝\",\"&DiacriticalGrave;\":\"`\",\"&DiacriticalTilde;\":\"˜\",\"&Diamond;\":\"⋄\",\"&DifferentialD;\":\"ⅆ\",\"&Dopf;\":\"𝔻\",\"&Dot;\":\"¨\",\"&DotDot;\":\"⃜\",\"&DotEqual;\":\"≐\",\"&DoubleContourIntegral;\":\"∯\",\"&DoubleDot;\":\"¨\",\"&DoubleDownArrow;\":\"⇓\",\"&DoubleLeftArrow;\":\"⇐\",\"&DoubleLeftRightArrow;\":\"⇔\",\"&DoubleLeftTee;\":\"⫤\",\"&DoubleLongLeftArrow;\":\"⟸\",\"&DoubleLongLeftRightArrow;\":\"⟺\",\"&DoubleLongRightArrow;\":\"⟹\",\"&DoubleRightArrow;\":\"⇒\",\"&DoubleRightTee;\":\"⊨\",\"&DoubleUpArrow;\":\"⇑\",\"&DoubleUpDownArrow;\":\"⇕\",\"&DoubleVerticalBar;\":\"∥\",\"&DownArrow;\":\"↓\",\"&DownArrowBar;\":\"⤓\",\"&DownArrowUpArrow;\":\"⇵\",\"&DownBreve;\":\"̑\",\"&DownLeftRightVector;\":\"⥐\",\"&DownLeftTeeVector;\":\"⥞\",\"&DownLeftVector;\":\"↽\",\"&DownLeftVectorBar;\":\"⥖\",\"&DownRightTeeVector;\":\"⥟\",\"&DownRightVector;\":\"⇁\",\"&DownRightVectorBar;\":\"⥗\",\"&DownTee;\":\"⊤\",\"&DownTeeArrow;\":\"↧\",\"&Downarrow;\":\"⇓\",\"&Dscr;\":\"𝒟\",\"&Dstrok;\":\"Đ\",\"&ENG;\":\"Ŋ\",\"&ETH\":\"Ð\",\"&ETH;\":\"Ð\",\"&Eacute\":\"É\",\"&Eacute;\":\"É\",\"&Ecaron;\":\"Ě\",\"&Ecirc\":\"Ê\",\"&Ecirc;\":\"Ê\",\"&Ecy;\":\"Э\",\"&Edot;\":\"Ė\",\"&Efr;\":\"𝔈\",\"&Egrave\":\"È\",\"&Egrave;\":\"È\",\"&Element;\":\"∈\",\"&Emacr;\":\"Ē\",\"&EmptySmallSquare;\":\"◻\",\"&EmptyVerySmallSquare;\":\"▫\",\"&Eogon;\":\"Ę\",\"&Eopf;\":\"𝔼\",\"&Epsilon;\":\"Ε\",\"&Equal;\":\"⩵\",\"&EqualTilde;\":\"≂\",\"&Equilibrium;\":\"⇌\",\"&Escr;\":\"ℰ\",\"&Esim;\":\"⩳\",\"&Eta;\":\"Η\",\"&Euml\":\"Ë\",\"&Euml;\":\"Ë\",\"&Exists;\":\"∃\",\"&ExponentialE;\":\"ⅇ\",\"&Fcy;\":\"Ф\",\"&Ffr;\":\"𝔉\",\"&FilledSmallSquare;\":\"◼\",\"&FilledVerySmallSquare;\":\"▪\",\"&Fopf;\":\"𝔽\",\"&ForAll;\":\"∀\",\"&Fouriertrf;\":\"ℱ\",\"&Fscr;\":\"ℱ\",\"&GJcy;\":\"Ѓ\",\"&GT\":\">\",\"&GT;\":\">\",\"&Gamma;\":\"Γ\",\"&Gammad;\":\"Ϝ\",\"&Gbreve;\":\"Ğ\",\"&Gcedil;\":\"Ģ\",\"&Gcirc;\":\"Ĝ\",\"&Gcy;\":\"Г\",\"&Gdot;\":\"Ġ\",\"&Gfr;\":\"𝔊\",\"&Gg;\":\"⋙\",\"&Gopf;\":\"𝔾\",\"&GreaterEqual;\":\"≥\",\"&GreaterEqualLess;\":\"⋛\",\"&GreaterFullEqual;\":\"≧\",\"&GreaterGreater;\":\"⪢\",\"&GreaterLess;\":\"≷\",\"&GreaterSlantEqual;\":\"⩾\",\"&GreaterTilde;\":\"≳\",\"&Gscr;\":\"𝒢\",\"&Gt;\":\"≫\",\"&HARDcy;\":\"Ъ\",\"&Hacek;\":\"ˇ\",\"&Hat;\":\"^\",\"&Hcirc;\":\"Ĥ\",\"&Hfr;\":\"ℌ\",\"&HilbertSpace;\":\"ℋ\",\"&Hopf;\":\"ℍ\",\"&HorizontalLine;\":\"─\",\"&Hscr;\":\"ℋ\",\"&Hstrok;\":\"Ħ\",\"&HumpDownHump;\":\"≎\",\"&HumpEqual;\":\"≏\",\"&IEcy;\":\"Е\",\"&IJlig;\":\"Ĳ\",\"&IOcy;\":\"Ё\",\"&Iacute\":\"Í\",\"&Iacute;\":\"Í\",\"&Icirc\":\"Î\",\"&Icirc;\":\"Î\",\"&Icy;\":\"И\",\"&Idot;\":\"İ\",\"&Ifr;\":\"ℑ\",\"&Igrave\":\"Ì\",\"&Igrave;\":\"Ì\",\"&Im;\":\"ℑ\",\"&Imacr;\":\"Ī\",\"&ImaginaryI;\":\"ⅈ\",\"&Implies;\":\"⇒\",\"&Int;\":\"∬\",\"&Integral;\":\"∫\",\"&Intersection;\":\"⋂\",\"&InvisibleComma;\":\"⁣\",\"&InvisibleTimes;\":\"⁢\",\"&Iogon;\":\"Į\",\"&Iopf;\":\"𝕀\",\"&Iota;\":\"Ι\",\"&Iscr;\":\"ℐ\",\"&Itilde;\":\"Ĩ\",\"&Iukcy;\":\"І\",\"&Iuml\":\"Ï\",\"&Iuml;\":\"Ï\",\"&Jcirc;\":\"Ĵ\",\"&Jcy;\":\"Й\",\"&Jfr;\":\"𝔍\",\"&Jopf;\":\"𝕁\",\"&Jscr;\":\"𝒥\",\"&Jsercy;\":\"Ј\",\"&Jukcy;\":\"Є\",\"&KHcy;\":\"Х\",\"&KJcy;\":\"Ќ\",\"&Kappa;\":\"Κ\",\"&Kcedil;\":\"Ķ\",\"&Kcy;\":\"К\",\"&Kfr;\":\"𝔎\",\"&Kopf;\":\"𝕂\",\"&Kscr;\":\"𝒦\",\"&LJcy;\":\"Љ\",\"&LT\":\"<\",\"&LT;\":\"<\",\"&Lacute;\":\"Ĺ\",\"&Lambda;\":\"Λ\",\"&Lang;\":\"⟪\",\"&Laplacetrf;\":\"ℒ\",\"&Larr;\":\"↞\",\"&Lcaron;\":\"Ľ\",\"&Lcedil;\":\"Ļ\",\"&Lcy;\":\"Л\",\"&LeftAngleBracket;\":\"⟨\",\"&LeftArrow;\":\"←\",\"&LeftArrowBar;\":\"⇤\",\"&LeftArrowRightArrow;\":\"⇆\",\"&LeftCeiling;\":\"⌈\",\"&LeftDoubleBracket;\":\"⟦\",\"&LeftDownTeeVector;\":\"⥡\",\"&LeftDownVector;\":\"⇃\",\"&LeftDownVectorBar;\":\"⥙\",\"&LeftFloor;\":\"⌊\",\"&LeftRightArrow;\":\"↔\",\"&LeftRightVector;\":\"⥎\",\"&LeftTee;\":\"⊣\",\"&LeftTeeArrow;\":\"↤\",\"&LeftTeeVector;\":\"⥚\",\"&LeftTriangle;\":\"⊲\",\"&LeftTriangleBar;\":\"⧏\",\"&LeftTriangleEqual;\":\"⊴\",\"&LeftUpDownVector;\":\"⥑\",\"&LeftUpTeeVector;\":\"⥠\",\"&LeftUpVector;\":\"↿\",\"&LeftUpVectorBar;\":\"⥘\",\"&LeftVector;\":\"↼\",\"&LeftVectorBar;\":\"⥒\",\"&Leftarrow;\":\"⇐\",\"&Leftrightarrow;\":\"⇔\",\"&LessEqualGreater;\":\"⋚\",\"&LessFullEqual;\":\"≦\",\"&LessGreater;\":\"≶\",\"&LessLess;\":\"⪡\",\"&LessSlantEqual;\":\"⩽\",\"&LessTilde;\":\"≲\",\"&Lfr;\":\"𝔏\",\"&Ll;\":\"⋘\",\"&Lleftarrow;\":\"⇚\",\"&Lmidot;\":\"Ŀ\",\"&LongLeftArrow;\":\"⟵\",\"&LongLeftRightArrow;\":\"⟷\",\"&LongRightArrow;\":\"⟶\",\"&Longleftarrow;\":\"⟸\",\"&Longleftrightarrow;\":\"⟺\",\"&Longrightarrow;\":\"⟹\",\"&Lopf;\":\"𝕃\",\"&LowerLeftArrow;\":\"↙\",\"&LowerRightArrow;\":\"↘\",\"&Lscr;\":\"ℒ\",\"&Lsh;\":\"↰\",\"&Lstrok;\":\"Ł\",\"&Lt;\":\"≪\",\"&Map;\":\"⤅\",\"&Mcy;\":\"М\",\"&MediumSpace;\":\" \",\"&Mellintrf;\":\"ℳ\",\"&Mfr;\":\"𝔐\",\"&MinusPlus;\":\"∓\",\"&Mopf;\":\"𝕄\",\"&Mscr;\":\"ℳ\",\"&Mu;\":\"Μ\",\"&NJcy;\":\"Њ\",\"&Nacute;\":\"Ń\",\"&Ncaron;\":\"Ň\",\"&Ncedil;\":\"Ņ\",\"&Ncy;\":\"Н\",\"&NegativeMediumSpace;\":\"​\",\"&NegativeThickSpace;\":\"​\",\"&NegativeThinSpace;\":\"​\",\"&NegativeVeryThinSpace;\":\"​\",\"&NestedGreaterGreater;\":\"≫\",\"&NestedLessLess;\":\"≪\",\"&NewLine;\":\"\\n\",\"&Nfr;\":\"𝔑\",\"&NoBreak;\":\"⁠\",\"&NonBreakingSpace;\":\" \",\"&Nopf;\":\"ℕ\",\"&Not;\":\"⫬\",\"&NotCongruent;\":\"≢\",\"&NotCupCap;\":\"≭\",\"&NotDoubleVerticalBar;\":\"∦\",\"&NotElement;\":\"∉\",\"&NotEqual;\":\"≠\",\"&NotEqualTilde;\":\"≂̸\",\"&NotExists;\":\"∄\",\"&NotGreater;\":\"≯\",\"&NotGreaterEqual;\":\"≱\",\"&NotGreaterFullEqual;\":\"≧̸\",\"&NotGreaterGreater;\":\"≫̸\",\"&NotGreaterLess;\":\"≹\",\"&NotGreaterSlantEqual;\":\"⩾̸\",\"&NotGreaterTilde;\":\"≵\",\"&NotHumpDownHump;\":\"≎̸\",\"&NotHumpEqual;\":\"≏̸\",\"&NotLeftTriangle;\":\"⋪\",\"&NotLeftTriangleBar;\":\"⧏̸\",\"&NotLeftTriangleEqual;\":\"⋬\",\"&NotLess;\":\"≮\",\"&NotLessEqual;\":\"≰\",\"&NotLessGreater;\":\"≸\",\"&NotLessLess;\":\"≪̸\",\"&NotLessSlantEqual;\":\"⩽̸\",\"&NotLessTilde;\":\"≴\",\"&NotNestedGreaterGreater;\":\"⪢̸\",\"&NotNestedLessLess;\":\"⪡̸\",\"&NotPrecedes;\":\"⊀\",\"&NotPrecedesEqual;\":\"⪯̸\",\"&NotPrecedesSlantEqual;\":\"⋠\",\"&NotReverseElement;\":\"∌\",\"&NotRightTriangle;\":\"⋫\",\"&NotRightTriangleBar;\":\"⧐̸\",\"&NotRightTriangleEqual;\":\"⋭\",\"&NotSquareSubset;\":\"⊏̸\",\"&NotSquareSubsetEqual;\":\"⋢\",\"&NotSquareSuperset;\":\"⊐̸\",\"&NotSquareSupersetEqual;\":\"⋣\",\"&NotSubset;\":\"⊂⃒\",\"&NotSubsetEqual;\":\"⊈\",\"&NotSucceeds;\":\"⊁\",\"&NotSucceedsEqual;\":\"⪰̸\",\"&NotSucceedsSlantEqual;\":\"⋡\",\"&NotSucceedsTilde;\":\"≿̸\",\"&NotSuperset;\":\"⊃⃒\",\"&NotSupersetEqual;\":\"⊉\",\"&NotTilde;\":\"≁\",\"&NotTildeEqual;\":\"≄\",\"&NotTildeFullEqual;\":\"≇\",\"&NotTildeTilde;\":\"≉\",\"&NotVerticalBar;\":\"∤\",\"&Nscr;\":\"𝒩\",\"&Ntilde\":\"Ñ\",\"&Ntilde;\":\"Ñ\",\"&Nu;\":\"Ν\",\"&OElig;\":\"Œ\",\"&Oacute\":\"Ó\",\"&Oacute;\":\"Ó\",\"&Ocirc\":\"Ô\",\"&Ocirc;\":\"Ô\",\"&Ocy;\":\"О\",\"&Odblac;\":\"Ő\",\"&Ofr;\":\"𝔒\",\"&Ograve\":\"Ò\",\"&Ograve;\":\"Ò\",\"&Omacr;\":\"Ō\",\"&Omega;\":\"Ω\",\"&Omicron;\":\"Ο\",\"&Oopf;\":\"𝕆\",\"&OpenCurlyDoubleQuote;\":\"“\",\"&OpenCurlyQuote;\":\"‘\",\"&Or;\":\"⩔\",\"&Oscr;\":\"𝒪\",\"&Oslash\":\"Ø\",\"&Oslash;\":\"Ø\",\"&Otilde\":\"Õ\",\"&Otilde;\":\"Õ\",\"&Otimes;\":\"⨷\",\"&Ouml\":\"Ö\",\"&Ouml;\":\"Ö\",\"&OverBar;\":\"‾\",\"&OverBrace;\":\"⏞\",\"&OverBracket;\":\"⎴\",\"&OverParenthesis;\":\"⏜\",\"&PartialD;\":\"∂\",\"&Pcy;\":\"П\",\"&Pfr;\":\"𝔓\",\"&Phi;\":\"Φ\",\"&Pi;\":\"Π\",\"&PlusMinus;\":\"±\",\"&Poincareplane;\":\"ℌ\",\"&Popf;\":\"ℙ\",\"&Pr;\":\"⪻\",\"&Precedes;\":\"≺\",\"&PrecedesEqual;\":\"⪯\",\"&PrecedesSlantEqual;\":\"≼\",\"&PrecedesTilde;\":\"≾\",\"&Prime;\":\"″\",\"&Product;\":\"∏\",\"&Proportion;\":\"∷\",\"&Proportional;\":\"∝\",\"&Pscr;\":\"𝒫\",\"&Psi;\":\"Ψ\",\"&QUOT\":'\"',\"&QUOT;\":'\"',\"&Qfr;\":\"𝔔\",\"&Qopf;\":\"ℚ\",\"&Qscr;\":\"𝒬\",\"&RBarr;\":\"⤐\",\"&REG\":\"®\",\"&REG;\":\"®\",\"&Racute;\":\"Ŕ\",\"&Rang;\":\"⟫\",\"&Rarr;\":\"↠\",\"&Rarrtl;\":\"⤖\",\"&Rcaron;\":\"Ř\",\"&Rcedil;\":\"Ŗ\",\"&Rcy;\":\"Р\",\"&Re;\":\"ℜ\",\"&ReverseElement;\":\"∋\",\"&ReverseEquilibrium;\":\"⇋\",\"&ReverseUpEquilibrium;\":\"⥯\",\"&Rfr;\":\"ℜ\",\"&Rho;\":\"Ρ\",\"&RightAngleBracket;\":\"⟩\",\"&RightArrow;\":\"→\",\"&RightArrowBar;\":\"⇥\",\"&RightArrowLeftArrow;\":\"⇄\",\"&RightCeiling;\":\"⌉\",\"&RightDoubleBracket;\":\"⟧\",\"&RightDownTeeVector;\":\"⥝\",\"&RightDownVector;\":\"⇂\",\"&RightDownVectorBar;\":\"⥕\",\"&RightFloor;\":\"⌋\",\"&RightTee;\":\"⊢\",\"&RightTeeArrow;\":\"↦\",\"&RightTeeVector;\":\"⥛\",\"&RightTriangle;\":\"⊳\",\"&RightTriangleBar;\":\"⧐\",\"&RightTriangleEqual;\":\"⊵\",\"&RightUpDownVector;\":\"⥏\",\"&RightUpTeeVector;\":\"⥜\",\"&RightUpVector;\":\"↾\",\"&RightUpVectorBar;\":\"⥔\",\"&RightVector;\":\"⇀\",\"&RightVectorBar;\":\"⥓\",\"&Rightarrow;\":\"⇒\",\"&Ropf;\":\"ℝ\",\"&RoundImplies;\":\"⥰\",\"&Rrightarrow;\":\"⇛\",\"&Rscr;\":\"ℛ\",\"&Rsh;\":\"↱\",\"&RuleDelayed;\":\"⧴\",\"&SHCHcy;\":\"Щ\",\"&SHcy;\":\"Ш\",\"&SOFTcy;\":\"Ь\",\"&Sacute;\":\"Ś\",\"&Sc;\":\"⪼\",\"&Scaron;\":\"Š\",\"&Scedil;\":\"Ş\",\"&Scirc;\":\"Ŝ\",\"&Scy;\":\"С\",\"&Sfr;\":\"𝔖\",\"&ShortDownArrow;\":\"↓\",\"&ShortLeftArrow;\":\"←\",\"&ShortRightArrow;\":\"→\",\"&ShortUpArrow;\":\"↑\",\"&Sigma;\":\"Σ\",\"&SmallCircle;\":\"∘\",\"&Sopf;\":\"𝕊\",\"&Sqrt;\":\"√\",\"&Square;\":\"□\",\"&SquareIntersection;\":\"⊓\",\"&SquareSubset;\":\"⊏\",\"&SquareSubsetEqual;\":\"⊑\",\"&SquareSuperset;\":\"⊐\",\"&SquareSupersetEqual;\":\"⊒\",\"&SquareUnion;\":\"⊔\",\"&Sscr;\":\"𝒮\",\"&Star;\":\"⋆\",\"&Sub;\":\"⋐\",\"&Subset;\":\"⋐\",\"&SubsetEqual;\":\"⊆\",\"&Succeeds;\":\"≻\",\"&SucceedsEqual;\":\"⪰\",\"&SucceedsSlantEqual;\":\"≽\",\"&SucceedsTilde;\":\"≿\",\"&SuchThat;\":\"∋\",\"&Sum;\":\"∑\",\"&Sup;\":\"⋑\",\"&Superset;\":\"⊃\",\"&SupersetEqual;\":\"⊇\",\"&Supset;\":\"⋑\",\"&THORN\":\"Þ\",\"&THORN;\":\"Þ\",\"&TRADE;\":\"™\",\"&TSHcy;\":\"Ћ\",\"&TScy;\":\"Ц\",\"&Tab;\":\"\\t\",\"&Tau;\":\"Τ\",\"&Tcaron;\":\"Ť\",\"&Tcedil;\":\"Ţ\",\"&Tcy;\":\"Т\",\"&Tfr;\":\"𝔗\",\"&Therefore;\":\"∴\",\"&Theta;\":\"Θ\",\"&ThickSpace;\":\"  \",\"&ThinSpace;\":\" \",\"&Tilde;\":\"∼\",\"&TildeEqual;\":\"≃\",\"&TildeFullEqual;\":\"≅\",\"&TildeTilde;\":\"≈\",\"&Topf;\":\"𝕋\",\"&TripleDot;\":\"⃛\",\"&Tscr;\":\"𝒯\",\"&Tstrok;\":\"Ŧ\",\"&Uacute\":\"Ú\",\"&Uacute;\":\"Ú\",\"&Uarr;\":\"↟\",\"&Uarrocir;\":\"⥉\",\"&Ubrcy;\":\"Ў\",\"&Ubreve;\":\"Ŭ\",\"&Ucirc\":\"Û\",\"&Ucirc;\":\"Û\",\"&Ucy;\":\"У\",\"&Udblac;\":\"Ű\",\"&Ufr;\":\"𝔘\",\"&Ugrave\":\"Ù\",\"&Ugrave;\":\"Ù\",\"&Umacr;\":\"Ū\",\"&UnderBar;\":\"_\",\"&UnderBrace;\":\"⏟\",\"&UnderBracket;\":\"⎵\",\"&UnderParenthesis;\":\"⏝\",\"&Union;\":\"⋃\",\"&UnionPlus;\":\"⊎\",\"&Uogon;\":\"Ų\",\"&Uopf;\":\"𝕌\",\"&UpArrow;\":\"↑\",\"&UpArrowBar;\":\"⤒\",\"&UpArrowDownArrow;\":\"⇅\",\"&UpDownArrow;\":\"↕\",\"&UpEquilibrium;\":\"⥮\",\"&UpTee;\":\"⊥\",\"&UpTeeArrow;\":\"↥\",\"&Uparrow;\":\"⇑\",\"&Updownarrow;\":\"⇕\",\"&UpperLeftArrow;\":\"↖\",\"&UpperRightArrow;\":\"↗\",\"&Upsi;\":\"ϒ\",\"&Upsilon;\":\"Υ\",\"&Uring;\":\"Ů\",\"&Uscr;\":\"𝒰\",\"&Utilde;\":\"Ũ\",\"&Uuml\":\"Ü\",\"&Uuml;\":\"Ü\",\"&VDash;\":\"⊫\",\"&Vbar;\":\"⫫\",\"&Vcy;\":\"В\",\"&Vdash;\":\"⊩\",\"&Vdashl;\":\"⫦\",\"&Vee;\":\"⋁\",\"&Verbar;\":\"‖\",\"&Vert;\":\"‖\",\"&VerticalBar;\":\"∣\",\"&VerticalLine;\":\"|\",\"&VerticalSeparator;\":\"❘\",\"&VerticalTilde;\":\"≀\",\"&VeryThinSpace;\":\" \",\"&Vfr;\":\"𝔙\",\"&Vopf;\":\"𝕍\",\"&Vscr;\":\"𝒱\",\"&Vvdash;\":\"⊪\",\"&Wcirc;\":\"Ŵ\",\"&Wedge;\":\"⋀\",\"&Wfr;\":\"𝔚\",\"&Wopf;\":\"𝕎\",\"&Wscr;\":\"𝒲\",\"&Xfr;\":\"𝔛\",\"&Xi;\":\"Ξ\",\"&Xopf;\":\"𝕏\",\"&Xscr;\":\"𝒳\",\"&YAcy;\":\"Я\",\"&YIcy;\":\"Ї\",\"&YUcy;\":\"Ю\",\"&Yacute\":\"Ý\",\"&Yacute;\":\"Ý\",\"&Ycirc;\":\"Ŷ\",\"&Ycy;\":\"Ы\",\"&Yfr;\":\"𝔜\",\"&Yopf;\":\"𝕐\",\"&Yscr;\":\"𝒴\",\"&Yuml;\":\"Ÿ\",\"&ZHcy;\":\"Ж\",\"&Zacute;\":\"Ź\",\"&Zcaron;\":\"Ž\",\"&Zcy;\":\"З\",\"&Zdot;\":\"Ż\",\"&ZeroWidthSpace;\":\"​\",\"&Zeta;\":\"Ζ\",\"&Zfr;\":\"ℨ\",\"&Zopf;\":\"ℤ\",\"&Zscr;\":\"𝒵\",\"&aacute\":\"á\",\"&aacute;\":\"á\",\"&abreve;\":\"ă\",\"&ac;\":\"∾\",\"&acE;\":\"∾̳\",\"&acd;\":\"∿\",\"&acirc\":\"â\",\"&acirc;\":\"â\",\"&acute\":\"´\",\"&acute;\":\"´\",\"&acy;\":\"а\",\"&aelig\":\"æ\",\"&aelig;\":\"æ\",\"&af;\":\"⁡\",\"&afr;\":\"𝔞\",\"&agrave\":\"à\",\"&agrave;\":\"à\",\"&alefsym;\":\"ℵ\",\"&aleph;\":\"ℵ\",\"&alpha;\":\"α\",\"&amacr;\":\"ā\",\"&amalg;\":\"⨿\",\"&amp\":\"&\",\"&amp;\":\"&\",\"&and;\":\"∧\",\"&andand;\":\"⩕\",\"&andd;\":\"⩜\",\"&andslope;\":\"⩘\",\"&andv;\":\"⩚\",\"&ang;\":\"∠\",\"&ange;\":\"⦤\",\"&angle;\":\"∠\",\"&angmsd;\":\"∡\",\"&angmsdaa;\":\"⦨\",\"&angmsdab;\":\"⦩\",\"&angmsdac;\":\"⦪\",\"&angmsdad;\":\"⦫\",\"&angmsdae;\":\"⦬\",\"&angmsdaf;\":\"⦭\",\"&angmsdag;\":\"⦮\",\"&angmsdah;\":\"⦯\",\"&angrt;\":\"∟\",\"&angrtvb;\":\"⊾\",\"&angrtvbd;\":\"⦝\",\"&angsph;\":\"∢\",\"&angst;\":\"Å\",\"&angzarr;\":\"⍼\",\"&aogon;\":\"ą\",\"&aopf;\":\"𝕒\",\"&ap;\":\"≈\",\"&apE;\":\"⩰\",\"&apacir;\":\"⩯\",\"&ape;\":\"≊\",\"&apid;\":\"≋\",\"&apos;\":\"'\",\"&approx;\":\"≈\",\"&approxeq;\":\"≊\",\"&aring\":\"å\",\"&aring;\":\"å\",\"&ascr;\":\"𝒶\",\"&ast;\":\"*\",\"&asymp;\":\"≈\",\"&asympeq;\":\"≍\",\"&atilde\":\"ã\",\"&atilde;\":\"ã\",\"&auml\":\"ä\",\"&auml;\":\"ä\",\"&awconint;\":\"∳\",\"&awint;\":\"⨑\",\"&bNot;\":\"⫭\",\"&backcong;\":\"≌\",\"&backepsilon;\":\"϶\",\"&backprime;\":\"‵\",\"&backsim;\":\"∽\",\"&backsimeq;\":\"⋍\",\"&barvee;\":\"⊽\",\"&barwed;\":\"⌅\",\"&barwedge;\":\"⌅\",\"&bbrk;\":\"⎵\",\"&bbrktbrk;\":\"⎶\",\"&bcong;\":\"≌\",\"&bcy;\":\"б\",\"&bdquo;\":\"„\",\"&becaus;\":\"∵\",\"&because;\":\"∵\",\"&bemptyv;\":\"⦰\",\"&bepsi;\":\"϶\",\"&bernou;\":\"ℬ\",\"&beta;\":\"β\",\"&beth;\":\"ℶ\",\"&between;\":\"≬\",\"&bfr;\":\"𝔟\",\"&bigcap;\":\"⋂\",\"&bigcirc;\":\"◯\",\"&bigcup;\":\"⋃\",\"&bigodot;\":\"⨀\",\"&bigoplus;\":\"⨁\",\"&bigotimes;\":\"⨂\",\"&bigsqcup;\":\"⨆\",\"&bigstar;\":\"★\",\"&bigtriangledown;\":\"▽\",\"&bigtriangleup;\":\"△\",\"&biguplus;\":\"⨄\",\"&bigvee;\":\"⋁\",\"&bigwedge;\":\"⋀\",\"&bkarow;\":\"⤍\",\"&blacklozenge;\":\"⧫\",\"&blacksquare;\":\"▪\",\"&blacktriangle;\":\"▴\",\"&blacktriangledown;\":\"▾\",\"&blacktriangleleft;\":\"◂\",\"&blacktriangleright;\":\"▸\",\"&blank;\":\"␣\",\"&blk12;\":\"▒\",\"&blk14;\":\"░\",\"&blk34;\":\"▓\",\"&block;\":\"█\",\"&bne;\":\"=⃥\",\"&bnequiv;\":\"≡⃥\",\"&bnot;\":\"⌐\",\"&bopf;\":\"𝕓\",\"&bot;\":\"⊥\",\"&bottom;\":\"⊥\",\"&bowtie;\":\"⋈\",\"&boxDL;\":\"╗\",\"&boxDR;\":\"╔\",\"&boxDl;\":\"╖\",\"&boxDr;\":\"╓\",\"&boxH;\":\"═\",\"&boxHD;\":\"╦\",\"&boxHU;\":\"╩\",\"&boxHd;\":\"╤\",\"&boxHu;\":\"╧\",\"&boxUL;\":\"╝\",\"&boxUR;\":\"╚\",\"&boxUl;\":\"╜\",\"&boxUr;\":\"╙\",\"&boxV;\":\"║\",\"&boxVH;\":\"╬\",\"&boxVL;\":\"╣\",\"&boxVR;\":\"╠\",\"&boxVh;\":\"╫\",\"&boxVl;\":\"╢\",\"&boxVr;\":\"╟\",\"&boxbox;\":\"⧉\",\"&boxdL;\":\"╕\",\"&boxdR;\":\"╒\",\"&boxdl;\":\"┐\",\"&boxdr;\":\"┌\",\"&boxh;\":\"─\",\"&boxhD;\":\"╥\",\"&boxhU;\":\"╨\",\"&boxhd;\":\"┬\",\"&boxhu;\":\"┴\",\"&boxminus;\":\"⊟\",\"&boxplus;\":\"⊞\",\"&boxtimes;\":\"⊠\",\"&boxuL;\":\"╛\",\"&boxuR;\":\"╘\",\"&boxul;\":\"┘\",\"&boxur;\":\"└\",\"&boxv;\":\"│\",\"&boxvH;\":\"╪\",\"&boxvL;\":\"╡\",\"&boxvR;\":\"╞\",\"&boxvh;\":\"┼\",\"&boxvl;\":\"┤\",\"&boxvr;\":\"├\",\"&bprime;\":\"‵\",\"&breve;\":\"˘\",\"&brvbar\":\"¦\",\"&brvbar;\":\"¦\",\"&bscr;\":\"𝒷\",\"&bsemi;\":\"⁏\",\"&bsim;\":\"∽\",\"&bsime;\":\"⋍\",\"&bsol;\":\"\\\\\",\"&bsolb;\":\"⧅\",\"&bsolhsub;\":\"⟈\",\"&bull;\":\"•\",\"&bullet;\":\"•\",\"&bump;\":\"≎\",\"&bumpE;\":\"⪮\",\"&bumpe;\":\"≏\",\"&bumpeq;\":\"≏\",\"&cacute;\":\"ć\",\"&cap;\":\"∩\",\"&capand;\":\"⩄\",\"&capbrcup;\":\"⩉\",\"&capcap;\":\"⩋\",\"&capcup;\":\"⩇\",\"&capdot;\":\"⩀\",\"&caps;\":\"∩︀\",\"&caret;\":\"⁁\",\"&caron;\":\"ˇ\",\"&ccaps;\":\"⩍\",\"&ccaron;\":\"č\",\"&ccedil\":\"ç\",\"&ccedil;\":\"ç\",\"&ccirc;\":\"ĉ\",\"&ccups;\":\"⩌\",\"&ccupssm;\":\"⩐\",\"&cdot;\":\"ċ\",\"&cedil\":\"¸\",\"&cedil;\":\"¸\",\"&cemptyv;\":\"⦲\",\"&cent\":\"¢\",\"&cent;\":\"¢\",\"&centerdot;\":\"·\",\"&cfr;\":\"𝔠\",\"&chcy;\":\"ч\",\"&check;\":\"✓\",\"&checkmark;\":\"✓\",\"&chi;\":\"χ\",\"&cir;\":\"○\",\"&cirE;\":\"⧃\",\"&circ;\":\"ˆ\",\"&circeq;\":\"≗\",\"&circlearrowleft;\":\"↺\",\"&circlearrowright;\":\"↻\",\"&circledR;\":\"®\",\"&circledS;\":\"Ⓢ\",\"&circledast;\":\"⊛\",\"&circledcirc;\":\"⊚\",\"&circleddash;\":\"⊝\",\"&cire;\":\"≗\",\"&cirfnint;\":\"⨐\",\"&cirmid;\":\"⫯\",\"&cirscir;\":\"⧂\",\"&clubs;\":\"♣\",\"&clubsuit;\":\"♣\",\"&colon;\":\":\",\"&colone;\":\"≔\",\"&coloneq;\":\"≔\",\"&comma;\":\",\",\"&commat;\":\"@\",\"&comp;\":\"∁\",\"&compfn;\":\"∘\",\"&complement;\":\"∁\",\"&complexes;\":\"ℂ\",\"&cong;\":\"≅\",\"&congdot;\":\"⩭\",\"&conint;\":\"∮\",\"&copf;\":\"𝕔\",\"&coprod;\":\"∐\",\"&copy\":\"©\",\"&copy;\":\"©\",\"&copysr;\":\"℗\",\"&crarr;\":\"↵\",\"&cross;\":\"✗\",\"&cscr;\":\"𝒸\",\"&csub;\":\"⫏\",\"&csube;\":\"⫑\",\"&csup;\":\"⫐\",\"&csupe;\":\"⫒\",\"&ctdot;\":\"⋯\",\"&cudarrl;\":\"⤸\",\"&cudarrr;\":\"⤵\",\"&cuepr;\":\"⋞\",\"&cuesc;\":\"⋟\",\"&cularr;\":\"↶\",\"&cularrp;\":\"⤽\",\"&cup;\":\"∪\",\"&cupbrcap;\":\"⩈\",\"&cupcap;\":\"⩆\",\"&cupcup;\":\"⩊\",\"&cupdot;\":\"⊍\",\"&cupor;\":\"⩅\",\"&cups;\":\"∪︀\",\"&curarr;\":\"↷\",\"&curarrm;\":\"⤼\",\"&curlyeqprec;\":\"⋞\",\"&curlyeqsucc;\":\"⋟\",\"&curlyvee;\":\"⋎\",\"&curlywedge;\":\"⋏\",\"&curren\":\"¤\",\"&curren;\":\"¤\",\"&curvearrowleft;\":\"↶\",\"&curvearrowright;\":\"↷\",\"&cuvee;\":\"⋎\",\"&cuwed;\":\"⋏\",\"&cwconint;\":\"∲\",\"&cwint;\":\"∱\",\"&cylcty;\":\"⌭\",\"&dArr;\":\"⇓\",\"&dHar;\":\"⥥\",\"&dagger;\":\"†\",\"&daleth;\":\"ℸ\",\"&darr;\":\"↓\",\"&dash;\":\"‐\",\"&dashv;\":\"⊣\",\"&dbkarow;\":\"⤏\",\"&dblac;\":\"˝\",\"&dcaron;\":\"ď\",\"&dcy;\":\"д\",\"&dd;\":\"ⅆ\",\"&ddagger;\":\"‡\",\"&ddarr;\":\"⇊\",\"&ddotseq;\":\"⩷\",\"&deg\":\"°\",\"&deg;\":\"°\",\"&delta;\":\"δ\",\"&demptyv;\":\"⦱\",\"&dfisht;\":\"⥿\",\"&dfr;\":\"𝔡\",\"&dharl;\":\"⇃\",\"&dharr;\":\"⇂\",\"&diam;\":\"⋄\",\"&diamond;\":\"⋄\",\"&diamondsuit;\":\"♦\",\"&diams;\":\"♦\",\"&die;\":\"¨\",\"&digamma;\":\"ϝ\",\"&disin;\":\"⋲\",\"&div;\":\"÷\",\"&divide\":\"÷\",\"&divide;\":\"÷\",\"&divideontimes;\":\"⋇\",\"&divonx;\":\"⋇\",\"&djcy;\":\"ђ\",\"&dlcorn;\":\"⌞\",\"&dlcrop;\":\"⌍\",\"&dollar;\":\"$\",\"&dopf;\":\"𝕕\",\"&dot;\":\"˙\",\"&doteq;\":\"≐\",\"&doteqdot;\":\"≑\",\"&dotminus;\":\"∸\",\"&dotplus;\":\"∔\",\"&dotsquare;\":\"⊡\",\"&doublebarwedge;\":\"⌆\",\"&downarrow;\":\"↓\",\"&downdownarrows;\":\"⇊\",\"&downharpoonleft;\":\"⇃\",\"&downharpoonright;\":\"⇂\",\"&drbkarow;\":\"⤐\",\"&drcorn;\":\"⌟\",\"&drcrop;\":\"⌌\",\"&dscr;\":\"𝒹\",\"&dscy;\":\"ѕ\",\"&dsol;\":\"⧶\",\"&dstrok;\":\"đ\",\"&dtdot;\":\"⋱\",\"&dtri;\":\"▿\",\"&dtrif;\":\"▾\",\"&duarr;\":\"⇵\",\"&duhar;\":\"⥯\",\"&dwangle;\":\"⦦\",\"&dzcy;\":\"џ\",\"&dzigrarr;\":\"⟿\",\"&eDDot;\":\"⩷\",\"&eDot;\":\"≑\",\"&eacute\":\"é\",\"&eacute;\":\"é\",\"&easter;\":\"⩮\",\"&ecaron;\":\"ě\",\"&ecir;\":\"≖\",\"&ecirc\":\"ê\",\"&ecirc;\":\"ê\",\"&ecolon;\":\"≕\",\"&ecy;\":\"э\",\"&edot;\":\"ė\",\"&ee;\":\"ⅇ\",\"&efDot;\":\"≒\",\"&efr;\":\"𝔢\",\"&eg;\":\"⪚\",\"&egrave\":\"è\",\"&egrave;\":\"è\",\"&egs;\":\"⪖\",\"&egsdot;\":\"⪘\",\"&el;\":\"⪙\",\"&elinters;\":\"⏧\",\"&ell;\":\"ℓ\",\"&els;\":\"⪕\",\"&elsdot;\":\"⪗\",\"&emacr;\":\"ē\",\"&empty;\":\"∅\",\"&emptyset;\":\"∅\",\"&emptyv;\":\"∅\",\"&emsp13;\":\" \",\"&emsp14;\":\" \",\"&emsp;\":\" \",\"&eng;\":\"ŋ\",\"&ensp;\":\" \",\"&eogon;\":\"ę\",\"&eopf;\":\"𝕖\",\"&epar;\":\"⋕\",\"&eparsl;\":\"⧣\",\"&eplus;\":\"⩱\",\"&epsi;\":\"ε\",\"&epsilon;\":\"ε\",\"&epsiv;\":\"ϵ\",\"&eqcirc;\":\"≖\",\"&eqcolon;\":\"≕\",\"&eqsim;\":\"≂\",\"&eqslantgtr;\":\"⪖\",\"&eqslantless;\":\"⪕\",\"&equals;\":\"=\",\"&equest;\":\"≟\",\"&equiv;\":\"≡\",\"&equivDD;\":\"⩸\",\"&eqvparsl;\":\"⧥\",\"&erDot;\":\"≓\",\"&erarr;\":\"⥱\",\"&escr;\":\"ℯ\",\"&esdot;\":\"≐\",\"&esim;\":\"≂\",\"&eta;\":\"η\",\"&eth\":\"ð\",\"&eth;\":\"ð\",\"&euml\":\"ë\",\"&euml;\":\"ë\",\"&euro;\":\"€\",\"&excl;\":\"!\",\"&exist;\":\"∃\",\"&expectation;\":\"ℰ\",\"&exponentiale;\":\"ⅇ\",\"&fallingdotseq;\":\"≒\",\"&fcy;\":\"ф\",\"&female;\":\"♀\",\"&ffilig;\":\"ﬃ\",\"&fflig;\":\"ﬀ\",\"&ffllig;\":\"ﬄ\",\"&ffr;\":\"𝔣\",\"&filig;\":\"ﬁ\",\"&fjlig;\":\"fj\",\"&flat;\":\"♭\",\"&fllig;\":\"ﬂ\",\"&fltns;\":\"▱\",\"&fnof;\":\"ƒ\",\"&fopf;\":\"𝕗\",\"&forall;\":\"∀\",\"&fork;\":\"⋔\",\"&forkv;\":\"⫙\",\"&fpartint;\":\"⨍\",\"&frac12\":\"½\",\"&frac12;\":\"½\",\"&frac13;\":\"⅓\",\"&frac14\":\"¼\",\"&frac14;\":\"¼\",\"&frac15;\":\"⅕\",\"&frac16;\":\"⅙\",\"&frac18;\":\"⅛\",\"&frac23;\":\"⅔\",\"&frac25;\":\"⅖\",\"&frac34\":\"¾\",\"&frac34;\":\"¾\",\"&frac35;\":\"⅗\",\"&frac38;\":\"⅜\",\"&frac45;\":\"⅘\",\"&frac56;\":\"⅚\",\"&frac58;\":\"⅝\",\"&frac78;\":\"⅞\",\"&frasl;\":\"⁄\",\"&frown;\":\"⌢\",\"&fscr;\":\"𝒻\",\"&gE;\":\"≧\",\"&gEl;\":\"⪌\",\"&gacute;\":\"ǵ\",\"&gamma;\":\"γ\",\"&gammad;\":\"ϝ\",\"&gap;\":\"⪆\",\"&gbreve;\":\"ğ\",\"&gcirc;\":\"ĝ\",\"&gcy;\":\"г\",\"&gdot;\":\"ġ\",\"&ge;\":\"≥\",\"&gel;\":\"⋛\",\"&geq;\":\"≥\",\"&geqq;\":\"≧\",\"&geqslant;\":\"⩾\",\"&ges;\":\"⩾\",\"&gescc;\":\"⪩\",\"&gesdot;\":\"⪀\",\"&gesdoto;\":\"⪂\",\"&gesdotol;\":\"⪄\",\"&gesl;\":\"⋛︀\",\"&gesles;\":\"⪔\",\"&gfr;\":\"𝔤\",\"&gg;\":\"≫\",\"&ggg;\":\"⋙\",\"&gimel;\":\"ℷ\",\"&gjcy;\":\"ѓ\",\"&gl;\":\"≷\",\"&glE;\":\"⪒\",\"&gla;\":\"⪥\",\"&glj;\":\"⪤\",\"&gnE;\":\"≩\",\"&gnap;\":\"⪊\",\"&gnapprox;\":\"⪊\",\"&gne;\":\"⪈\",\"&gneq;\":\"⪈\",\"&gneqq;\":\"≩\",\"&gnsim;\":\"⋧\",\"&gopf;\":\"𝕘\",\"&grave;\":\"`\",\"&gscr;\":\"ℊ\",\"&gsim;\":\"≳\",\"&gsime;\":\"⪎\",\"&gsiml;\":\"⪐\",\"&gt\":\">\",\"&gt;\":\">\",\"&gtcc;\":\"⪧\",\"&gtcir;\":\"⩺\",\"&gtdot;\":\"⋗\",\"&gtlPar;\":\"⦕\",\"&gtquest;\":\"⩼\",\"&gtrapprox;\":\"⪆\",\"&gtrarr;\":\"⥸\",\"&gtrdot;\":\"⋗\",\"&gtreqless;\":\"⋛\",\"&gtreqqless;\":\"⪌\",\"&gtrless;\":\"≷\",\"&gtrsim;\":\"≳\",\"&gvertneqq;\":\"≩︀\",\"&gvnE;\":\"≩︀\",\"&hArr;\":\"⇔\",\"&hairsp;\":\" \",\"&half;\":\"½\",\"&hamilt;\":\"ℋ\",\"&hardcy;\":\"ъ\",\"&harr;\":\"↔\",\"&harrcir;\":\"⥈\",\"&harrw;\":\"↭\",\"&hbar;\":\"ℏ\",\"&hcirc;\":\"ĥ\",\"&hearts;\":\"♥\",\"&heartsuit;\":\"♥\",\"&hellip;\":\"…\",\"&hercon;\":\"⊹\",\"&hfr;\":\"𝔥\",\"&hksearow;\":\"⤥\",\"&hkswarow;\":\"⤦\",\"&hoarr;\":\"⇿\",\"&homtht;\":\"∻\",\"&hookleftarrow;\":\"↩\",\"&hookrightarrow;\":\"↪\",\"&hopf;\":\"𝕙\",\"&horbar;\":\"―\",\"&hscr;\":\"𝒽\",\"&hslash;\":\"ℏ\",\"&hstrok;\":\"ħ\",\"&hybull;\":\"⁃\",\"&hyphen;\":\"‐\",\"&iacute\":\"í\",\"&iacute;\":\"í\",\"&ic;\":\"⁣\",\"&icirc\":\"î\",\"&icirc;\":\"î\",\"&icy;\":\"и\",\"&iecy;\":\"е\",\"&iexcl\":\"¡\",\"&iexcl;\":\"¡\",\"&iff;\":\"⇔\",\"&ifr;\":\"𝔦\",\"&igrave\":\"ì\",\"&igrave;\":\"ì\",\"&ii;\":\"ⅈ\",\"&iiiint;\":\"⨌\",\"&iiint;\":\"∭\",\"&iinfin;\":\"⧜\",\"&iiota;\":\"℩\",\"&ijlig;\":\"ĳ\",\"&imacr;\":\"ī\",\"&image;\":\"ℑ\",\"&imagline;\":\"ℐ\",\"&imagpart;\":\"ℑ\",\"&imath;\":\"ı\",\"&imof;\":\"⊷\",\"&imped;\":\"Ƶ\",\"&in;\":\"∈\",\"&incare;\":\"℅\",\"&infin;\":\"∞\",\"&infintie;\":\"⧝\",\"&inodot;\":\"ı\",\"&int;\":\"∫\",\"&intcal;\":\"⊺\",\"&integers;\":\"ℤ\",\"&intercal;\":\"⊺\",\"&intlarhk;\":\"⨗\",\"&intprod;\":\"⨼\",\"&iocy;\":\"ё\",\"&iogon;\":\"į\",\"&iopf;\":\"𝕚\",\"&iota;\":\"ι\",\"&iprod;\":\"⨼\",\"&iquest\":\"¿\",\"&iquest;\":\"¿\",\"&iscr;\":\"𝒾\",\"&isin;\":\"∈\",\"&isinE;\":\"⋹\",\"&isindot;\":\"⋵\",\"&isins;\":\"⋴\",\"&isinsv;\":\"⋳\",\"&isinv;\":\"∈\",\"&it;\":\"⁢\",\"&itilde;\":\"ĩ\",\"&iukcy;\":\"і\",\"&iuml\":\"ï\",\"&iuml;\":\"ï\",\"&jcirc;\":\"ĵ\",\"&jcy;\":\"й\",\"&jfr;\":\"𝔧\",\"&jmath;\":\"ȷ\",\"&jopf;\":\"𝕛\",\"&jscr;\":\"𝒿\",\"&jsercy;\":\"ј\",\"&jukcy;\":\"є\",\"&kappa;\":\"κ\",\"&kappav;\":\"ϰ\",\"&kcedil;\":\"ķ\",\"&kcy;\":\"к\",\"&kfr;\":\"𝔨\",\"&kgreen;\":\"ĸ\",\"&khcy;\":\"х\",\"&kjcy;\":\"ќ\",\"&kopf;\":\"𝕜\",\"&kscr;\":\"𝓀\",\"&lAarr;\":\"⇚\",\"&lArr;\":\"⇐\",\"&lAtail;\":\"⤛\",\"&lBarr;\":\"⤎\",\"&lE;\":\"≦\",\"&lEg;\":\"⪋\",\"&lHar;\":\"⥢\",\"&lacute;\":\"ĺ\",\"&laemptyv;\":\"⦴\",\"&lagran;\":\"ℒ\",\"&lambda;\":\"λ\",\"&lang;\":\"⟨\",\"&langd;\":\"⦑\",\"&langle;\":\"⟨\",\"&lap;\":\"⪅\",\"&laquo\":\"«\",\"&laquo;\":\"«\",\"&larr;\":\"←\",\"&larrb;\":\"⇤\",\"&larrbfs;\":\"⤟\",\"&larrfs;\":\"⤝\",\"&larrhk;\":\"↩\",\"&larrlp;\":\"↫\",\"&larrpl;\":\"⤹\",\"&larrsim;\":\"⥳\",\"&larrtl;\":\"↢\",\"&lat;\":\"⪫\",\"&latail;\":\"⤙\",\"&late;\":\"⪭\",\"&lates;\":\"⪭︀\",\"&lbarr;\":\"⤌\",\"&lbbrk;\":\"❲\",\"&lbrace;\":\"{\",\"&lbrack;\":\"[\",\"&lbrke;\":\"⦋\",\"&lbrksld;\":\"⦏\",\"&lbrkslu;\":\"⦍\",\"&lcaron;\":\"ľ\",\"&lcedil;\":\"ļ\",\"&lceil;\":\"⌈\",\"&lcub;\":\"{\",\"&lcy;\":\"л\",\"&ldca;\":\"⤶\",\"&ldquo;\":\"“\",\"&ldquor;\":\"„\",\"&ldrdhar;\":\"⥧\",\"&ldrushar;\":\"⥋\",\"&ldsh;\":\"↲\",\"&le;\":\"≤\",\"&leftarrow;\":\"←\",\"&leftarrowtail;\":\"↢\",\"&leftharpoondown;\":\"↽\",\"&leftharpoonup;\":\"↼\",\"&leftleftarrows;\":\"⇇\",\"&leftrightarrow;\":\"↔\",\"&leftrightarrows;\":\"⇆\",\"&leftrightharpoons;\":\"⇋\",\"&leftrightsquigarrow;\":\"↭\",\"&leftthreetimes;\":\"⋋\",\"&leg;\":\"⋚\",\"&leq;\":\"≤\",\"&leqq;\":\"≦\",\"&leqslant;\":\"⩽\",\"&les;\":\"⩽\",\"&lescc;\":\"⪨\",\"&lesdot;\":\"⩿\",\"&lesdoto;\":\"⪁\",\"&lesdotor;\":\"⪃\",\"&lesg;\":\"⋚︀\",\"&lesges;\":\"⪓\",\"&lessapprox;\":\"⪅\",\"&lessdot;\":\"⋖\",\"&lesseqgtr;\":\"⋚\",\"&lesseqqgtr;\":\"⪋\",\"&lessgtr;\":\"≶\",\"&lesssim;\":\"≲\",\"&lfisht;\":\"⥼\",\"&lfloor;\":\"⌊\",\"&lfr;\":\"𝔩\",\"&lg;\":\"≶\",\"&lgE;\":\"⪑\",\"&lhard;\":\"↽\",\"&lharu;\":\"↼\",\"&lharul;\":\"⥪\",\"&lhblk;\":\"▄\",\"&ljcy;\":\"љ\",\"&ll;\":\"≪\",\"&llarr;\":\"⇇\",\"&llcorner;\":\"⌞\",\"&llhard;\":\"⥫\",\"&lltri;\":\"◺\",\"&lmidot;\":\"ŀ\",\"&lmoust;\":\"⎰\",\"&lmoustache;\":\"⎰\",\"&lnE;\":\"≨\",\"&lnap;\":\"⪉\",\"&lnapprox;\":\"⪉\",\"&lne;\":\"⪇\",\"&lneq;\":\"⪇\",\"&lneqq;\":\"≨\",\"&lnsim;\":\"⋦\",\"&loang;\":\"⟬\",\"&loarr;\":\"⇽\",\"&lobrk;\":\"⟦\",\"&longleftarrow;\":\"⟵\",\"&longleftrightarrow;\":\"⟷\",\"&longmapsto;\":\"⟼\",\"&longrightarrow;\":\"⟶\",\"&looparrowleft;\":\"↫\",\"&looparrowright;\":\"↬\",\"&lopar;\":\"⦅\",\"&lopf;\":\"𝕝\",\"&loplus;\":\"⨭\",\"&lotimes;\":\"⨴\",\"&lowast;\":\"∗\",\"&lowbar;\":\"_\",\"&loz;\":\"◊\",\"&lozenge;\":\"◊\",\"&lozf;\":\"⧫\",\"&lpar;\":\"(\",\"&lparlt;\":\"⦓\",\"&lrarr;\":\"⇆\",\"&lrcorner;\":\"⌟\",\"&lrhar;\":\"⇋\",\"&lrhard;\":\"⥭\",\"&lrm;\":\"‎\",\"&lrtri;\":\"⊿\",\"&lsaquo;\":\"‹\",\"&lscr;\":\"𝓁\",\"&lsh;\":\"↰\",\"&lsim;\":\"≲\",\"&lsime;\":\"⪍\",\"&lsimg;\":\"⪏\",\"&lsqb;\":\"[\",\"&lsquo;\":\"‘\",\"&lsquor;\":\"‚\",\"&lstrok;\":\"ł\",\"&lt\":\"<\",\"&lt;\":\"<\",\"&ltcc;\":\"⪦\",\"&ltcir;\":\"⩹\",\"&ltdot;\":\"⋖\",\"&lthree;\":\"⋋\",\"&ltimes;\":\"⋉\",\"&ltlarr;\":\"⥶\",\"&ltquest;\":\"⩻\",\"&ltrPar;\":\"⦖\",\"&ltri;\":\"◃\",\"&ltrie;\":\"⊴\",\"&ltrif;\":\"◂\",\"&lurdshar;\":\"⥊\",\"&luruhar;\":\"⥦\",\"&lvertneqq;\":\"≨︀\",\"&lvnE;\":\"≨︀\",\"&mDDot;\":\"∺\",\"&macr\":\"¯\",\"&macr;\":\"¯\",\"&male;\":\"♂\",\"&malt;\":\"✠\",\"&maltese;\":\"✠\",\"&map;\":\"↦\",\"&mapsto;\":\"↦\",\"&mapstodown;\":\"↧\",\"&mapstoleft;\":\"↤\",\"&mapstoup;\":\"↥\",\"&marker;\":\"▮\",\"&mcomma;\":\"⨩\",\"&mcy;\":\"м\",\"&mdash;\":\"—\",\"&measuredangle;\":\"∡\",\"&mfr;\":\"𝔪\",\"&mho;\":\"℧\",\"&micro\":\"µ\",\"&micro;\":\"µ\",\"&mid;\":\"∣\",\"&midast;\":\"*\",\"&midcir;\":\"⫰\",\"&middot\":\"·\",\"&middot;\":\"·\",\"&minus;\":\"−\",\"&minusb;\":\"⊟\",\"&minusd;\":\"∸\",\"&minusdu;\":\"⨪\",\"&mlcp;\":\"⫛\",\"&mldr;\":\"…\",\"&mnplus;\":\"∓\",\"&models;\":\"⊧\",\"&mopf;\":\"𝕞\",\"&mp;\":\"∓\",\"&mscr;\":\"𝓂\",\"&mstpos;\":\"∾\",\"&mu;\":\"μ\",\"&multimap;\":\"⊸\",\"&mumap;\":\"⊸\",\"&nGg;\":\"⋙̸\",\"&nGt;\":\"≫⃒\",\"&nGtv;\":\"≫̸\",\"&nLeftarrow;\":\"⇍\",\"&nLeftrightarrow;\":\"⇎\",\"&nLl;\":\"⋘̸\",\"&nLt;\":\"≪⃒\",\"&nLtv;\":\"≪̸\",\"&nRightarrow;\":\"⇏\",\"&nVDash;\":\"⊯\",\"&nVdash;\":\"⊮\",\"&nabla;\":\"∇\",\"&nacute;\":\"ń\",\"&nang;\":\"∠⃒\",\"&nap;\":\"≉\",\"&napE;\":\"⩰̸\",\"&napid;\":\"≋̸\",\"&napos;\":\"ŉ\",\"&napprox;\":\"≉\",\"&natur;\":\"♮\",\"&natural;\":\"♮\",\"&naturals;\":\"ℕ\",\"&nbsp\":\" \",\"&nbsp;\":\" \",\"&nbump;\":\"≎̸\",\"&nbumpe;\":\"≏̸\",\"&ncap;\":\"⩃\",\"&ncaron;\":\"ň\",\"&ncedil;\":\"ņ\",\"&ncong;\":\"≇\",\"&ncongdot;\":\"⩭̸\",\"&ncup;\":\"⩂\",\"&ncy;\":\"н\",\"&ndash;\":\"–\",\"&ne;\":\"≠\",\"&neArr;\":\"⇗\",\"&nearhk;\":\"⤤\",\"&nearr;\":\"↗\",\"&nearrow;\":\"↗\",\"&nedot;\":\"≐̸\",\"&nequiv;\":\"≢\",\"&nesear;\":\"⤨\",\"&nesim;\":\"≂̸\",\"&nexist;\":\"∄\",\"&nexists;\":\"∄\",\"&nfr;\":\"𝔫\",\"&ngE;\":\"≧̸\",\"&nge;\":\"≱\",\"&ngeq;\":\"≱\",\"&ngeqq;\":\"≧̸\",\"&ngeqslant;\":\"⩾̸\",\"&nges;\":\"⩾̸\",\"&ngsim;\":\"≵\",\"&ngt;\":\"≯\",\"&ngtr;\":\"≯\",\"&nhArr;\":\"⇎\",\"&nharr;\":\"↮\",\"&nhpar;\":\"⫲\",\"&ni;\":\"∋\",\"&nis;\":\"⋼\",\"&nisd;\":\"⋺\",\"&niv;\":\"∋\",\"&njcy;\":\"њ\",\"&nlArr;\":\"⇍\",\"&nlE;\":\"≦̸\",\"&nlarr;\":\"↚\",\"&nldr;\":\"‥\",\"&nle;\":\"≰\",\"&nleftarrow;\":\"↚\",\"&nleftrightarrow;\":\"↮\",\"&nleq;\":\"≰\",\"&nleqq;\":\"≦̸\",\"&nleqslant;\":\"⩽̸\",\"&nles;\":\"⩽̸\",\"&nless;\":\"≮\",\"&nlsim;\":\"≴\",\"&nlt;\":\"≮\",\"&nltri;\":\"⋪\",\"&nltrie;\":\"⋬\",\"&nmid;\":\"∤\",\"&nopf;\":\"𝕟\",\"&not\":\"¬\",\"&not;\":\"¬\",\"&notin;\":\"∉\",\"&notinE;\":\"⋹̸\",\"&notindot;\":\"⋵̸\",\"&notinva;\":\"∉\",\"&notinvb;\":\"⋷\",\"&notinvc;\":\"⋶\",\"&notni;\":\"∌\",\"&notniva;\":\"∌\",\"&notnivb;\":\"⋾\",\"&notnivc;\":\"⋽\",\"&npar;\":\"∦\",\"&nparallel;\":\"∦\",\"&nparsl;\":\"⫽⃥\",\"&npart;\":\"∂̸\",\"&npolint;\":\"⨔\",\"&npr;\":\"⊀\",\"&nprcue;\":\"⋠\",\"&npre;\":\"⪯̸\",\"&nprec;\":\"⊀\",\"&npreceq;\":\"⪯̸\",\"&nrArr;\":\"⇏\",\"&nrarr;\":\"↛\",\"&nrarrc;\":\"⤳̸\",\"&nrarrw;\":\"↝̸\",\"&nrightarrow;\":\"↛\",\"&nrtri;\":\"⋫\",\"&nrtrie;\":\"⋭\",\"&nsc;\":\"⊁\",\"&nsccue;\":\"⋡\",\"&nsce;\":\"⪰̸\",\"&nscr;\":\"𝓃\",\"&nshortmid;\":\"∤\",\"&nshortparallel;\":\"∦\",\"&nsim;\":\"≁\",\"&nsime;\":\"≄\",\"&nsimeq;\":\"≄\",\"&nsmid;\":\"∤\",\"&nspar;\":\"∦\",\"&nsqsube;\":\"⋢\",\"&nsqsupe;\":\"⋣\",\"&nsub;\":\"⊄\",\"&nsubE;\":\"⫅̸\",\"&nsube;\":\"⊈\",\"&nsubset;\":\"⊂⃒\",\"&nsubseteq;\":\"⊈\",\"&nsubseteqq;\":\"⫅̸\",\"&nsucc;\":\"⊁\",\"&nsucceq;\":\"⪰̸\",\"&nsup;\":\"⊅\",\"&nsupE;\":\"⫆̸\",\"&nsupe;\":\"⊉\",\"&nsupset;\":\"⊃⃒\",\"&nsupseteq;\":\"⊉\",\"&nsupseteqq;\":\"⫆̸\",\"&ntgl;\":\"≹\",\"&ntilde\":\"ñ\",\"&ntilde;\":\"ñ\",\"&ntlg;\":\"≸\",\"&ntriangleleft;\":\"⋪\",\"&ntrianglelefteq;\":\"⋬\",\"&ntriangleright;\":\"⋫\",\"&ntrianglerighteq;\":\"⋭\",\"&nu;\":\"ν\",\"&num;\":\"#\",\"&numero;\":\"№\",\"&numsp;\":\" \",\"&nvDash;\":\"⊭\",\"&nvHarr;\":\"⤄\",\"&nvap;\":\"≍⃒\",\"&nvdash;\":\"⊬\",\"&nvge;\":\"≥⃒\",\"&nvgt;\":\">⃒\",\"&nvinfin;\":\"⧞\",\"&nvlArr;\":\"⤂\",\"&nvle;\":\"≤⃒\",\"&nvlt;\":\"<⃒\",\"&nvltrie;\":\"⊴⃒\",\"&nvrArr;\":\"⤃\",\"&nvrtrie;\":\"⊵⃒\",\"&nvsim;\":\"∼⃒\",\"&nwArr;\":\"⇖\",\"&nwarhk;\":\"⤣\",\"&nwarr;\":\"↖\",\"&nwarrow;\":\"↖\",\"&nwnear;\":\"⤧\",\"&oS;\":\"Ⓢ\",\"&oacute\":\"ó\",\"&oacute;\":\"ó\",\"&oast;\":\"⊛\",\"&ocir;\":\"⊚\",\"&ocirc\":\"ô\",\"&ocirc;\":\"ô\",\"&ocy;\":\"о\",\"&odash;\":\"⊝\",\"&odblac;\":\"ő\",\"&odiv;\":\"⨸\",\"&odot;\":\"⊙\",\"&odsold;\":\"⦼\",\"&oelig;\":\"œ\",\"&ofcir;\":\"⦿\",\"&ofr;\":\"𝔬\",\"&ogon;\":\"˛\",\"&ograve\":\"ò\",\"&ograve;\":\"ò\",\"&ogt;\":\"⧁\",\"&ohbar;\":\"⦵\",\"&ohm;\":\"Ω\",\"&oint;\":\"∮\",\"&olarr;\":\"↺\",\"&olcir;\":\"⦾\",\"&olcross;\":\"⦻\",\"&oline;\":\"‾\",\"&olt;\":\"⧀\",\"&omacr;\":\"ō\",\"&omega;\":\"ω\",\"&omicron;\":\"ο\",\"&omid;\":\"⦶\",\"&ominus;\":\"⊖\",\"&oopf;\":\"𝕠\",\"&opar;\":\"⦷\",\"&operp;\":\"⦹\",\"&oplus;\":\"⊕\",\"&or;\":\"∨\",\"&orarr;\":\"↻\",\"&ord;\":\"⩝\",\"&order;\":\"ℴ\",\"&orderof;\":\"ℴ\",\"&ordf\":\"ª\",\"&ordf;\":\"ª\",\"&ordm\":\"º\",\"&ordm;\":\"º\",\"&origof;\":\"⊶\",\"&oror;\":\"⩖\",\"&orslope;\":\"⩗\",\"&orv;\":\"⩛\",\"&oscr;\":\"ℴ\",\"&oslash\":\"ø\",\"&oslash;\":\"ø\",\"&osol;\":\"⊘\",\"&otilde\":\"õ\",\"&otilde;\":\"õ\",\"&otimes;\":\"⊗\",\"&otimesas;\":\"⨶\",\"&ouml\":\"ö\",\"&ouml;\":\"ö\",\"&ovbar;\":\"⌽\",\"&par;\":\"∥\",\"&para\":\"¶\",\"&para;\":\"¶\",\"&parallel;\":\"∥\",\"&parsim;\":\"⫳\",\"&parsl;\":\"⫽\",\"&part;\":\"∂\",\"&pcy;\":\"п\",\"&percnt;\":\"%\",\"&period;\":\".\",\"&permil;\":\"‰\",\"&perp;\":\"⊥\",\"&pertenk;\":\"‱\",\"&pfr;\":\"𝔭\",\"&phi;\":\"φ\",\"&phiv;\":\"ϕ\",\"&phmmat;\":\"ℳ\",\"&phone;\":\"☎\",\"&pi;\":\"π\",\"&pitchfork;\":\"⋔\",\"&piv;\":\"ϖ\",\"&planck;\":\"ℏ\",\"&planckh;\":\"ℎ\",\"&plankv;\":\"ℏ\",\"&plus;\":\"+\",\"&plusacir;\":\"⨣\",\"&plusb;\":\"⊞\",\"&pluscir;\":\"⨢\",\"&plusdo;\":\"∔\",\"&plusdu;\":\"⨥\",\"&pluse;\":\"⩲\",\"&plusmn\":\"±\",\"&plusmn;\":\"±\",\"&plussim;\":\"⨦\",\"&plustwo;\":\"⨧\",\"&pm;\":\"±\",\"&pointint;\":\"⨕\",\"&popf;\":\"𝕡\",\"&pound\":\"£\",\"&pound;\":\"£\",\"&pr;\":\"≺\",\"&prE;\":\"⪳\",\"&prap;\":\"⪷\",\"&prcue;\":\"≼\",\"&pre;\":\"⪯\",\"&prec;\":\"≺\",\"&precapprox;\":\"⪷\",\"&preccurlyeq;\":\"≼\",\"&preceq;\":\"⪯\",\"&precnapprox;\":\"⪹\",\"&precneqq;\":\"⪵\",\"&precnsim;\":\"⋨\",\"&precsim;\":\"≾\",\"&prime;\":\"′\",\"&primes;\":\"ℙ\",\"&prnE;\":\"⪵\",\"&prnap;\":\"⪹\",\"&prnsim;\":\"⋨\",\"&prod;\":\"∏\",\"&profalar;\":\"⌮\",\"&profline;\":\"⌒\",\"&profsurf;\":\"⌓\",\"&prop;\":\"∝\",\"&propto;\":\"∝\",\"&prsim;\":\"≾\",\"&prurel;\":\"⊰\",\"&pscr;\":\"𝓅\",\"&psi;\":\"ψ\",\"&puncsp;\":\" \",\"&qfr;\":\"𝔮\",\"&qint;\":\"⨌\",\"&qopf;\":\"𝕢\",\"&qprime;\":\"⁗\",\"&qscr;\":\"𝓆\",\"&quaternions;\":\"ℍ\",\"&quatint;\":\"⨖\",\"&quest;\":\"?\",\"&questeq;\":\"≟\",\"&quot\":'\"',\"&quot;\":'\"',\"&rAarr;\":\"⇛\",\"&rArr;\":\"⇒\",\"&rAtail;\":\"⤜\",\"&rBarr;\":\"⤏\",\"&rHar;\":\"⥤\",\"&race;\":\"∽̱\",\"&racute;\":\"ŕ\",\"&radic;\":\"√\",\"&raemptyv;\":\"⦳\",\"&rang;\":\"⟩\",\"&rangd;\":\"⦒\",\"&range;\":\"⦥\",\"&rangle;\":\"⟩\",\"&raquo\":\"»\",\"&raquo;\":\"»\",\"&rarr;\":\"→\",\"&rarrap;\":\"⥵\",\"&rarrb;\":\"⇥\",\"&rarrbfs;\":\"⤠\",\"&rarrc;\":\"⤳\",\"&rarrfs;\":\"⤞\",\"&rarrhk;\":\"↪\",\"&rarrlp;\":\"↬\",\"&rarrpl;\":\"⥅\",\"&rarrsim;\":\"⥴\",\"&rarrtl;\":\"↣\",\"&rarrw;\":\"↝\",\"&ratail;\":\"⤚\",\"&ratio;\":\"∶\",\"&rationals;\":\"ℚ\",\"&rbarr;\":\"⤍\",\"&rbbrk;\":\"❳\",\"&rbrace;\":\"}\",\"&rbrack;\":\"]\",\"&rbrke;\":\"⦌\",\"&rbrksld;\":\"⦎\",\"&rbrkslu;\":\"⦐\",\"&rcaron;\":\"ř\",\"&rcedil;\":\"ŗ\",\"&rceil;\":\"⌉\",\"&rcub;\":\"}\",\"&rcy;\":\"р\",\"&rdca;\":\"⤷\",\"&rdldhar;\":\"⥩\",\"&rdquo;\":\"”\",\"&rdquor;\":\"”\",\"&rdsh;\":\"↳\",\"&real;\":\"ℜ\",\"&realine;\":\"ℛ\",\"&realpart;\":\"ℜ\",\"&reals;\":\"ℝ\",\"&rect;\":\"▭\",\"&reg\":\"®\",\"&reg;\":\"®\",\"&rfisht;\":\"⥽\",\"&rfloor;\":\"⌋\",\"&rfr;\":\"𝔯\",\"&rhard;\":\"⇁\",\"&rharu;\":\"⇀\",\"&rharul;\":\"⥬\",\"&rho;\":\"ρ\",\"&rhov;\":\"ϱ\",\"&rightarrow;\":\"→\",\"&rightarrowtail;\":\"↣\",\"&rightharpoondown;\":\"⇁\",\"&rightharpoonup;\":\"⇀\",\"&rightleftarrows;\":\"⇄\",\"&rightleftharpoons;\":\"⇌\",\"&rightrightarrows;\":\"⇉\",\"&rightsquigarrow;\":\"↝\",\"&rightthreetimes;\":\"⋌\",\"&ring;\":\"˚\",\"&risingdotseq;\":\"≓\",\"&rlarr;\":\"⇄\",\"&rlhar;\":\"⇌\",\"&rlm;\":\"‏\",\"&rmoust;\":\"⎱\",\"&rmoustache;\":\"⎱\",\"&rnmid;\":\"⫮\",\"&roang;\":\"⟭\",\"&roarr;\":\"⇾\",\"&robrk;\":\"⟧\",\"&ropar;\":\"⦆\",\"&ropf;\":\"𝕣\",\"&roplus;\":\"⨮\",\"&rotimes;\":\"⨵\",\"&rpar;\":\")\",\"&rpargt;\":\"⦔\",\"&rppolint;\":\"⨒\",\"&rrarr;\":\"⇉\",\"&rsaquo;\":\"›\",\"&rscr;\":\"𝓇\",\"&rsh;\":\"↱\",\"&rsqb;\":\"]\",\"&rsquo;\":\"’\",\"&rsquor;\":\"’\",\"&rthree;\":\"⋌\",\"&rtimes;\":\"⋊\",\"&rtri;\":\"▹\",\"&rtrie;\":\"⊵\",\"&rtrif;\":\"▸\",\"&rtriltri;\":\"⧎\",\"&ruluhar;\":\"⥨\",\"&rx;\":\"℞\",\"&sacute;\":\"ś\",\"&sbquo;\":\"‚\",\"&sc;\":\"≻\",\"&scE;\":\"⪴\",\"&scap;\":\"⪸\",\"&scaron;\":\"š\",\"&sccue;\":\"≽\",\"&sce;\":\"⪰\",\"&scedil;\":\"ş\",\"&scirc;\":\"ŝ\",\"&scnE;\":\"⪶\",\"&scnap;\":\"⪺\",\"&scnsim;\":\"⋩\",\"&scpolint;\":\"⨓\",\"&scsim;\":\"≿\",\"&scy;\":\"с\",\"&sdot;\":\"⋅\",\"&sdotb;\":\"⊡\",\"&sdote;\":\"⩦\",\"&seArr;\":\"⇘\",\"&searhk;\":\"⤥\",\"&searr;\":\"↘\",\"&searrow;\":\"↘\",\"&sect\":\"§\",\"&sect;\":\"§\",\"&semi;\":\";\",\"&seswar;\":\"⤩\",\"&setminus;\":\"∖\",\"&setmn;\":\"∖\",\"&sext;\":\"✶\",\"&sfr;\":\"𝔰\",\"&sfrown;\":\"⌢\",\"&sharp;\":\"♯\",\"&shchcy;\":\"щ\",\"&shcy;\":\"ш\",\"&shortmid;\":\"∣\",\"&shortparallel;\":\"∥\",\"&shy\":\"­\",\"&shy;\":\"­\",\"&sigma;\":\"σ\",\"&sigmaf;\":\"ς\",\"&sigmav;\":\"ς\",\"&sim;\":\"∼\",\"&simdot;\":\"⩪\",\"&sime;\":\"≃\",\"&simeq;\":\"≃\",\"&simg;\":\"⪞\",\"&simgE;\":\"⪠\",\"&siml;\":\"⪝\",\"&simlE;\":\"⪟\",\"&simne;\":\"≆\",\"&simplus;\":\"⨤\",\"&simrarr;\":\"⥲\",\"&slarr;\":\"←\",\"&smallsetminus;\":\"∖\",\"&smashp;\":\"⨳\",\"&smeparsl;\":\"⧤\",\"&smid;\":\"∣\",\"&smile;\":\"⌣\",\"&smt;\":\"⪪\",\"&smte;\":\"⪬\",\"&smtes;\":\"⪬︀\",\"&softcy;\":\"ь\",\"&sol;\":\"/\",\"&solb;\":\"⧄\",\"&solbar;\":\"⌿\",\"&sopf;\":\"𝕤\",\"&spades;\":\"♠\",\"&spadesuit;\":\"♠\",\"&spar;\":\"∥\",\"&sqcap;\":\"⊓\",\"&sqcaps;\":\"⊓︀\",\"&sqcup;\":\"⊔\",\"&sqcups;\":\"⊔︀\",\"&sqsub;\":\"⊏\",\"&sqsube;\":\"⊑\",\"&sqsubset;\":\"⊏\",\"&sqsubseteq;\":\"⊑\",\"&sqsup;\":\"⊐\",\"&sqsupe;\":\"⊒\",\"&sqsupset;\":\"⊐\",\"&sqsupseteq;\":\"⊒\",\"&squ;\":\"□\",\"&square;\":\"□\",\"&squarf;\":\"▪\",\"&squf;\":\"▪\",\"&srarr;\":\"→\",\"&sscr;\":\"𝓈\",\"&ssetmn;\":\"∖\",\"&ssmile;\":\"⌣\",\"&sstarf;\":\"⋆\",\"&star;\":\"☆\",\"&starf;\":\"★\",\"&straightepsilon;\":\"ϵ\",\"&straightphi;\":\"ϕ\",\"&strns;\":\"¯\",\"&sub;\":\"⊂\",\"&subE;\":\"⫅\",\"&subdot;\":\"⪽\",\"&sube;\":\"⊆\",\"&subedot;\":\"⫃\",\"&submult;\":\"⫁\",\"&subnE;\":\"⫋\",\"&subne;\":\"⊊\",\"&subplus;\":\"⪿\",\"&subrarr;\":\"⥹\",\"&subset;\":\"⊂\",\"&subseteq;\":\"⊆\",\"&subseteqq;\":\"⫅\",\"&subsetneq;\":\"⊊\",\"&subsetneqq;\":\"⫋\",\"&subsim;\":\"⫇\",\"&subsub;\":\"⫕\",\"&subsup;\":\"⫓\",\"&succ;\":\"≻\",\"&succapprox;\":\"⪸\",\"&succcurlyeq;\":\"≽\",\"&succeq;\":\"⪰\",\"&succnapprox;\":\"⪺\",\"&succneqq;\":\"⪶\",\"&succnsim;\":\"⋩\",\"&succsim;\":\"≿\",\"&sum;\":\"∑\",\"&sung;\":\"♪\",\"&sup1\":\"¹\",\"&sup1;\":\"¹\",\"&sup2\":\"²\",\"&sup2;\":\"²\",\"&sup3\":\"³\",\"&sup3;\":\"³\",\"&sup;\":\"⊃\",\"&supE;\":\"⫆\",\"&supdot;\":\"⪾\",\"&supdsub;\":\"⫘\",\"&supe;\":\"⊇\",\"&supedot;\":\"⫄\",\"&suphsol;\":\"⟉\",\"&suphsub;\":\"⫗\",\"&suplarr;\":\"⥻\",\"&supmult;\":\"⫂\",\"&supnE;\":\"⫌\",\"&supne;\":\"⊋\",\"&supplus;\":\"⫀\",\"&supset;\":\"⊃\",\"&supseteq;\":\"⊇\",\"&supseteqq;\":\"⫆\",\"&supsetneq;\":\"⊋\",\"&supsetneqq;\":\"⫌\",\"&supsim;\":\"⫈\",\"&supsub;\":\"⫔\",\"&supsup;\":\"⫖\",\"&swArr;\":\"⇙\",\"&swarhk;\":\"⤦\",\"&swarr;\":\"↙\",\"&swarrow;\":\"↙\",\"&swnwar;\":\"⤪\",\"&szlig\":\"ß\",\"&szlig;\":\"ß\",\"&target;\":\"⌖\",\"&tau;\":\"τ\",\"&tbrk;\":\"⎴\",\"&tcaron;\":\"ť\",\"&tcedil;\":\"ţ\",\"&tcy;\":\"т\",\"&tdot;\":\"⃛\",\"&telrec;\":\"⌕\",\"&tfr;\":\"𝔱\",\"&there4;\":\"∴\",\"&therefore;\":\"∴\",\"&theta;\":\"θ\",\"&thetasym;\":\"ϑ\",\"&thetav;\":\"ϑ\",\"&thickapprox;\":\"≈\",\"&thicksim;\":\"∼\",\"&thinsp;\":\" \",\"&thkap;\":\"≈\",\"&thksim;\":\"∼\",\"&thorn\":\"þ\",\"&thorn;\":\"þ\",\"&tilde;\":\"˜\",\"&times\":\"×\",\"&times;\":\"×\",\"&timesb;\":\"⊠\",\"&timesbar;\":\"⨱\",\"&timesd;\":\"⨰\",\"&tint;\":\"∭\",\"&toea;\":\"⤨\",\"&top;\":\"⊤\",\"&topbot;\":\"⌶\",\"&topcir;\":\"⫱\",\"&topf;\":\"𝕥\",\"&topfork;\":\"⫚\",\"&tosa;\":\"⤩\",\"&tprime;\":\"‴\",\"&trade;\":\"™\",\"&triangle;\":\"▵\",\"&triangledown;\":\"▿\",\"&triangleleft;\":\"◃\",\"&trianglelefteq;\":\"⊴\",\"&triangleq;\":\"≜\",\"&triangleright;\":\"▹\",\"&trianglerighteq;\":\"⊵\",\"&tridot;\":\"◬\",\"&trie;\":\"≜\",\"&triminus;\":\"⨺\",\"&triplus;\":\"⨹\",\"&trisb;\":\"⧍\",\"&tritime;\":\"⨻\",\"&trpezium;\":\"⏢\",\"&tscr;\":\"𝓉\",\"&tscy;\":\"ц\",\"&tshcy;\":\"ћ\",\"&tstrok;\":\"ŧ\",\"&twixt;\":\"≬\",\"&twoheadleftarrow;\":\"↞\",\"&twoheadrightarrow;\":\"↠\",\"&uArr;\":\"⇑\",\"&uHar;\":\"⥣\",\"&uacute\":\"ú\",\"&uacute;\":\"ú\",\"&uarr;\":\"↑\",\"&ubrcy;\":\"ў\",\"&ubreve;\":\"ŭ\",\"&ucirc\":\"û\",\"&ucirc;\":\"û\",\"&ucy;\":\"у\",\"&udarr;\":\"⇅\",\"&udblac;\":\"ű\",\"&udhar;\":\"⥮\",\"&ufisht;\":\"⥾\",\"&ufr;\":\"𝔲\",\"&ugrave\":\"ù\",\"&ugrave;\":\"ù\",\"&uharl;\":\"↿\",\"&uharr;\":\"↾\",\"&uhblk;\":\"▀\",\"&ulcorn;\":\"⌜\",\"&ulcorner;\":\"⌜\",\"&ulcrop;\":\"⌏\",\"&ultri;\":\"◸\",\"&umacr;\":\"ū\",\"&uml\":\"¨\",\"&uml;\":\"¨\",\"&uogon;\":\"ų\",\"&uopf;\":\"𝕦\",\"&uparrow;\":\"↑\",\"&updownarrow;\":\"↕\",\"&upharpoonleft;\":\"↿\",\"&upharpoonright;\":\"↾\",\"&uplus;\":\"⊎\",\"&upsi;\":\"υ\",\"&upsih;\":\"ϒ\",\"&upsilon;\":\"υ\",\"&upuparrows;\":\"⇈\",\"&urcorn;\":\"⌝\",\"&urcorner;\":\"⌝\",\"&urcrop;\":\"⌎\",\"&uring;\":\"ů\",\"&urtri;\":\"◹\",\"&uscr;\":\"𝓊\",\"&utdot;\":\"⋰\",\"&utilde;\":\"ũ\",\"&utri;\":\"▵\",\"&utrif;\":\"▴\",\"&uuarr;\":\"⇈\",\"&uuml\":\"ü\",\"&uuml;\":\"ü\",\"&uwangle;\":\"⦧\",\"&vArr;\":\"⇕\",\"&vBar;\":\"⫨\",\"&vBarv;\":\"⫩\",\"&vDash;\":\"⊨\",\"&vangrt;\":\"⦜\",\"&varepsilon;\":\"ϵ\",\"&varkappa;\":\"ϰ\",\"&varnothing;\":\"∅\",\"&varphi;\":\"ϕ\",\"&varpi;\":\"ϖ\",\"&varpropto;\":\"∝\",\"&varr;\":\"↕\",\"&varrho;\":\"ϱ\",\"&varsigma;\":\"ς\",\"&varsubsetneq;\":\"⊊︀\",\"&varsubsetneqq;\":\"⫋︀\",\"&varsupsetneq;\":\"⊋︀\",\"&varsupsetneqq;\":\"⫌︀\",\"&vartheta;\":\"ϑ\",\"&vartriangleleft;\":\"⊲\",\"&vartriangleright;\":\"⊳\",\"&vcy;\":\"в\",\"&vdash;\":\"⊢\",\"&vee;\":\"∨\",\"&veebar;\":\"⊻\",\"&veeeq;\":\"≚\",\"&vellip;\":\"⋮\",\"&verbar;\":\"|\",\"&vert;\":\"|\",\"&vfr;\":\"𝔳\",\"&vltri;\":\"⊲\",\"&vnsub;\":\"⊂⃒\",\"&vnsup;\":\"⊃⃒\",\"&vopf;\":\"𝕧\",\"&vprop;\":\"∝\",\"&vrtri;\":\"⊳\",\"&vscr;\":\"𝓋\",\"&vsubnE;\":\"⫋︀\",\"&vsubne;\":\"⊊︀\",\"&vsupnE;\":\"⫌︀\",\"&vsupne;\":\"⊋︀\",\"&vzigzag;\":\"⦚\",\"&wcirc;\":\"ŵ\",\"&wedbar;\":\"⩟\",\"&wedge;\":\"∧\",\"&wedgeq;\":\"≙\",\"&weierp;\":\"℘\",\"&wfr;\":\"𝔴\",\"&wopf;\":\"𝕨\",\"&wp;\":\"℘\",\"&wr;\":\"≀\",\"&wreath;\":\"≀\",\"&wscr;\":\"𝓌\",\"&xcap;\":\"⋂\",\"&xcirc;\":\"◯\",\"&xcup;\":\"⋃\",\"&xdtri;\":\"▽\",\"&xfr;\":\"𝔵\",\"&xhArr;\":\"⟺\",\"&xharr;\":\"⟷\",\"&xi;\":\"ξ\",\"&xlArr;\":\"⟸\",\"&xlarr;\":\"⟵\",\"&xmap;\":\"⟼\",\"&xnis;\":\"⋻\",\"&xodot;\":\"⨀\",\"&xopf;\":\"𝕩\",\"&xoplus;\":\"⨁\",\"&xotime;\":\"⨂\",\"&xrArr;\":\"⟹\",\"&xrarr;\":\"⟶\",\"&xscr;\":\"𝓍\",\"&xsqcup;\":\"⨆\",\"&xuplus;\":\"⨄\",\"&xutri;\":\"△\",\"&xvee;\":\"⋁\",\"&xwedge;\":\"⋀\",\"&yacute\":\"ý\",\"&yacute;\":\"ý\",\"&yacy;\":\"я\",\"&ycirc;\":\"ŷ\",\"&ycy;\":\"ы\",\"&yen\":\"¥\",\"&yen;\":\"¥\",\"&yfr;\":\"𝔶\",\"&yicy;\":\"ї\",\"&yopf;\":\"𝕪\",\"&yscr;\":\"𝓎\",\"&yucy;\":\"ю\",\"&yuml\":\"ÿ\",\"&yuml;\":\"ÿ\",\"&zacute;\":\"ź\",\"&zcaron;\":\"ž\",\"&zcy;\":\"з\",\"&zdot;\":\"ż\",\"&zeetrf;\":\"ℨ\",\"&zeta;\":\"ζ\",\"&zfr;\":\"𝔷\",\"&zhcy;\":\"ж\",\"&zigrarr;\":\"⇝\",\"&zopf;\":\"𝕫\",\"&zscr;\":\"𝓏\",\"&zwj;\":\"‍\",\"&zwnj;\":\"‌\"},characters:{\"Æ\":\"&AElig;\",\"&\":\"&amp;\",\"Á\":\"&Aacute;\",\"Ă\":\"&Abreve;\",\"Â\":\"&Acirc;\",\"А\":\"&Acy;\",\"𝔄\":\"&Afr;\",\"À\":\"&Agrave;\",\"Α\":\"&Alpha;\",\"Ā\":\"&Amacr;\",\"⩓\":\"&And;\",\"Ą\":\"&Aogon;\",\"𝔸\":\"&Aopf;\",\"⁡\":\"&af;\",\"Å\":\"&angst;\",\"𝒜\":\"&Ascr;\",\"≔\":\"&coloneq;\",\"Ã\":\"&Atilde;\",\"Ä\":\"&Auml;\",\"∖\":\"&ssetmn;\",\"⫧\":\"&Barv;\",\"⌆\":\"&doublebarwedge;\",\"Б\":\"&Bcy;\",\"∵\":\"&because;\",\"ℬ\":\"&bernou;\",\"Β\":\"&Beta;\",\"𝔅\":\"&Bfr;\",\"𝔹\":\"&Bopf;\",\"˘\":\"&breve;\",\"≎\":\"&bump;\",\"Ч\":\"&CHcy;\",\"©\":\"&copy;\",\"Ć\":\"&Cacute;\",\"⋒\":\"&Cap;\",\"ⅅ\":\"&DD;\",\"ℭ\":\"&Cfr;\",\"Č\":\"&Ccaron;\",\"Ç\":\"&Ccedil;\",\"Ĉ\":\"&Ccirc;\",\"∰\":\"&Cconint;\",\"Ċ\":\"&Cdot;\",\"¸\":\"&cedil;\",\"·\":\"&middot;\",\"Χ\":\"&Chi;\",\"⊙\":\"&odot;\",\"⊖\":\"&ominus;\",\"⊕\":\"&oplus;\",\"⊗\":\"&otimes;\",\"∲\":\"&cwconint;\",\"”\":\"&rdquor;\",\"’\":\"&rsquor;\",\"∷\":\"&Proportion;\",\"⩴\":\"&Colone;\",\"≡\":\"&equiv;\",\"∯\":\"&DoubleContourIntegral;\",\"∮\":\"&oint;\",\"ℂ\":\"&complexes;\",\"∐\":\"&coprod;\",\"∳\":\"&awconint;\",\"⨯\":\"&Cross;\",\"𝒞\":\"&Cscr;\",\"⋓\":\"&Cup;\",\"≍\":\"&asympeq;\",\"⤑\":\"&DDotrahd;\",\"Ђ\":\"&DJcy;\",\"Ѕ\":\"&DScy;\",\"Џ\":\"&DZcy;\",\"‡\":\"&ddagger;\",\"↡\":\"&Darr;\",\"⫤\":\"&DoubleLeftTee;\",\"Ď\":\"&Dcaron;\",\"Д\":\"&Dcy;\",\"∇\":\"&nabla;\",\"Δ\":\"&Delta;\",\"𝔇\":\"&Dfr;\",\"´\":\"&acute;\",\"˙\":\"&dot;\",\"˝\":\"&dblac;\",\"`\":\"&grave;\",\"˜\":\"&tilde;\",\"⋄\":\"&diamond;\",\"ⅆ\":\"&dd;\",\"𝔻\":\"&Dopf;\",\"¨\":\"&uml;\",\"⃜\":\"&DotDot;\",\"≐\":\"&esdot;\",\"⇓\":\"&dArr;\",\"⇐\":\"&lArr;\",\"⇔\":\"&iff;\",\"⟸\":\"&xlArr;\",\"⟺\":\"&xhArr;\",\"⟹\":\"&xrArr;\",\"⇒\":\"&rArr;\",\"⊨\":\"&vDash;\",\"⇑\":\"&uArr;\",\"⇕\":\"&vArr;\",\"∥\":\"&spar;\",\"↓\":\"&downarrow;\",\"⤓\":\"&DownArrowBar;\",\"⇵\":\"&duarr;\",\"̑\":\"&DownBreve;\",\"⥐\":\"&DownLeftRightVector;\",\"⥞\":\"&DownLeftTeeVector;\",\"↽\":\"&lhard;\",\"⥖\":\"&DownLeftVectorBar;\",\"⥟\":\"&DownRightTeeVector;\",\"⇁\":\"&rightharpoondown;\",\"⥗\":\"&DownRightVectorBar;\",\"⊤\":\"&top;\",\"↧\":\"&mapstodown;\",\"𝒟\":\"&Dscr;\",\"Đ\":\"&Dstrok;\",\"Ŋ\":\"&ENG;\",\"Ð\":\"&ETH;\",\"É\":\"&Eacute;\",\"Ě\":\"&Ecaron;\",\"Ê\":\"&Ecirc;\",\"Э\":\"&Ecy;\",\"Ė\":\"&Edot;\",\"𝔈\":\"&Efr;\",\"È\":\"&Egrave;\",\"∈\":\"&isinv;\",\"Ē\":\"&Emacr;\",\"◻\":\"&EmptySmallSquare;\",\"▫\":\"&EmptyVerySmallSquare;\",\"Ę\":\"&Eogon;\",\"𝔼\":\"&Eopf;\",\"Ε\":\"&Epsilon;\",\"⩵\":\"&Equal;\",\"≂\":\"&esim;\",\"⇌\":\"&rlhar;\",\"ℰ\":\"&expectation;\",\"⩳\":\"&Esim;\",\"Η\":\"&Eta;\",\"Ë\":\"&Euml;\",\"∃\":\"&exist;\",\"ⅇ\":\"&exponentiale;\",\"Ф\":\"&Fcy;\",\"𝔉\":\"&Ffr;\",\"◼\":\"&FilledSmallSquare;\",\"▪\":\"&squf;\",\"𝔽\":\"&Fopf;\",\"∀\":\"&forall;\",\"ℱ\":\"&Fscr;\",\"Ѓ\":\"&GJcy;\",\">\":\"&gt;\",\"Γ\":\"&Gamma;\",\"Ϝ\":\"&Gammad;\",\"Ğ\":\"&Gbreve;\",\"Ģ\":\"&Gcedil;\",\"Ĝ\":\"&Gcirc;\",\"Г\":\"&Gcy;\",\"Ġ\":\"&Gdot;\",\"𝔊\":\"&Gfr;\",\"⋙\":\"&ggg;\",\"𝔾\":\"&Gopf;\",\"≥\":\"&geq;\",\"⋛\":\"&gtreqless;\",\"≧\":\"&geqq;\",\"⪢\":\"&GreaterGreater;\",\"≷\":\"&gtrless;\",\"⩾\":\"&ges;\",\"≳\":\"&gtrsim;\",\"𝒢\":\"&Gscr;\",\"≫\":\"&gg;\",\"Ъ\":\"&HARDcy;\",\"ˇ\":\"&caron;\",\"^\":\"&Hat;\",\"Ĥ\":\"&Hcirc;\",\"ℌ\":\"&Poincareplane;\",\"ℋ\":\"&hamilt;\",\"ℍ\":\"&quaternions;\",\"─\":\"&boxh;\",\"Ħ\":\"&Hstrok;\",\"≏\":\"&bumpeq;\",\"Е\":\"&IEcy;\",\"Ĳ\":\"&IJlig;\",\"Ё\":\"&IOcy;\",\"Í\":\"&Iacute;\",\"Î\":\"&Icirc;\",\"И\":\"&Icy;\",\"İ\":\"&Idot;\",\"ℑ\":\"&imagpart;\",\"Ì\":\"&Igrave;\",\"Ī\":\"&Imacr;\",\"ⅈ\":\"&ii;\",\"∬\":\"&Int;\",\"∫\":\"&int;\",\"⋂\":\"&xcap;\",\"⁣\":\"&ic;\",\"⁢\":\"&it;\",\"Į\":\"&Iogon;\",\"𝕀\":\"&Iopf;\",\"Ι\":\"&Iota;\",\"ℐ\":\"&imagline;\",\"Ĩ\":\"&Itilde;\",\"І\":\"&Iukcy;\",\"Ï\":\"&Iuml;\",\"Ĵ\":\"&Jcirc;\",\"Й\":\"&Jcy;\",\"𝔍\":\"&Jfr;\",\"𝕁\":\"&Jopf;\",\"𝒥\":\"&Jscr;\",\"Ј\":\"&Jsercy;\",\"Є\":\"&Jukcy;\",\"Х\":\"&KHcy;\",\"Ќ\":\"&KJcy;\",\"Κ\":\"&Kappa;\",\"Ķ\":\"&Kcedil;\",\"К\":\"&Kcy;\",\"𝔎\":\"&Kfr;\",\"𝕂\":\"&Kopf;\",\"𝒦\":\"&Kscr;\",\"Љ\":\"&LJcy;\",\"<\":\"&lt;\",\"Ĺ\":\"&Lacute;\",\"Λ\":\"&Lambda;\",\"⟪\":\"&Lang;\",\"ℒ\":\"&lagran;\",\"↞\":\"&twoheadleftarrow;\",\"Ľ\":\"&Lcaron;\",\"Ļ\":\"&Lcedil;\",\"Л\":\"&Lcy;\",\"⟨\":\"&langle;\",\"←\":\"&slarr;\",\"⇤\":\"&larrb;\",\"⇆\":\"&lrarr;\",\"⌈\":\"&lceil;\",\"⟦\":\"&lobrk;\",\"⥡\":\"&LeftDownTeeVector;\",\"⇃\":\"&downharpoonleft;\",\"⥙\":\"&LeftDownVectorBar;\",\"⌊\":\"&lfloor;\",\"↔\":\"&leftrightarrow;\",\"⥎\":\"&LeftRightVector;\",\"⊣\":\"&dashv;\",\"↤\":\"&mapstoleft;\",\"⥚\":\"&LeftTeeVector;\",\"⊲\":\"&vltri;\",\"⧏\":\"&LeftTriangleBar;\",\"⊴\":\"&trianglelefteq;\",\"⥑\":\"&LeftUpDownVector;\",\"⥠\":\"&LeftUpTeeVector;\",\"↿\":\"&upharpoonleft;\",\"⥘\":\"&LeftUpVectorBar;\",\"↼\":\"&lharu;\",\"⥒\":\"&LeftVectorBar;\",\"⋚\":\"&lesseqgtr;\",\"≦\":\"&leqq;\",\"≶\":\"&lg;\",\"⪡\":\"&LessLess;\",\"⩽\":\"&les;\",\"≲\":\"&lsim;\",\"𝔏\":\"&Lfr;\",\"⋘\":\"&Ll;\",\"⇚\":\"&lAarr;\",\"Ŀ\":\"&Lmidot;\",\"⟵\":\"&xlarr;\",\"⟷\":\"&xharr;\",\"⟶\":\"&xrarr;\",\"𝕃\":\"&Lopf;\",\"↙\":\"&swarrow;\",\"↘\":\"&searrow;\",\"↰\":\"&lsh;\",\"Ł\":\"&Lstrok;\",\"≪\":\"&ll;\",\"⤅\":\"&Map;\",\"М\":\"&Mcy;\",\" \":\"&MediumSpace;\",\"ℳ\":\"&phmmat;\",\"𝔐\":\"&Mfr;\",\"∓\":\"&mp;\",\"𝕄\":\"&Mopf;\",\"Μ\":\"&Mu;\",\"Њ\":\"&NJcy;\",\"Ń\":\"&Nacute;\",\"Ň\":\"&Ncaron;\",\"Ņ\":\"&Ncedil;\",\"Н\":\"&Ncy;\",\"​\":\"&ZeroWidthSpace;\",\"\\n\":\"&NewLine;\",\"𝔑\":\"&Nfr;\",\"⁠\":\"&NoBreak;\",\" \":\"&nbsp;\",\"ℕ\":\"&naturals;\",\"⫬\":\"&Not;\",\"≢\":\"&nequiv;\",\"≭\":\"&NotCupCap;\",\"∦\":\"&nspar;\",\"∉\":\"&notinva;\",\"≠\":\"&ne;\",\"≂̸\":\"&nesim;\",\"∄\":\"&nexists;\",\"≯\":\"&ngtr;\",\"≱\":\"&ngeq;\",\"≧̸\":\"&ngeqq;\",\"≫̸\":\"&nGtv;\",\"≹\":\"&ntgl;\",\"⩾̸\":\"&nges;\",\"≵\":\"&ngsim;\",\"≎̸\":\"&nbump;\",\"≏̸\":\"&nbumpe;\",\"⋪\":\"&ntriangleleft;\",\"⧏̸\":\"&NotLeftTriangleBar;\",\"⋬\":\"&ntrianglelefteq;\",\"≮\":\"&nlt;\",\"≰\":\"&nleq;\",\"≸\":\"&ntlg;\",\"≪̸\":\"&nLtv;\",\"⩽̸\":\"&nles;\",\"≴\":\"&nlsim;\",\"⪢̸\":\"&NotNestedGreaterGreater;\",\"⪡̸\":\"&NotNestedLessLess;\",\"⊀\":\"&nprec;\",\"⪯̸\":\"&npreceq;\",\"⋠\":\"&nprcue;\",\"∌\":\"&notniva;\",\"⋫\":\"&ntriangleright;\",\"⧐̸\":\"&NotRightTriangleBar;\",\"⋭\":\"&ntrianglerighteq;\",\"⊏̸\":\"&NotSquareSubset;\",\"⋢\":\"&nsqsube;\",\"⊐̸\":\"&NotSquareSuperset;\",\"⋣\":\"&nsqsupe;\",\"⊂⃒\":\"&vnsub;\",\"⊈\":\"&nsubseteq;\",\"⊁\":\"&nsucc;\",\"⪰̸\":\"&nsucceq;\",\"⋡\":\"&nsccue;\",\"≿̸\":\"&NotSucceedsTilde;\",\"⊃⃒\":\"&vnsup;\",\"⊉\":\"&nsupseteq;\",\"≁\":\"&nsim;\",\"≄\":\"&nsimeq;\",\"≇\":\"&ncong;\",\"≉\":\"&napprox;\",\"∤\":\"&nsmid;\",\"𝒩\":\"&Nscr;\",\"Ñ\":\"&Ntilde;\",\"Ν\":\"&Nu;\",\"Œ\":\"&OElig;\",\"Ó\":\"&Oacute;\",\"Ô\":\"&Ocirc;\",\"О\":\"&Ocy;\",\"Ő\":\"&Odblac;\",\"𝔒\":\"&Ofr;\",\"Ò\":\"&Ograve;\",\"Ō\":\"&Omacr;\",\"Ω\":\"&ohm;\",\"Ο\":\"&Omicron;\",\"𝕆\":\"&Oopf;\",\"“\":\"&ldquo;\",\"‘\":\"&lsquo;\",\"⩔\":\"&Or;\",\"𝒪\":\"&Oscr;\",\"Ø\":\"&Oslash;\",\"Õ\":\"&Otilde;\",\"⨷\":\"&Otimes;\",\"Ö\":\"&Ouml;\",\"‾\":\"&oline;\",\"⏞\":\"&OverBrace;\",\"⎴\":\"&tbrk;\",\"⏜\":\"&OverParenthesis;\",\"∂\":\"&part;\",\"П\":\"&Pcy;\",\"𝔓\":\"&Pfr;\",\"Φ\":\"&Phi;\",\"Π\":\"&Pi;\",\"±\":\"&pm;\",\"ℙ\":\"&primes;\",\"⪻\":\"&Pr;\",\"≺\":\"&prec;\",\"⪯\":\"&preceq;\",\"≼\":\"&preccurlyeq;\",\"≾\":\"&prsim;\",\"″\":\"&Prime;\",\"∏\":\"&prod;\",\"∝\":\"&vprop;\",\"𝒫\":\"&Pscr;\",\"Ψ\":\"&Psi;\",'\"':\"&quot;\",\"𝔔\":\"&Qfr;\",\"ℚ\":\"&rationals;\",\"𝒬\":\"&Qscr;\",\"⤐\":\"&drbkarow;\",\"®\":\"&reg;\",\"Ŕ\":\"&Racute;\",\"⟫\":\"&Rang;\",\"↠\":\"&twoheadrightarrow;\",\"⤖\":\"&Rarrtl;\",\"Ř\":\"&Rcaron;\",\"Ŗ\":\"&Rcedil;\",\"Р\":\"&Rcy;\",\"ℜ\":\"&realpart;\",\"∋\":\"&niv;\",\"⇋\":\"&lrhar;\",\"⥯\":\"&duhar;\",\"Ρ\":\"&Rho;\",\"⟩\":\"&rangle;\",\"→\":\"&srarr;\",\"⇥\":\"&rarrb;\",\"⇄\":\"&rlarr;\",\"⌉\":\"&rceil;\",\"⟧\":\"&robrk;\",\"⥝\":\"&RightDownTeeVector;\",\"⇂\":\"&downharpoonright;\",\"⥕\":\"&RightDownVectorBar;\",\"⌋\":\"&rfloor;\",\"⊢\":\"&vdash;\",\"↦\":\"&mapsto;\",\"⥛\":\"&RightTeeVector;\",\"⊳\":\"&vrtri;\",\"⧐\":\"&RightTriangleBar;\",\"⊵\":\"&trianglerighteq;\",\"⥏\":\"&RightUpDownVector;\",\"⥜\":\"&RightUpTeeVector;\",\"↾\":\"&upharpoonright;\",\"⥔\":\"&RightUpVectorBar;\",\"⇀\":\"&rightharpoonup;\",\"⥓\":\"&RightVectorBar;\",\"ℝ\":\"&reals;\",\"⥰\":\"&RoundImplies;\",\"⇛\":\"&rAarr;\",\"ℛ\":\"&realine;\",\"↱\":\"&rsh;\",\"⧴\":\"&RuleDelayed;\",\"Щ\":\"&SHCHcy;\",\"Ш\":\"&SHcy;\",\"Ь\":\"&SOFTcy;\",\"Ś\":\"&Sacute;\",\"⪼\":\"&Sc;\",\"Š\":\"&Scaron;\",\"Ş\":\"&Scedil;\",\"Ŝ\":\"&Scirc;\",\"С\":\"&Scy;\",\"𝔖\":\"&Sfr;\",\"↑\":\"&uparrow;\",\"Σ\":\"&Sigma;\",\"∘\":\"&compfn;\",\"𝕊\":\"&Sopf;\",\"√\":\"&radic;\",\"□\":\"&square;\",\"⊓\":\"&sqcap;\",\"⊏\":\"&sqsubset;\",\"⊑\":\"&sqsubseteq;\",\"⊐\":\"&sqsupset;\",\"⊒\":\"&sqsupseteq;\",\"⊔\":\"&sqcup;\",\"𝒮\":\"&Sscr;\",\"⋆\":\"&sstarf;\",\"⋐\":\"&Subset;\",\"⊆\":\"&subseteq;\",\"≻\":\"&succ;\",\"⪰\":\"&succeq;\",\"≽\":\"&succcurlyeq;\",\"≿\":\"&succsim;\",\"∑\":\"&sum;\",\"⋑\":\"&Supset;\",\"⊃\":\"&supset;\",\"⊇\":\"&supseteq;\",\"Þ\":\"&THORN;\",\"™\":\"&trade;\",\"Ћ\":\"&TSHcy;\",\"Ц\":\"&TScy;\",\"\\t\":\"&Tab;\",\"Τ\":\"&Tau;\",\"Ť\":\"&Tcaron;\",\"Ţ\":\"&Tcedil;\",\"Т\":\"&Tcy;\",\"𝔗\":\"&Tfr;\",\"∴\":\"&therefore;\",\"Θ\":\"&Theta;\",\"  \":\"&ThickSpace;\",\" \":\"&thinsp;\",\"∼\":\"&thksim;\",\"≃\":\"&simeq;\",\"≅\":\"&cong;\",\"≈\":\"&thkap;\",\"𝕋\":\"&Topf;\",\"⃛\":\"&tdot;\",\"𝒯\":\"&Tscr;\",\"Ŧ\":\"&Tstrok;\",\"Ú\":\"&Uacute;\",\"↟\":\"&Uarr;\",\"⥉\":\"&Uarrocir;\",\"Ў\":\"&Ubrcy;\",\"Ŭ\":\"&Ubreve;\",\"Û\":\"&Ucirc;\",\"У\":\"&Ucy;\",\"Ű\":\"&Udblac;\",\"𝔘\":\"&Ufr;\",\"Ù\":\"&Ugrave;\",\"Ū\":\"&Umacr;\",_:\"&lowbar;\",\"⏟\":\"&UnderBrace;\",\"⎵\":\"&bbrk;\",\"⏝\":\"&UnderParenthesis;\",\"⋃\":\"&xcup;\",\"⊎\":\"&uplus;\",\"Ų\":\"&Uogon;\",\"𝕌\":\"&Uopf;\",\"⤒\":\"&UpArrowBar;\",\"⇅\":\"&udarr;\",\"↕\":\"&varr;\",\"⥮\":\"&udhar;\",\"⊥\":\"&perp;\",\"↥\":\"&mapstoup;\",\"↖\":\"&nwarrow;\",\"↗\":\"&nearrow;\",\"ϒ\":\"&upsih;\",\"Υ\":\"&Upsilon;\",\"Ů\":\"&Uring;\",\"𝒰\":\"&Uscr;\",\"Ũ\":\"&Utilde;\",\"Ü\":\"&Uuml;\",\"⊫\":\"&VDash;\",\"⫫\":\"&Vbar;\",\"В\":\"&Vcy;\",\"⊩\":\"&Vdash;\",\"⫦\":\"&Vdashl;\",\"⋁\":\"&xvee;\",\"‖\":\"&Vert;\",\"∣\":\"&smid;\",\"|\":\"&vert;\",\"❘\":\"&VerticalSeparator;\",\"≀\":\"&wreath;\",\" \":\"&hairsp;\",\"𝔙\":\"&Vfr;\",\"𝕍\":\"&Vopf;\",\"𝒱\":\"&Vscr;\",\"⊪\":\"&Vvdash;\",\"Ŵ\":\"&Wcirc;\",\"⋀\":\"&xwedge;\",\"𝔚\":\"&Wfr;\",\"𝕎\":\"&Wopf;\",\"𝒲\":\"&Wscr;\",\"𝔛\":\"&Xfr;\",\"Ξ\":\"&Xi;\",\"𝕏\":\"&Xopf;\",\"𝒳\":\"&Xscr;\",\"Я\":\"&YAcy;\",\"Ї\":\"&YIcy;\",\"Ю\":\"&YUcy;\",\"Ý\":\"&Yacute;\",\"Ŷ\":\"&Ycirc;\",\"Ы\":\"&Ycy;\",\"𝔜\":\"&Yfr;\",\"𝕐\":\"&Yopf;\",\"𝒴\":\"&Yscr;\",\"Ÿ\":\"&Yuml;\",\"Ж\":\"&ZHcy;\",\"Ź\":\"&Zacute;\",\"Ž\":\"&Zcaron;\",\"З\":\"&Zcy;\",\"Ż\":\"&Zdot;\",\"Ζ\":\"&Zeta;\",\"ℨ\":\"&zeetrf;\",\"ℤ\":\"&integers;\",\"𝒵\":\"&Zscr;\",\"á\":\"&aacute;\",\"ă\":\"&abreve;\",\"∾\":\"&mstpos;\",\"∾̳\":\"&acE;\",\"∿\":\"&acd;\",\"â\":\"&acirc;\",\"а\":\"&acy;\",\"æ\":\"&aelig;\",\"𝔞\":\"&afr;\",\"à\":\"&agrave;\",\"ℵ\":\"&aleph;\",\"α\":\"&alpha;\",\"ā\":\"&amacr;\",\"⨿\":\"&amalg;\",\"∧\":\"&wedge;\",\"⩕\":\"&andand;\",\"⩜\":\"&andd;\",\"⩘\":\"&andslope;\",\"⩚\":\"&andv;\",\"∠\":\"&angle;\",\"⦤\":\"&ange;\",\"∡\":\"&measuredangle;\",\"⦨\":\"&angmsdaa;\",\"⦩\":\"&angmsdab;\",\"⦪\":\"&angmsdac;\",\"⦫\":\"&angmsdad;\",\"⦬\":\"&angmsdae;\",\"⦭\":\"&angmsdaf;\",\"⦮\":\"&angmsdag;\",\"⦯\":\"&angmsdah;\",\"∟\":\"&angrt;\",\"⊾\":\"&angrtvb;\",\"⦝\":\"&angrtvbd;\",\"∢\":\"&angsph;\",\"⍼\":\"&angzarr;\",\"ą\":\"&aogon;\",\"𝕒\":\"&aopf;\",\"⩰\":\"&apE;\",\"⩯\":\"&apacir;\",\"≊\":\"&approxeq;\",\"≋\":\"&apid;\",\"'\":\"&apos;\",\"å\":\"&aring;\",\"𝒶\":\"&ascr;\",\"*\":\"&midast;\",\"ã\":\"&atilde;\",\"ä\":\"&auml;\",\"⨑\":\"&awint;\",\"⫭\":\"&bNot;\",\"≌\":\"&bcong;\",\"϶\":\"&bepsi;\",\"‵\":\"&bprime;\",\"∽\":\"&bsim;\",\"⋍\":\"&bsime;\",\"⊽\":\"&barvee;\",\"⌅\":\"&barwedge;\",\"⎶\":\"&bbrktbrk;\",\"б\":\"&bcy;\",\"„\":\"&ldquor;\",\"⦰\":\"&bemptyv;\",\"β\":\"&beta;\",\"ℶ\":\"&beth;\",\"≬\":\"&twixt;\",\"𝔟\":\"&bfr;\",\"◯\":\"&xcirc;\",\"⨀\":\"&xodot;\",\"⨁\":\"&xoplus;\",\"⨂\":\"&xotime;\",\"⨆\":\"&xsqcup;\",\"★\":\"&starf;\",\"▽\":\"&xdtri;\",\"△\":\"&xutri;\",\"⨄\":\"&xuplus;\",\"⤍\":\"&rbarr;\",\"⧫\":\"&lozf;\",\"▴\":\"&utrif;\",\"▾\":\"&dtrif;\",\"◂\":\"&ltrif;\",\"▸\":\"&rtrif;\",\"␣\":\"&blank;\",\"▒\":\"&blk12;\",\"░\":\"&blk14;\",\"▓\":\"&blk34;\",\"█\":\"&block;\",\"=⃥\":\"&bne;\",\"≡⃥\":\"&bnequiv;\",\"⌐\":\"&bnot;\",\"𝕓\":\"&bopf;\",\"⋈\":\"&bowtie;\",\"╗\":\"&boxDL;\",\"╔\":\"&boxDR;\",\"╖\":\"&boxDl;\",\"╓\":\"&boxDr;\",\"═\":\"&boxH;\",\"╦\":\"&boxHD;\",\"╩\":\"&boxHU;\",\"╤\":\"&boxHd;\",\"╧\":\"&boxHu;\",\"╝\":\"&boxUL;\",\"╚\":\"&boxUR;\",\"╜\":\"&boxUl;\",\"╙\":\"&boxUr;\",\"║\":\"&boxV;\",\"╬\":\"&boxVH;\",\"╣\":\"&boxVL;\",\"╠\":\"&boxVR;\",\"╫\":\"&boxVh;\",\"╢\":\"&boxVl;\",\"╟\":\"&boxVr;\",\"⧉\":\"&boxbox;\",\"╕\":\"&boxdL;\",\"╒\":\"&boxdR;\",\"┐\":\"&boxdl;\",\"┌\":\"&boxdr;\",\"╥\":\"&boxhD;\",\"╨\":\"&boxhU;\",\"┬\":\"&boxhd;\",\"┴\":\"&boxhu;\",\"⊟\":\"&minusb;\",\"⊞\":\"&plusb;\",\"⊠\":\"&timesb;\",\"╛\":\"&boxuL;\",\"╘\":\"&boxuR;\",\"┘\":\"&boxul;\",\"└\":\"&boxur;\",\"│\":\"&boxv;\",\"╪\":\"&boxvH;\",\"╡\":\"&boxvL;\",\"╞\":\"&boxvR;\",\"┼\":\"&boxvh;\",\"┤\":\"&boxvl;\",\"├\":\"&boxvr;\",\"¦\":\"&brvbar;\",\"𝒷\":\"&bscr;\",\"⁏\":\"&bsemi;\",\"\\\\\":\"&bsol;\",\"⧅\":\"&bsolb;\",\"⟈\":\"&bsolhsub;\",\"•\":\"&bullet;\",\"⪮\":\"&bumpE;\",\"ć\":\"&cacute;\",\"∩\":\"&cap;\",\"⩄\":\"&capand;\",\"⩉\":\"&capbrcup;\",\"⩋\":\"&capcap;\",\"⩇\":\"&capcup;\",\"⩀\":\"&capdot;\",\"∩︀\":\"&caps;\",\"⁁\":\"&caret;\",\"⩍\":\"&ccaps;\",\"č\":\"&ccaron;\",\"ç\":\"&ccedil;\",\"ĉ\":\"&ccirc;\",\"⩌\":\"&ccups;\",\"⩐\":\"&ccupssm;\",\"ċ\":\"&cdot;\",\"⦲\":\"&cemptyv;\",\"¢\":\"&cent;\",\"𝔠\":\"&cfr;\",\"ч\":\"&chcy;\",\"✓\":\"&checkmark;\",\"χ\":\"&chi;\",\"○\":\"&cir;\",\"⧃\":\"&cirE;\",\"ˆ\":\"&circ;\",\"≗\":\"&cire;\",\"↺\":\"&olarr;\",\"↻\":\"&orarr;\",\"Ⓢ\":\"&oS;\",\"⊛\":\"&oast;\",\"⊚\":\"&ocir;\",\"⊝\":\"&odash;\",\"⨐\":\"&cirfnint;\",\"⫯\":\"&cirmid;\",\"⧂\":\"&cirscir;\",\"♣\":\"&clubsuit;\",\":\":\"&colon;\",\",\":\"&comma;\",\"@\":\"&commat;\",\"∁\":\"&complement;\",\"⩭\":\"&congdot;\",\"𝕔\":\"&copf;\",\"℗\":\"&copysr;\",\"↵\":\"&crarr;\",\"✗\":\"&cross;\",\"𝒸\":\"&cscr;\",\"⫏\":\"&csub;\",\"⫑\":\"&csube;\",\"⫐\":\"&csup;\",\"⫒\":\"&csupe;\",\"⋯\":\"&ctdot;\",\"⤸\":\"&cudarrl;\",\"⤵\":\"&cudarrr;\",\"⋞\":\"&curlyeqprec;\",\"⋟\":\"&curlyeqsucc;\",\"↶\":\"&curvearrowleft;\",\"⤽\":\"&cularrp;\",\"∪\":\"&cup;\",\"⩈\":\"&cupbrcap;\",\"⩆\":\"&cupcap;\",\"⩊\":\"&cupcup;\",\"⊍\":\"&cupdot;\",\"⩅\":\"&cupor;\",\"∪︀\":\"&cups;\",\"↷\":\"&curvearrowright;\",\"⤼\":\"&curarrm;\",\"⋎\":\"&cuvee;\",\"⋏\":\"&cuwed;\",\"¤\":\"&curren;\",\"∱\":\"&cwint;\",\"⌭\":\"&cylcty;\",\"⥥\":\"&dHar;\",\"†\":\"&dagger;\",\"ℸ\":\"&daleth;\",\"‐\":\"&hyphen;\",\"⤏\":\"&rBarr;\",\"ď\":\"&dcaron;\",\"д\":\"&dcy;\",\"⇊\":\"&downdownarrows;\",\"⩷\":\"&eDDot;\",\"°\":\"&deg;\",\"δ\":\"&delta;\",\"⦱\":\"&demptyv;\",\"⥿\":\"&dfisht;\",\"𝔡\":\"&dfr;\",\"♦\":\"&diams;\",\"ϝ\":\"&gammad;\",\"⋲\":\"&disin;\",\"÷\":\"&divide;\",\"⋇\":\"&divonx;\",\"ђ\":\"&djcy;\",\"⌞\":\"&llcorner;\",\"⌍\":\"&dlcrop;\",$:\"&dollar;\",\"𝕕\":\"&dopf;\",\"≑\":\"&eDot;\",\"∸\":\"&minusd;\",\"∔\":\"&plusdo;\",\"⊡\":\"&sdotb;\",\"⌟\":\"&lrcorner;\",\"⌌\":\"&drcrop;\",\"𝒹\":\"&dscr;\",\"ѕ\":\"&dscy;\",\"⧶\":\"&dsol;\",\"đ\":\"&dstrok;\",\"⋱\":\"&dtdot;\",\"▿\":\"&triangledown;\",\"⦦\":\"&dwangle;\",\"џ\":\"&dzcy;\",\"⟿\":\"&dzigrarr;\",\"é\":\"&eacute;\",\"⩮\":\"&easter;\",\"ě\":\"&ecaron;\",\"≖\":\"&eqcirc;\",\"ê\":\"&ecirc;\",\"≕\":\"&eqcolon;\",\"э\":\"&ecy;\",\"ė\":\"&edot;\",\"≒\":\"&fallingdotseq;\",\"𝔢\":\"&efr;\",\"⪚\":\"&eg;\",\"è\":\"&egrave;\",\"⪖\":\"&eqslantgtr;\",\"⪘\":\"&egsdot;\",\"⪙\":\"&el;\",\"⏧\":\"&elinters;\",\"ℓ\":\"&ell;\",\"⪕\":\"&eqslantless;\",\"⪗\":\"&elsdot;\",\"ē\":\"&emacr;\",\"∅\":\"&varnothing;\",\" \":\"&emsp13;\",\" \":\"&emsp14;\",\" \":\"&emsp;\",\"ŋ\":\"&eng;\",\" \":\"&ensp;\",\"ę\":\"&eogon;\",\"𝕖\":\"&eopf;\",\"⋕\":\"&epar;\",\"⧣\":\"&eparsl;\",\"⩱\":\"&eplus;\",\"ε\":\"&epsilon;\",\"ϵ\":\"&varepsilon;\",\"=\":\"&equals;\",\"≟\":\"&questeq;\",\"⩸\":\"&equivDD;\",\"⧥\":\"&eqvparsl;\",\"≓\":\"&risingdotseq;\",\"⥱\":\"&erarr;\",\"ℯ\":\"&escr;\",\"η\":\"&eta;\",\"ð\":\"&eth;\",\"ë\":\"&euml;\",\"€\":\"&euro;\",\"!\":\"&excl;\",\"ф\":\"&fcy;\",\"♀\":\"&female;\",\"ﬃ\":\"&ffilig;\",\"ﬀ\":\"&fflig;\",\"ﬄ\":\"&ffllig;\",\"𝔣\":\"&ffr;\",\"ﬁ\":\"&filig;\",fj:\"&fjlig;\",\"♭\":\"&flat;\",\"ﬂ\":\"&fllig;\",\"▱\":\"&fltns;\",\"ƒ\":\"&fnof;\",\"𝕗\":\"&fopf;\",\"⋔\":\"&pitchfork;\",\"⫙\":\"&forkv;\",\"⨍\":\"&fpartint;\",\"½\":\"&half;\",\"⅓\":\"&frac13;\",\"¼\":\"&frac14;\",\"⅕\":\"&frac15;\",\"⅙\":\"&frac16;\",\"⅛\":\"&frac18;\",\"⅔\":\"&frac23;\",\"⅖\":\"&frac25;\",\"¾\":\"&frac34;\",\"⅗\":\"&frac35;\",\"⅜\":\"&frac38;\",\"⅘\":\"&frac45;\",\"⅚\":\"&frac56;\",\"⅝\":\"&frac58;\",\"⅞\":\"&frac78;\",\"⁄\":\"&frasl;\",\"⌢\":\"&sfrown;\",\"𝒻\":\"&fscr;\",\"⪌\":\"&gtreqqless;\",\"ǵ\":\"&gacute;\",\"γ\":\"&gamma;\",\"⪆\":\"&gtrapprox;\",\"ğ\":\"&gbreve;\",\"ĝ\":\"&gcirc;\",\"г\":\"&gcy;\",\"ġ\":\"&gdot;\",\"⪩\":\"&gescc;\",\"⪀\":\"&gesdot;\",\"⪂\":\"&gesdoto;\",\"⪄\":\"&gesdotol;\",\"⋛︀\":\"&gesl;\",\"⪔\":\"&gesles;\",\"𝔤\":\"&gfr;\",\"ℷ\":\"&gimel;\",\"ѓ\":\"&gjcy;\",\"⪒\":\"&glE;\",\"⪥\":\"&gla;\",\"⪤\":\"&glj;\",\"≩\":\"&gneqq;\",\"⪊\":\"&gnapprox;\",\"⪈\":\"&gneq;\",\"⋧\":\"&gnsim;\",\"𝕘\":\"&gopf;\",\"ℊ\":\"&gscr;\",\"⪎\":\"&gsime;\",\"⪐\":\"&gsiml;\",\"⪧\":\"&gtcc;\",\"⩺\":\"&gtcir;\",\"⋗\":\"&gtrdot;\",\"⦕\":\"&gtlPar;\",\"⩼\":\"&gtquest;\",\"⥸\":\"&gtrarr;\",\"≩︀\":\"&gvnE;\",\"ъ\":\"&hardcy;\",\"⥈\":\"&harrcir;\",\"↭\":\"&leftrightsquigarrow;\",\"ℏ\":\"&plankv;\",\"ĥ\":\"&hcirc;\",\"♥\":\"&heartsuit;\",\"…\":\"&mldr;\",\"⊹\":\"&hercon;\",\"𝔥\":\"&hfr;\",\"⤥\":\"&searhk;\",\"⤦\":\"&swarhk;\",\"⇿\":\"&hoarr;\",\"∻\":\"&homtht;\",\"↩\":\"&larrhk;\",\"↪\":\"&rarrhk;\",\"𝕙\":\"&hopf;\",\"―\":\"&horbar;\",\"𝒽\":\"&hscr;\",\"ħ\":\"&hstrok;\",\"⁃\":\"&hybull;\",\"í\":\"&iacute;\",\"î\":\"&icirc;\",\"и\":\"&icy;\",\"е\":\"&iecy;\",\"¡\":\"&iexcl;\",\"𝔦\":\"&ifr;\",\"ì\":\"&igrave;\",\"⨌\":\"&qint;\",\"∭\":\"&tint;\",\"⧜\":\"&iinfin;\",\"℩\":\"&iiota;\",\"ĳ\":\"&ijlig;\",\"ī\":\"&imacr;\",\"ı\":\"&inodot;\",\"⊷\":\"&imof;\",\"Ƶ\":\"&imped;\",\"℅\":\"&incare;\",\"∞\":\"&infin;\",\"⧝\":\"&infintie;\",\"⊺\":\"&intercal;\",\"⨗\":\"&intlarhk;\",\"⨼\":\"&iprod;\",\"ё\":\"&iocy;\",\"į\":\"&iogon;\",\"𝕚\":\"&iopf;\",\"ι\":\"&iota;\",\"¿\":\"&iquest;\",\"𝒾\":\"&iscr;\",\"⋹\":\"&isinE;\",\"⋵\":\"&isindot;\",\"⋴\":\"&isins;\",\"⋳\":\"&isinsv;\",\"ĩ\":\"&itilde;\",\"і\":\"&iukcy;\",\"ï\":\"&iuml;\",\"ĵ\":\"&jcirc;\",\"й\":\"&jcy;\",\"𝔧\":\"&jfr;\",\"ȷ\":\"&jmath;\",\"𝕛\":\"&jopf;\",\"𝒿\":\"&jscr;\",\"ј\":\"&jsercy;\",\"є\":\"&jukcy;\",\"κ\":\"&kappa;\",\"ϰ\":\"&varkappa;\",\"ķ\":\"&kcedil;\",\"к\":\"&kcy;\",\"𝔨\":\"&kfr;\",\"ĸ\":\"&kgreen;\",\"х\":\"&khcy;\",\"ќ\":\"&kjcy;\",\"𝕜\":\"&kopf;\",\"𝓀\":\"&kscr;\",\"⤛\":\"&lAtail;\",\"⤎\":\"&lBarr;\",\"⪋\":\"&lesseqqgtr;\",\"⥢\":\"&lHar;\",\"ĺ\":\"&lacute;\",\"⦴\":\"&laemptyv;\",\"λ\":\"&lambda;\",\"⦑\":\"&langd;\",\"⪅\":\"&lessapprox;\",\"«\":\"&laquo;\",\"⤟\":\"&larrbfs;\",\"⤝\":\"&larrfs;\",\"↫\":\"&looparrowleft;\",\"⤹\":\"&larrpl;\",\"⥳\":\"&larrsim;\",\"↢\":\"&leftarrowtail;\",\"⪫\":\"&lat;\",\"⤙\":\"&latail;\",\"⪭\":\"&late;\",\"⪭︀\":\"&lates;\",\"⤌\":\"&lbarr;\",\"❲\":\"&lbbrk;\",\"{\":\"&lcub;\",\"[\":\"&lsqb;\",\"⦋\":\"&lbrke;\",\"⦏\":\"&lbrksld;\",\"⦍\":\"&lbrkslu;\",\"ľ\":\"&lcaron;\",\"ļ\":\"&lcedil;\",\"л\":\"&lcy;\",\"⤶\":\"&ldca;\",\"⥧\":\"&ldrdhar;\",\"⥋\":\"&ldrushar;\",\"↲\":\"&ldsh;\",\"≤\":\"&leq;\",\"⇇\":\"&llarr;\",\"⋋\":\"&lthree;\",\"⪨\":\"&lescc;\",\"⩿\":\"&lesdot;\",\"⪁\":\"&lesdoto;\",\"⪃\":\"&lesdotor;\",\"⋚︀\":\"&lesg;\",\"⪓\":\"&lesges;\",\"⋖\":\"&ltdot;\",\"⥼\":\"&lfisht;\",\"𝔩\":\"&lfr;\",\"⪑\":\"&lgE;\",\"⥪\":\"&lharul;\",\"▄\":\"&lhblk;\",\"љ\":\"&ljcy;\",\"⥫\":\"&llhard;\",\"◺\":\"&lltri;\",\"ŀ\":\"&lmidot;\",\"⎰\":\"&lmoustache;\",\"≨\":\"&lneqq;\",\"⪉\":\"&lnapprox;\",\"⪇\":\"&lneq;\",\"⋦\":\"&lnsim;\",\"⟬\":\"&loang;\",\"⇽\":\"&loarr;\",\"⟼\":\"&xmap;\",\"↬\":\"&rarrlp;\",\"⦅\":\"&lopar;\",\"𝕝\":\"&lopf;\",\"⨭\":\"&loplus;\",\"⨴\":\"&lotimes;\",\"∗\":\"&lowast;\",\"◊\":\"&lozenge;\",\"(\":\"&lpar;\",\"⦓\":\"&lparlt;\",\"⥭\":\"&lrhard;\",\"‎\":\"&lrm;\",\"⊿\":\"&lrtri;\",\"‹\":\"&lsaquo;\",\"𝓁\":\"&lscr;\",\"⪍\":\"&lsime;\",\"⪏\":\"&lsimg;\",\"‚\":\"&sbquo;\",\"ł\":\"&lstrok;\",\"⪦\":\"&ltcc;\",\"⩹\":\"&ltcir;\",\"⋉\":\"&ltimes;\",\"⥶\":\"&ltlarr;\",\"⩻\":\"&ltquest;\",\"⦖\":\"&ltrPar;\",\"◃\":\"&triangleleft;\",\"⥊\":\"&lurdshar;\",\"⥦\":\"&luruhar;\",\"≨︀\":\"&lvnE;\",\"∺\":\"&mDDot;\",\"¯\":\"&strns;\",\"♂\":\"&male;\",\"✠\":\"&maltese;\",\"▮\":\"&marker;\",\"⨩\":\"&mcomma;\",\"м\":\"&mcy;\",\"—\":\"&mdash;\",\"𝔪\":\"&mfr;\",\"℧\":\"&mho;\",\"µ\":\"&micro;\",\"⫰\":\"&midcir;\",\"−\":\"&minus;\",\"⨪\":\"&minusdu;\",\"⫛\":\"&mlcp;\",\"⊧\":\"&models;\",\"𝕞\":\"&mopf;\",\"𝓂\":\"&mscr;\",\"μ\":\"&mu;\",\"⊸\":\"&mumap;\",\"⋙̸\":\"&nGg;\",\"≫⃒\":\"&nGt;\",\"⇍\":\"&nlArr;\",\"⇎\":\"&nhArr;\",\"⋘̸\":\"&nLl;\",\"≪⃒\":\"&nLt;\",\"⇏\":\"&nrArr;\",\"⊯\":\"&nVDash;\",\"⊮\":\"&nVdash;\",\"ń\":\"&nacute;\",\"∠⃒\":\"&nang;\",\"⩰̸\":\"&napE;\",\"≋̸\":\"&napid;\",\"ŉ\":\"&napos;\",\"♮\":\"&natural;\",\"⩃\":\"&ncap;\",\"ň\":\"&ncaron;\",\"ņ\":\"&ncedil;\",\"⩭̸\":\"&ncongdot;\",\"⩂\":\"&ncup;\",\"н\":\"&ncy;\",\"–\":\"&ndash;\",\"⇗\":\"&neArr;\",\"⤤\":\"&nearhk;\",\"≐̸\":\"&nedot;\",\"⤨\":\"&toea;\",\"𝔫\":\"&nfr;\",\"↮\":\"&nleftrightarrow;\",\"⫲\":\"&nhpar;\",\"⋼\":\"&nis;\",\"⋺\":\"&nisd;\",\"њ\":\"&njcy;\",\"≦̸\":\"&nleqq;\",\"↚\":\"&nleftarrow;\",\"‥\":\"&nldr;\",\"𝕟\":\"&nopf;\",\"¬\":\"&not;\",\"⋹̸\":\"&notinE;\",\"⋵̸\":\"&notindot;\",\"⋷\":\"&notinvb;\",\"⋶\":\"&notinvc;\",\"⋾\":\"&notnivb;\",\"⋽\":\"&notnivc;\",\"⫽⃥\":\"&nparsl;\",\"∂̸\":\"&npart;\",\"⨔\":\"&npolint;\",\"↛\":\"&nrightarrow;\",\"⤳̸\":\"&nrarrc;\",\"↝̸\":\"&nrarrw;\",\"𝓃\":\"&nscr;\",\"⊄\":\"&nsub;\",\"⫅̸\":\"&nsubseteqq;\",\"⊅\":\"&nsup;\",\"⫆̸\":\"&nsupseteqq;\",\"ñ\":\"&ntilde;\",\"ν\":\"&nu;\",\"#\":\"&num;\",\"№\":\"&numero;\",\" \":\"&numsp;\",\"⊭\":\"&nvDash;\",\"⤄\":\"&nvHarr;\",\"≍⃒\":\"&nvap;\",\"⊬\":\"&nvdash;\",\"≥⃒\":\"&nvge;\",\">⃒\":\"&nvgt;\",\"⧞\":\"&nvinfin;\",\"⤂\":\"&nvlArr;\",\"≤⃒\":\"&nvle;\",\"<⃒\":\"&nvlt;\",\"⊴⃒\":\"&nvltrie;\",\"⤃\":\"&nvrArr;\",\"⊵⃒\":\"&nvrtrie;\",\"∼⃒\":\"&nvsim;\",\"⇖\":\"&nwArr;\",\"⤣\":\"&nwarhk;\",\"⤧\":\"&nwnear;\",\"ó\":\"&oacute;\",\"ô\":\"&ocirc;\",\"о\":\"&ocy;\",\"ő\":\"&odblac;\",\"⨸\":\"&odiv;\",\"⦼\":\"&odsold;\",\"œ\":\"&oelig;\",\"⦿\":\"&ofcir;\",\"𝔬\":\"&ofr;\",\"˛\":\"&ogon;\",\"ò\":\"&ograve;\",\"⧁\":\"&ogt;\",\"⦵\":\"&ohbar;\",\"⦾\":\"&olcir;\",\"⦻\":\"&olcross;\",\"⧀\":\"&olt;\",\"ō\":\"&omacr;\",\"ω\":\"&omega;\",\"ο\":\"&omicron;\",\"⦶\":\"&omid;\",\"𝕠\":\"&oopf;\",\"⦷\":\"&opar;\",\"⦹\":\"&operp;\",\"∨\":\"&vee;\",\"⩝\":\"&ord;\",\"ℴ\":\"&oscr;\",\"ª\":\"&ordf;\",\"º\":\"&ordm;\",\"⊶\":\"&origof;\",\"⩖\":\"&oror;\",\"⩗\":\"&orslope;\",\"⩛\":\"&orv;\",\"ø\":\"&oslash;\",\"⊘\":\"&osol;\",\"õ\":\"&otilde;\",\"⨶\":\"&otimesas;\",\"ö\":\"&ouml;\",\"⌽\":\"&ovbar;\",\"¶\":\"&para;\",\"⫳\":\"&parsim;\",\"⫽\":\"&parsl;\",\"п\":\"&pcy;\",\"%\":\"&percnt;\",\".\":\"&period;\",\"‰\":\"&permil;\",\"‱\":\"&pertenk;\",\"𝔭\":\"&pfr;\",\"φ\":\"&phi;\",\"ϕ\":\"&varphi;\",\"☎\":\"&phone;\",\"π\":\"&pi;\",\"ϖ\":\"&varpi;\",\"ℎ\":\"&planckh;\",\"+\":\"&plus;\",\"⨣\":\"&plusacir;\",\"⨢\":\"&pluscir;\",\"⨥\":\"&plusdu;\",\"⩲\":\"&pluse;\",\"⨦\":\"&plussim;\",\"⨧\":\"&plustwo;\",\"⨕\":\"&pointint;\",\"𝕡\":\"&popf;\",\"£\":\"&pound;\",\"⪳\":\"&prE;\",\"⪷\":\"&precapprox;\",\"⪹\":\"&prnap;\",\"⪵\":\"&prnE;\",\"⋨\":\"&prnsim;\",\"′\":\"&prime;\",\"⌮\":\"&profalar;\",\"⌒\":\"&profline;\",\"⌓\":\"&profsurf;\",\"⊰\":\"&prurel;\",\"𝓅\":\"&pscr;\",\"ψ\":\"&psi;\",\" \":\"&puncsp;\",\"𝔮\":\"&qfr;\",\"𝕢\":\"&qopf;\",\"⁗\":\"&qprime;\",\"𝓆\":\"&qscr;\",\"⨖\":\"&quatint;\",\"?\":\"&quest;\",\"⤜\":\"&rAtail;\",\"⥤\":\"&rHar;\",\"∽̱\":\"&race;\",\"ŕ\":\"&racute;\",\"⦳\":\"&raemptyv;\",\"⦒\":\"&rangd;\",\"⦥\":\"&range;\",\"»\":\"&raquo;\",\"⥵\":\"&rarrap;\",\"⤠\":\"&rarrbfs;\",\"⤳\":\"&rarrc;\",\"⤞\":\"&rarrfs;\",\"⥅\":\"&rarrpl;\",\"⥴\":\"&rarrsim;\",\"↣\":\"&rightarrowtail;\",\"↝\":\"&rightsquigarrow;\",\"⤚\":\"&ratail;\",\"∶\":\"&ratio;\",\"❳\":\"&rbbrk;\",\"}\":\"&rcub;\",\"]\":\"&rsqb;\",\"⦌\":\"&rbrke;\",\"⦎\":\"&rbrksld;\",\"⦐\":\"&rbrkslu;\",\"ř\":\"&rcaron;\",\"ŗ\":\"&rcedil;\",\"р\":\"&rcy;\",\"⤷\":\"&rdca;\",\"⥩\":\"&rdldhar;\",\"↳\":\"&rdsh;\",\"▭\":\"&rect;\",\"⥽\":\"&rfisht;\",\"𝔯\":\"&rfr;\",\"⥬\":\"&rharul;\",\"ρ\":\"&rho;\",\"ϱ\":\"&varrho;\",\"⇉\":\"&rrarr;\",\"⋌\":\"&rthree;\",\"˚\":\"&ring;\",\"‏\":\"&rlm;\",\"⎱\":\"&rmoustache;\",\"⫮\":\"&rnmid;\",\"⟭\":\"&roang;\",\"⇾\":\"&roarr;\",\"⦆\":\"&ropar;\",\"𝕣\":\"&ropf;\",\"⨮\":\"&roplus;\",\"⨵\":\"&rotimes;\",\")\":\"&rpar;\",\"⦔\":\"&rpargt;\",\"⨒\":\"&rppolint;\",\"›\":\"&rsaquo;\",\"𝓇\":\"&rscr;\",\"⋊\":\"&rtimes;\",\"▹\":\"&triangleright;\",\"⧎\":\"&rtriltri;\",\"⥨\":\"&ruluhar;\",\"℞\":\"&rx;\",\"ś\":\"&sacute;\",\"⪴\":\"&scE;\",\"⪸\":\"&succapprox;\",\"š\":\"&scaron;\",\"ş\":\"&scedil;\",\"ŝ\":\"&scirc;\",\"⪶\":\"&succneqq;\",\"⪺\":\"&succnapprox;\",\"⋩\":\"&succnsim;\",\"⨓\":\"&scpolint;\",\"с\":\"&scy;\",\"⋅\":\"&sdot;\",\"⩦\":\"&sdote;\",\"⇘\":\"&seArr;\",\"§\":\"&sect;\",\";\":\"&semi;\",\"⤩\":\"&tosa;\",\"✶\":\"&sext;\",\"𝔰\":\"&sfr;\",\"♯\":\"&sharp;\",\"щ\":\"&shchcy;\",\"ш\":\"&shcy;\",\"­\":\"&shy;\",\"σ\":\"&sigma;\",\"ς\":\"&varsigma;\",\"⩪\":\"&simdot;\",\"⪞\":\"&simg;\",\"⪠\":\"&simgE;\",\"⪝\":\"&siml;\",\"⪟\":\"&simlE;\",\"≆\":\"&simne;\",\"⨤\":\"&simplus;\",\"⥲\":\"&simrarr;\",\"⨳\":\"&smashp;\",\"⧤\":\"&smeparsl;\",\"⌣\":\"&ssmile;\",\"⪪\":\"&smt;\",\"⪬\":\"&smte;\",\"⪬︀\":\"&smtes;\",\"ь\":\"&softcy;\",\"/\":\"&sol;\",\"⧄\":\"&solb;\",\"⌿\":\"&solbar;\",\"𝕤\":\"&sopf;\",\"♠\":\"&spadesuit;\",\"⊓︀\":\"&sqcaps;\",\"⊔︀\":\"&sqcups;\",\"𝓈\":\"&sscr;\",\"☆\":\"&star;\",\"⊂\":\"&subset;\",\"⫅\":\"&subseteqq;\",\"⪽\":\"&subdot;\",\"⫃\":\"&subedot;\",\"⫁\":\"&submult;\",\"⫋\":\"&subsetneqq;\",\"⊊\":\"&subsetneq;\",\"⪿\":\"&subplus;\",\"⥹\":\"&subrarr;\",\"⫇\":\"&subsim;\",\"⫕\":\"&subsub;\",\"⫓\":\"&subsup;\",\"♪\":\"&sung;\",\"¹\":\"&sup1;\",\"²\":\"&sup2;\",\"³\":\"&sup3;\",\"⫆\":\"&supseteqq;\",\"⪾\":\"&supdot;\",\"⫘\":\"&supdsub;\",\"⫄\":\"&supedot;\",\"⟉\":\"&suphsol;\",\"⫗\":\"&suphsub;\",\"⥻\":\"&suplarr;\",\"⫂\":\"&supmult;\",\"⫌\":\"&supsetneqq;\",\"⊋\":\"&supsetneq;\",\"⫀\":\"&supplus;\",\"⫈\":\"&supsim;\",\"⫔\":\"&supsub;\",\"⫖\":\"&supsup;\",\"⇙\":\"&swArr;\",\"⤪\":\"&swnwar;\",\"ß\":\"&szlig;\",\"⌖\":\"&target;\",\"τ\":\"&tau;\",\"ť\":\"&tcaron;\",\"ţ\":\"&tcedil;\",\"т\":\"&tcy;\",\"⌕\":\"&telrec;\",\"𝔱\":\"&tfr;\",\"θ\":\"&theta;\",\"ϑ\":\"&vartheta;\",\"þ\":\"&thorn;\",\"×\":\"&times;\",\"⨱\":\"&timesbar;\",\"⨰\":\"&timesd;\",\"⌶\":\"&topbot;\",\"⫱\":\"&topcir;\",\"𝕥\":\"&topf;\",\"⫚\":\"&topfork;\",\"‴\":\"&tprime;\",\"▵\":\"&utri;\",\"≜\":\"&trie;\",\"◬\":\"&tridot;\",\"⨺\":\"&triminus;\",\"⨹\":\"&triplus;\",\"⧍\":\"&trisb;\",\"⨻\":\"&tritime;\",\"⏢\":\"&trpezium;\",\"𝓉\":\"&tscr;\",\"ц\":\"&tscy;\",\"ћ\":\"&tshcy;\",\"ŧ\":\"&tstrok;\",\"⥣\":\"&uHar;\",\"ú\":\"&uacute;\",\"ў\":\"&ubrcy;\",\"ŭ\":\"&ubreve;\",\"û\":\"&ucirc;\",\"у\":\"&ucy;\",\"ű\":\"&udblac;\",\"⥾\":\"&ufisht;\",\"𝔲\":\"&ufr;\",\"ù\":\"&ugrave;\",\"▀\":\"&uhblk;\",\"⌜\":\"&ulcorner;\",\"⌏\":\"&ulcrop;\",\"◸\":\"&ultri;\",\"ū\":\"&umacr;\",\"ų\":\"&uogon;\",\"𝕦\":\"&uopf;\",\"υ\":\"&upsilon;\",\"⇈\":\"&uuarr;\",\"⌝\":\"&urcorner;\",\"⌎\":\"&urcrop;\",\"ů\":\"&uring;\",\"◹\":\"&urtri;\",\"𝓊\":\"&uscr;\",\"⋰\":\"&utdot;\",\"ũ\":\"&utilde;\",\"ü\":\"&uuml;\",\"⦧\":\"&uwangle;\",\"⫨\":\"&vBar;\",\"⫩\":\"&vBarv;\",\"⦜\":\"&vangrt;\",\"⊊︀\":\"&vsubne;\",\"⫋︀\":\"&vsubnE;\",\"⊋︀\":\"&vsupne;\",\"⫌︀\":\"&vsupnE;\",\"в\":\"&vcy;\",\"⊻\":\"&veebar;\",\"≚\":\"&veeeq;\",\"⋮\":\"&vellip;\",\"𝔳\":\"&vfr;\",\"𝕧\":\"&vopf;\",\"𝓋\":\"&vscr;\",\"⦚\":\"&vzigzag;\",\"ŵ\":\"&wcirc;\",\"⩟\":\"&wedbar;\",\"≙\":\"&wedgeq;\",\"℘\":\"&wp;\",\"𝔴\":\"&wfr;\",\"𝕨\":\"&wopf;\",\"𝓌\":\"&wscr;\",\"𝔵\":\"&xfr;\",\"ξ\":\"&xi;\",\"⋻\":\"&xnis;\",\"𝕩\":\"&xopf;\",\"𝓍\":\"&xscr;\",\"ý\":\"&yacute;\",\"я\":\"&yacy;\",\"ŷ\":\"&ycirc;\",\"ы\":\"&ycy;\",\"¥\":\"&yen;\",\"𝔶\":\"&yfr;\",\"ї\":\"&yicy;\",\"𝕪\":\"&yopf;\",\"𝓎\":\"&yscr;\",\"ю\":\"&yucy;\",\"ÿ\":\"&yuml;\",\"ź\":\"&zacute;\",\"ž\":\"&zcaron;\",\"з\":\"&zcy;\",\"ż\":\"&zdot;\",\"ζ\":\"&zeta;\",\"𝔷\":\"&zfr;\",\"ж\":\"&zhcy;\",\"⇝\":\"&zigrarr;\",\"𝕫\":\"&zopf;\",\"𝓏\":\"&zscr;\",\"‍\":\"&zwj;\",\"‌\":\"&zwnj;\"}}};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.fromCodePoint=String.fromCodePoint||function(astralCodePoint){return String.fromCharCode(Math.floor((astralCodePoint-65536)/1024)+55296,(astralCodePoint-65536)%1024+56320)};exports.getCodePoint=String.prototype.codePointAt?function(input,position){return input.codePointAt(position)}:function(input,position){return(input.charCodeAt(position)-55296)*1024+input.charCodeAt(position+1)-56320+65536};exports.highSurrogateFrom=55296;exports.highSurrogateTo=56319;"],"sourceRoot":""}